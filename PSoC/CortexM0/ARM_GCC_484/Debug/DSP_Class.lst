ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"DSP_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	tempArray,8,4
  18              		.comm	tempArrayPtr,4,4
  19              		.comm	soilHumArray,24,4
  20              		.comm	soilHumPtr,24,4
  21              		.comm	temp,1,1
  22              		.comm	soilHum,6,4
  23              		.section	.text.initDSP,"ax",%progbits
  24              		.align	2
  25              		.global	initDSP
  26              		.code	16
  27              		.thumb_func
  28              		.type	initDSP, %function
  29              	initDSP:
  30              	.LFB33:
  31              		.file 1 ".\\DSP_Class.c"
   1:.\DSP_Class.c **** /* ========================================
   2:.\DSP_Class.c ****  * 
   3:.\DSP_Class.c ****  * AutoGreen - PSoC_Master
   4:.\DSP_Class.c ****  * DSP_Class.c
   5:.\DSP_Class.c ****  * Digital signal processing
   6:.\DSP_Class.c ****  * PRJ3 - GRP9
   7:.\DSP_Class.c ****  * 2015-04-15
   8:.\DSP_Class.c ****  *
   9:.\DSP_Class.c ****  * ========================================
  10:.\DSP_Class.c **** */
  11:.\DSP_Class.c **** 
  12:.\DSP_Class.c **** // Include files
  13:.\DSP_Class.c **** #include "DSP_Class.h"
  14:.\DSP_Class.c **** 
  15:.\DSP_Class.c **** //----------PrivateDataMembers0----------
  16:.\DSP_Class.c **** // Private data members
  17:.\DSP_Class.c **** int32 tempArray[ARRAYSIZE];
  18:.\DSP_Class.c **** int32* tempArrayPtr;
  19:.\DSP_Class.c **** int16 soilHumArray[NBR_OF_SOILHUM_SENSORS][ARRAYSIZE];
  20:.\DSP_Class.c **** int16* soilHumPtr[NBR_OF_SOILHUM_SENSORS];
  21:.\DSP_Class.c **** uint8 temp, soilHum[NBR_OF_SOILHUM_SENSORS];
  22:.\DSP_Class.c **** //----------PrivateDataMembers1----------
  23:.\DSP_Class.c **** 
  24:.\DSP_Class.c **** // Private prototypes
  25:.\DSP_Class.c **** void avgTemp(void);
  26:.\DSP_Class.c **** void avgSoilHum(uint8 index);
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 2


  27:.\DSP_Class.c **** 
  28:.\DSP_Class.c **** // Init: All datamebers are initialized with -1, meaning they are empty
  29:.\DSP_Class.c **** void initDSP(void){
  32              		.loc 1 29 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  42              	.LBB2:
  30:.\DSP_Class.c ****     {
  31:.\DSP_Class.c ****         uint8 i;
  32:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  43              		.loc 1 32 0
  44 0006 FB1D     		add	r3, r7, #7
  45 0008 0022     		mov	r2, #0
  46 000a 1A70     		strb	r2, [r3]
  47 000c 23E0     		b	.L2
  48              	.L5:
  33:.\DSP_Class.c ****             tempArray[i] = EMPTY;
  49              		.loc 1 33 0
  50 000e FB1D     		add	r3, r7, #7
  51 0010 1A78     		ldrb	r2, [r3]
  52 0012 254B     		ldr	r3, .L8
  53 0014 9200     		lsl	r2, r2, #2
  54 0016 0121     		mov	r1, #1
  55 0018 4942     		neg	r1, r1
  56 001a D150     		str	r1, [r2, r3]
  57              	.LBB3:
  34:.\DSP_Class.c ****             {
  35:.\DSP_Class.c ****                 uint8 j;
  36:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  58              		.loc 1 36 0
  59 001c BB1D     		add	r3, r7, #6
  60 001e 0022     		mov	r2, #0
  61 0020 1A70     		strb	r2, [r3]
  62 0022 0FE0     		b	.L3
  63              	.L4:
  37:.\DSP_Class.c ****                     soilHumArray[j][i] = EMPTY;
  64              		.loc 1 37 0 discriminator 2
  65 0024 BB1D     		add	r3, r7, #6
  66 0026 1978     		ldrb	r1, [r3]
  67 0028 FB1D     		add	r3, r7, #7
  68 002a 1A78     		ldrb	r2, [r3]
  69 002c 1F4B     		ldr	r3, .L8+4
  70 002e 4900     		lsl	r1, r1, #1
  71 0030 8A18     		add	r2, r1, r2
  72 0032 5200     		lsl	r2, r2, #1
  73 0034 0121     		mov	r1, #1
  74 0036 4942     		neg	r1, r1
  75 0038 D152     		strh	r1, [r2, r3]
  36:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  76              		.loc 1 36 0 discriminator 2
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 3


  77 003a BB1D     		add	r3, r7, #6
  78 003c 1A78     		ldrb	r2, [r3]
  79 003e BB1D     		add	r3, r7, #6
  80 0040 0132     		add	r2, r2, #1
  81 0042 1A70     		strb	r2, [r3]
  82              	.L3:
  36:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  83              		.loc 1 36 0 is_stmt 0 discriminator 1
  84 0044 BB1D     		add	r3, r7, #6
  85 0046 1B78     		ldrb	r3, [r3]
  86 0048 052B     		cmp	r3, #5
  87 004a EBD9     		bls	.L4
  88              	.LBE3:
  32:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  89              		.loc 1 32 0 is_stmt 1
  90 004c FB1D     		add	r3, r7, #7
  91 004e 1A78     		ldrb	r2, [r3]
  92 0050 FB1D     		add	r3, r7, #7
  93 0052 0132     		add	r2, r2, #1
  94 0054 1A70     		strb	r2, [r3]
  95              	.L2:
  32:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  96              		.loc 1 32 0 is_stmt 0 discriminator 1
  97 0056 FB1D     		add	r3, r7, #7
  98 0058 1B78     		ldrb	r3, [r3]
  99 005a 012B     		cmp	r3, #1
 100 005c D7D9     		bls	.L5
 101              	.LBE2:
  38:.\DSP_Class.c ****                 }
  39:.\DSP_Class.c ****             }
  40:.\DSP_Class.c ****             
  41:.\DSP_Class.c ****         }
  42:.\DSP_Class.c ****     }
  43:.\DSP_Class.c ****     tempArrayPtr = & tempArray[0];
 102              		.loc 1 43 0 is_stmt 1
 103 005e 144B     		ldr	r3, .L8+8
 104 0060 114A     		ldr	r2, .L8
 105 0062 1A60     		str	r2, [r3]
 106              	.LBB4:
  44:.\DSP_Class.c ****     {
  45:.\DSP_Class.c ****         uint8 k;
  46:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 107              		.loc 1 46 0
 108 0064 7B1D     		add	r3, r7, #5
 109 0066 0022     		mov	r2, #0
 110 0068 1A70     		strb	r2, [r3]
 111 006a 13E0     		b	.L6
 112              	.L7:
  47:.\DSP_Class.c ****             soilHumPtr[k] = & soilHumArray[k][0];
 113              		.loc 1 47 0 discriminator 2
 114 006c 7B1D     		add	r3, r7, #5
 115 006e 1A78     		ldrb	r2, [r3]
 116 0070 7B1D     		add	r3, r7, #5
 117 0072 1B78     		ldrb	r3, [r3]
 118 0074 9900     		lsl	r1, r3, #2
 119 0076 0D4B     		ldr	r3, .L8+4
 120 0078 C918     		add	r1, r1, r3
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 4


 121 007a 0E4B     		ldr	r3, .L8+12
 122 007c 9200     		lsl	r2, r2, #2
 123 007e D150     		str	r1, [r2, r3]
  48:.\DSP_Class.c ****             soilHum[k] = 0; 
 124              		.loc 1 48 0 discriminator 2
 125 0080 7B1D     		add	r3, r7, #5
 126 0082 1B78     		ldrb	r3, [r3]
 127 0084 0C4A     		ldr	r2, .L8+16
 128 0086 0021     		mov	r1, #0
 129 0088 D154     		strb	r1, [r2, r3]
  46:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 130              		.loc 1 46 0 discriminator 2
 131 008a 7B1D     		add	r3, r7, #5
 132 008c 1A78     		ldrb	r2, [r3]
 133 008e 7B1D     		add	r3, r7, #5
 134 0090 0132     		add	r2, r2, #1
 135 0092 1A70     		strb	r2, [r3]
 136              	.L6:
  46:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 137              		.loc 1 46 0 is_stmt 0 discriminator 1
 138 0094 7B1D     		add	r3, r7, #5
 139 0096 1B78     		ldrb	r3, [r3]
 140 0098 052B     		cmp	r3, #5
 141 009a E7D9     		bls	.L7
 142              	.LBE4:
  49:.\DSP_Class.c ****             }
  50:.\DSP_Class.c ****     }
  51:.\DSP_Class.c ****     temp = 0;
 143              		.loc 1 51 0 is_stmt 1
 144 009c 074B     		ldr	r3, .L8+20
 145 009e 0022     		mov	r2, #0
 146 00a0 1A70     		strb	r2, [r3]
  52:.\DSP_Class.c **** }
 147              		.loc 1 52 0
 148 00a2 BD46     		mov	sp, r7
 149 00a4 02B0     		add	sp, sp, #8
 150              		@ sp needed
 151 00a6 80BD     		pop	{r7, pc}
 152              	.L9:
 153              		.align	2
 154              	.L8:
 155 00a8 00000000 		.word	tempArray
 156 00ac 00000000 		.word	soilHumArray
 157 00b0 00000000 		.word	tempArrayPtr
 158 00b4 00000000 		.word	soilHumPtr
 159 00b8 00000000 		.word	soilHum
 160 00bc 00000000 		.word	temp
 161              		.cfi_endproc
 162              	.LFE33:
 163              		.size	initDSP, .-initDSP
 164              		.section	.text.getTemp_DSP,"ax",%progbits
 165              		.align	2
 166              		.global	getTemp_DSP
 167              		.code	16
 168              		.thumb_func
 169              		.type	getTemp_DSP, %function
 170              	getTemp_DSP:
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 5


 171              	.LFB34:
  53:.\DSP_Class.c **** 
  54:.\DSP_Class.c **** //----------getTemp_DSP0----------
  55:.\DSP_Class.c **** uint8 getTemp_DSP(void){
 172              		.loc 1 55 0
 173              		.cfi_startproc
 174 0000 80B5     		push	{r7, lr}
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
  56:.\DSP_Class.c ****     return temp;
 180              		.loc 1 56 0
 181 0004 024B     		ldr	r3, .L12
 182 0006 1B78     		ldrb	r3, [r3]
  57:.\DSP_Class.c **** }
 183              		.loc 1 57 0
 184 0008 181C     		mov	r0, r3
 185 000a BD46     		mov	sp, r7
 186              		@ sp needed
 187 000c 80BD     		pop	{r7, pc}
 188              	.L13:
 189 000e C046     		.align	2
 190              	.L12:
 191 0010 00000000 		.word	temp
 192              		.cfi_endproc
 193              	.LFE34:
 194              		.size	getTemp_DSP, .-getTemp_DSP
 195              		.section	.text.getSoilHum_DSP,"ax",%progbits
 196              		.align	2
 197              		.global	getSoilHum_DSP
 198              		.code	16
 199              		.thumb_func
 200              		.type	getSoilHum_DSP, %function
 201              	getSoilHum_DSP:
 202              	.LFB35:
  58:.\DSP_Class.c **** //----------getTemp_DSP1----------
  59:.\DSP_Class.c **** 
  60:.\DSP_Class.c **** 
  61:.\DSP_Class.c **** uint8 getSoilHum_DSP(uint8 index){
 203              		.loc 1 61 0
 204              		.cfi_startproc
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 82B0     		sub	sp, sp, #8
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 213 0006 021C     		mov	r2, r0
 214 0008 FB1D     		add	r3, r7, #7
 215 000a 1A70     		strb	r2, [r3]
  62:.\DSP_Class.c ****     return soilHum[index];
 216              		.loc 1 62 0
 217 000c FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 6


 218 000e 1B78     		ldrb	r3, [r3]
 219 0010 024A     		ldr	r2, .L16
 220 0012 D35C     		ldrb	r3, [r2, r3]
  63:.\DSP_Class.c **** }
 221              		.loc 1 63 0
 222 0014 181C     		mov	r0, r3
 223 0016 BD46     		mov	sp, r7
 224 0018 02B0     		add	sp, sp, #8
 225              		@ sp needed
 226 001a 80BD     		pop	{r7, pc}
 227              	.L17:
 228              		.align	2
 229              	.L16:
 230 001c 00000000 		.word	soilHum
 231              		.cfi_endproc
 232              	.LFE35:
 233              		.size	getSoilHum_DSP, .-getSoilHum_DSP
 234              		.global	__aeabi_ldivmod
 235              		.section	.text.avgTemp,"ax",%progbits
 236              		.align	2
 237              		.global	avgTemp
 238              		.code	16
 239              		.thumb_func
 240              		.type	avgTemp, %function
 241              	avgTemp:
 242              	.LFB36:
  64:.\DSP_Class.c **** 
  65:.\DSP_Class.c **** 
  66:.\DSP_Class.c **** //----------avgTemp0----------
  67:.\DSP_Class.c **** void avgTemp(void){
 243              		.loc 1 67 0
 244              		.cfi_startproc
 245 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 246              		.cfi_def_cfa_offset 20
 247              		.cfi_offset 4, -20
 248              		.cfi_offset 5, -16
 249              		.cfi_offset 6, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 87B0     		sub	sp, sp, #28
 253              		.cfi_def_cfa_offset 48
 254 0004 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
  68:.\DSP_Class.c ****     uint8 skip = 0;
 256              		.loc 1 68 0
 257 0006 381C     		mov	r0, r7
 258 0008 1730     		add	r0, r0, #23
 259 000a 0025     		mov	r5, #0
 260 000c 0570     		strb	r5, [r0]
  69:.\DSP_Class.c ****     int64 total = 0;
 261              		.loc 1 69 0
 262 000e 0025     		mov	r5, #0
 263 0010 0026     		mov	r6, #0
 264 0012 BD60     		str	r5, [r7, #8]
 265 0014 FE60     		str	r6, [r7, #12]
 266              	.LBB5:
  70:.\DSP_Class.c ****     {
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 7


  71:.\DSP_Class.c ****         uint8 i;
  72:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 267              		.loc 1 72 0
 268 0016 F81D     		add	r0, r7, #7
 269 0018 0025     		mov	r5, #0
 270 001a 0570     		strb	r5, [r0]
 271 001c 21E0     		b	.L19
 272              	.L22:
  73:.\DSP_Class.c ****             if(tempArray[i]>=0){
 273              		.loc 1 73 0
 274 001e F81D     		add	r0, r7, #7
 275 0020 0578     		ldrb	r5, [r0]
 276 0022 2B48     		ldr	r0, .L28
 277 0024 AD00     		lsl	r5, r5, #2
 278 0026 2858     		ldr	r0, [r5, r0]
 279 0028 0028     		cmp	r0, #0
 280 002a 0EDB     		blt	.L20
  74:.\DSP_Class.c ****                 total += tempArray[i];
 281              		.loc 1 74 0
 282 002c F81D     		add	r0, r7, #7
 283 002e 0578     		ldrb	r5, [r0]
 284 0030 2748     		ldr	r0, .L28
 285 0032 AD00     		lsl	r5, r5, #2
 286 0034 2858     		ldr	r0, [r5, r0]
 287 0036 011C     		mov	r1, r0
 288 0038 C017     		asr	r0, r0, #31
 289 003a 021C     		mov	r2, r0
 290 003c BD68     		ldr	r5, [r7, #8]
 291 003e FE68     		ldr	r6, [r7, #12]
 292 0040 6D18     		add	r5, r5, r1
 293 0042 5641     		adc	r6, r6, r2
 294 0044 BD60     		str	r5, [r7, #8]
 295 0046 FE60     		str	r6, [r7, #12]
 296 0048 06E0     		b	.L21
 297              	.L20:
  75:.\DSP_Class.c ****             }
  76:.\DSP_Class.c ****             else{
  77:.\DSP_Class.c ****                 skip++;
 298              		.loc 1 77 0
 299 004a 381C     		mov	r0, r7
 300 004c 1730     		add	r0, r0, #23
 301 004e 0578     		ldrb	r5, [r0]
 302 0050 381C     		mov	r0, r7
 303 0052 1730     		add	r0, r0, #23
 304 0054 0135     		add	r5, r5, #1
 305 0056 0570     		strb	r5, [r0]
 306              	.L21:
  72:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 307              		.loc 1 72 0
 308 0058 F81D     		add	r0, r7, #7
 309 005a 0578     		ldrb	r5, [r0]
 310 005c F81D     		add	r0, r7, #7
 311 005e 0135     		add	r5, r5, #1
 312 0060 0570     		strb	r5, [r0]
 313              	.L19:
  72:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 314              		.loc 1 72 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 8


 315 0062 F81D     		add	r0, r7, #7
 316 0064 0078     		ldrb	r0, [r0]
 317 0066 0128     		cmp	r0, #1
 318 0068 D9D9     		bls	.L22
 319              	.LBE5:
  78:.\DSP_Class.c ****             }
  79:.\DSP_Class.c ****         }
  80:.\DSP_Class.c ****     }
  81:.\DSP_Class.c ****     // Makes sure that enough datapoints are pressent
  82:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 320              		.loc 1 82 0 is_stmt 1
 321 006a 3A1C     		mov	r2, r7
 322 006c 1732     		add	r2, r2, #23
 323 006e 1278     		ldrb	r2, [r2]
 324 0070 0221     		mov	r1, #2
 325 0072 8A1A     		sub	r2, r1, r2
 326 0074 012A     		cmp	r2, #1
 327 0076 24DD     		ble	.L23
 328              	.LBB6:
  83:.\DSP_Class.c ****         int32 avg = total/(ARRAYSIZE-skip);     // Calculate the average value
 329              		.loc 1 83 0
 330 0078 3A1C     		mov	r2, r7
 331 007a 1732     		add	r2, r2, #23
 332 007c 1278     		ldrb	r2, [r2]
 333 007e 0221     		mov	r1, #2
 334 0080 8A1A     		sub	r2, r1, r2
 335 0082 131C     		mov	r3, r2
 336 0084 D217     		asr	r2, r2, #31
 337 0086 141C     		mov	r4, r2
 338 0088 B868     		ldr	r0, [r7, #8]
 339 008a F968     		ldr	r1, [r7, #12]
 340 008c 1A1C     		mov	r2, r3
 341 008e 231C     		mov	r3, r4
 342 0090 FFF7FEFF 		bl	__aeabi_ldivmod
 343 0094 031C     		mov	r3, r0
 344 0096 0C1C     		mov	r4, r1
 345 0098 3B60     		str	r3, [r7]
  84:.\DSP_Class.c ****         
  85:.\DSP_Class.c ****         // temp is limited to 1 and 200
  86:.\DSP_Class.c ****         if (avg>200){
 346              		.loc 1 86 0
 347 009a 3B68     		ldr	r3, [r7]
 348 009c C82B     		cmp	r3, #200
 349 009e 03DD     		ble	.L24
  87:.\DSP_Class.c ****             temp = 200;
 350              		.loc 1 87 0
 351 00a0 0C4B     		ldr	r3, .L28+4
 352 00a2 C822     		mov	r2, #200
 353 00a4 1A70     		strb	r2, [r3]
 354 00a6 0BE0     		b	.L25
 355              	.L24:
  88:.\DSP_Class.c ****         }
  89:.\DSP_Class.c ****         else if (avg < 1){
 356              		.loc 1 89 0
 357 00a8 3B68     		ldr	r3, [r7]
 358 00aa 002B     		cmp	r3, #0
 359 00ac 03DC     		bgt	.L26
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 9


  90:.\DSP_Class.c ****             temp = 1;
 360              		.loc 1 90 0
 361 00ae 094B     		ldr	r3, .L28+4
 362 00b0 0122     		mov	r2, #1
 363 00b2 1A70     		strb	r2, [r3]
 364 00b4 04E0     		b	.L25
 365              	.L26:
  91:.\DSP_Class.c ****         }
  92:.\DSP_Class.c ****         else{
  93:.\DSP_Class.c ****             temp = (uint8)avg;
 366              		.loc 1 93 0
 367 00b6 3B68     		ldr	r3, [r7]
 368 00b8 DAB2     		uxtb	r2, r3
 369 00ba 064B     		ldr	r3, .L28+4
 370 00bc 1A70     		strb	r2, [r3]
 371              	.LBE6:
 372 00be 03E0     		b	.L18
 373              	.L25:
 374 00c0 02E0     		b	.L18
 375              	.L23:
  94:.\DSP_Class.c ****         }
  95:.\DSP_Class.c ****     }
  96:.\DSP_Class.c ****     else{
  97:.\DSP_Class.c ****         temp = 0;
 376              		.loc 1 97 0
 377 00c2 044B     		ldr	r3, .L28+4
 378 00c4 0022     		mov	r2, #0
 379 00c6 1A70     		strb	r2, [r3]
 380              	.L18:
  98:.\DSP_Class.c ****     }
  99:.\DSP_Class.c **** }
 381              		.loc 1 99 0
 382 00c8 BD46     		mov	sp, r7
 383 00ca 07B0     		add	sp, sp, #28
 384              		@ sp needed
 385 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 386              	.L29:
 387 00ce C046     		.align	2
 388              	.L28:
 389 00d0 00000000 		.word	tempArray
 390 00d4 00000000 		.word	temp
 391              		.cfi_endproc
 392              	.LFE36:
 393              		.size	avgTemp, .-avgTemp
 394              		.global	__aeabi_l2f
 395              		.global	__aeabi_f2uiz
 396              		.global	__aeabi_uidivmod
 397              		.global	__aeabi_idiv
 398              		.section	.text.avgSoilHum,"ax",%progbits
 399              		.align	2
 400              		.global	avgSoilHum
 401              		.code	16
 402              		.thumb_func
 403              		.type	avgSoilHum, %function
 404              	avgSoilHum:
 405              	.LFB37:
 100:.\DSP_Class.c **** //----------avgTemp1----------
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 10


 101:.\DSP_Class.c **** 
 102:.\DSP_Class.c **** void avgSoilHum(uint8 index){
 406              		.loc 1 102 0
 407              		.cfi_startproc
 408 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 409              		.cfi_def_cfa_offset 20
 410              		.cfi_offset 4, -20
 411              		.cfi_offset 5, -16
 412              		.cfi_offset 6, -12
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 89B0     		sub	sp, sp, #36
 416              		.cfi_def_cfa_offset 56
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 051C     		mov	r5, r0
 420 0008 F81D     		add	r0, r7, #7
 421 000a 0570     		strb	r5, [r0]
 103:.\DSP_Class.c ****     uint8 skip = 0;
 422              		.loc 1 103 0
 423 000c 381C     		mov	r0, r7
 424 000e 1F30     		add	r0, r0, #31
 425 0010 0025     		mov	r5, #0
 426 0012 0570     		strb	r5, [r0]
 104:.\DSP_Class.c ****     int64 total = 0;
 427              		.loc 1 104 0
 428 0014 0025     		mov	r5, #0
 429 0016 0026     		mov	r6, #0
 430 0018 3D61     		str	r5, [r7, #16]
 431 001a 7E61     		str	r6, [r7, #20]
 432              	.LBB7:
 105:.\DSP_Class.c ****     {
 106:.\DSP_Class.c ****         uint8 i;
 107:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 433              		.loc 1 107 0
 434 001c 381C     		mov	r0, r7
 435 001e 0F30     		add	r0, r0, #15
 436 0020 0025     		mov	r5, #0
 437 0022 0570     		strb	r5, [r0]
 438 0024 2FE0     		b	.L31
 439              	.L34:
 108:.\DSP_Class.c ****             if(soilHumArray[index][i]>=0){
 440              		.loc 1 108 0
 441 0026 F81D     		add	r0, r7, #7
 442 0028 0678     		ldrb	r6, [r0]
 443 002a 381C     		mov	r0, r7
 444 002c 0F30     		add	r0, r0, #15
 445 002e 0578     		ldrb	r5, [r0]
 446 0030 4448     		ldr	r0, .L39
 447 0032 7600     		lsl	r6, r6, #1
 448 0034 7519     		add	r5, r6, r5
 449 0036 6D00     		lsl	r5, r5, #1
 450 0038 285A     		ldrh	r0, [r5, r0]
 451 003a 00B2     		sxth	r0, r0
 452 003c 0028     		cmp	r0, #0
 453 003e 14DB     		blt	.L32
 109:.\DSP_Class.c ****                 total += soilHumArray[index][i];
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 11


 454              		.loc 1 109 0
 455 0040 F81D     		add	r0, r7, #7
 456 0042 0678     		ldrb	r6, [r0]
 457 0044 381C     		mov	r0, r7
 458 0046 0F30     		add	r0, r0, #15
 459 0048 0578     		ldrb	r5, [r0]
 460 004a 3E48     		ldr	r0, .L39
 461 004c 7600     		lsl	r6, r6, #1
 462 004e 7519     		add	r5, r6, r5
 463 0050 6D00     		lsl	r5, r5, #1
 464 0052 285A     		ldrh	r0, [r5, r0]
 465 0054 00B2     		sxth	r0, r0
 466 0056 011C     		mov	r1, r0
 467 0058 C017     		asr	r0, r0, #31
 468 005a 021C     		mov	r2, r0
 469 005c 3D69     		ldr	r5, [r7, #16]
 470 005e 7E69     		ldr	r6, [r7, #20]
 471 0060 6D18     		add	r5, r5, r1
 472 0062 5641     		adc	r6, r6, r2
 473 0064 3D61     		str	r5, [r7, #16]
 474 0066 7E61     		str	r6, [r7, #20]
 475 0068 06E0     		b	.L33
 476              	.L32:
 110:.\DSP_Class.c ****             }
 111:.\DSP_Class.c ****             else{
 112:.\DSP_Class.c ****                 skip++;
 477              		.loc 1 112 0
 478 006a 381C     		mov	r0, r7
 479 006c 1F30     		add	r0, r0, #31
 480 006e 0578     		ldrb	r5, [r0]
 481 0070 381C     		mov	r0, r7
 482 0072 1F30     		add	r0, r0, #31
 483 0074 0135     		add	r5, r5, #1
 484 0076 0570     		strb	r5, [r0]
 485              	.L33:
 107:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 486              		.loc 1 107 0
 487 0078 381C     		mov	r0, r7
 488 007a 0F30     		add	r0, r0, #15
 489 007c 0578     		ldrb	r5, [r0]
 490 007e 381C     		mov	r0, r7
 491 0080 0F30     		add	r0, r0, #15
 492 0082 0135     		add	r5, r5, #1
 493 0084 0570     		strb	r5, [r0]
 494              	.L31:
 107:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 495              		.loc 1 107 0 is_stmt 0 discriminator 1
 496 0086 381C     		mov	r0, r7
 497 0088 0F30     		add	r0, r0, #15
 498 008a 0078     		ldrb	r0, [r0]
 499 008c 0128     		cmp	r0, #1
 500 008e CAD9     		bls	.L34
 501              	.LBE7:
 113:.\DSP_Class.c ****             }
 114:.\DSP_Class.c ****         }
 115:.\DSP_Class.c ****     }
 116:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 12


 117:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 502              		.loc 1 117 0 is_stmt 1
 503 0090 3A1C     		mov	r2, r7
 504 0092 1F32     		add	r2, r2, #31
 505 0094 1278     		ldrb	r2, [r2]
 506 0096 0221     		mov	r1, #2
 507 0098 8A1A     		sub	r2, r1, r2
 508 009a 012A     		cmp	r2, #1
 509 009c 49DD     		ble	.L35
 510              	.LBB8:
 118:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);         // Calculate the average value (assuming input 
 511              		.loc 1 118 0
 512 009e 3A1C     		mov	r2, r7
 513 00a0 1F32     		add	r2, r2, #31
 514 00a2 1278     		ldrb	r2, [r2]
 515 00a4 0221     		mov	r1, #2
 516 00a6 8A1A     		sub	r2, r1, r2
 517 00a8 131C     		mov	r3, r2
 518 00aa D217     		asr	r2, r2, #31
 519 00ac 141C     		mov	r4, r2
 520 00ae 3869     		ldr	r0, [r7, #16]
 521 00b0 7969     		ldr	r1, [r7, #20]
 522 00b2 1A1C     		mov	r2, r3
 523 00b4 231C     		mov	r3, r4
 524 00b6 FFF7FEFF 		bl	__aeabi_ldivmod
 525 00ba 031C     		mov	r3, r0
 526 00bc 0C1C     		mov	r4, r1
 527 00be 181C     		mov	r0, r3
 528 00c0 211C     		mov	r1, r4
 529 00c2 FFF7FEFF 		bl	__aeabi_l2f
 530 00c6 031C     		add	r3, r0, #0
 531 00c8 BB60     		str	r3, [r7, #8]
 119:.\DSP_Class.c ****         uint8 soilHumInRH = (uint8)avg;             // Takes care of conversion ( NB no conversion 
 532              		.loc 1 119 0
 533 00ca 3C1C     		mov	r4, r7
 534 00cc 0E34     		add	r4, r4, #14
 535 00ce B868     		ldr	r0, [r7, #8]
 536 00d0 FFF7FEFF 		bl	__aeabi_f2uiz
 537 00d4 031C     		mov	r3, r0
 538 00d6 2370     		strb	r3, [r4]
 120:.\DSP_Class.c ****         
 121:.\DSP_Class.c ****         // soilHumInRH is limited to 1 and 100 RH
 122:.\DSP_Class.c ****         if(soilHumInRH <= 0){
 539              		.loc 1 122 0
 540 00d8 3B1C     		mov	r3, r7
 541 00da 0E33     		add	r3, r3, #14
 542 00dc 1B78     		ldrb	r3, [r3]
 543 00de 002B     		cmp	r3, #0
 544 00e0 04D1     		bne	.L36
 123:.\DSP_Class.c ****             soilHumInRH = 1;
 545              		.loc 1 123 0
 546 00e2 3B1C     		mov	r3, r7
 547 00e4 0E33     		add	r3, r3, #14
 548 00e6 0122     		mov	r2, #1
 549 00e8 1A70     		strb	r2, [r3]
 550 00ea 08E0     		b	.L37
 551              	.L36:
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 13


 124:.\DSP_Class.c ****         }
 125:.\DSP_Class.c ****         else if(soilHumInRH >= 100){
 552              		.loc 1 125 0
 553 00ec 3B1C     		mov	r3, r7
 554 00ee 0E33     		add	r3, r3, #14
 555 00f0 1B78     		ldrb	r3, [r3]
 556 00f2 632B     		cmp	r3, #99
 557 00f4 03D9     		bls	.L37
 126:.\DSP_Class.c ****             soilHumInRH = 99;
 558              		.loc 1 126 0
 559 00f6 3B1C     		mov	r3, r7
 560 00f8 0E33     		add	r3, r3, #14
 561 00fa 6322     		mov	r2, #99
 562 00fc 1A70     		strb	r2, [r3]
 563              	.L37:
 127:.\DSP_Class.c ****         }
 128:.\DSP_Class.c ****         soilHum[index] = ((soilHumInRH-(soilHumInRH%10))/10)+1;
 564              		.loc 1 128 0 discriminator 1
 565 00fe FB1D     		add	r3, r7, #7
 566 0100 1C78     		ldrb	r4, [r3]
 567 0102 3B1C     		mov	r3, r7
 568 0104 0E33     		add	r3, r3, #14
 569 0106 1D78     		ldrb	r5, [r3]
 570 0108 3B1C     		mov	r3, r7
 571 010a 0E33     		add	r3, r3, #14
 572 010c 1B78     		ldrb	r3, [r3]
 573 010e 181C     		mov	r0, r3
 574 0110 0A21     		mov	r1, #10
 575 0112 FFF7FEFF 		bl	__aeabi_uidivmod
 576 0116 0B1C     		mov	r3, r1
 577 0118 DBB2     		uxtb	r3, r3
 578 011a EB1A     		sub	r3, r5, r3
 579 011c 181C     		mov	r0, r3
 580 011e 0A21     		mov	r1, #10
 581 0120 FFF7FEFF 		bl	__aeabi_idiv
 582 0124 031C     		mov	r3, r0
 583 0126 DBB2     		uxtb	r3, r3
 584 0128 0133     		add	r3, r3, #1
 585 012a DAB2     		uxtb	r2, r3
 586 012c 064B     		ldr	r3, .L39+4
 587 012e 1A55     		strb	r2, [r3, r4]
 588              	.LBE8:
 589 0130 04E0     		b	.L30
 590              	.L35:
 129:.\DSP_Class.c ****     }
 130:.\DSP_Class.c ****     else{
 131:.\DSP_Class.c ****     soilHum[index] = 0;
 591              		.loc 1 131 0
 592 0132 FB1D     		add	r3, r7, #7
 593 0134 1B78     		ldrb	r3, [r3]
 594 0136 044A     		ldr	r2, .L39+4
 595 0138 0021     		mov	r1, #0
 596 013a D154     		strb	r1, [r2, r3]
 597              	.L30:
 132:.\DSP_Class.c ****     }
 133:.\DSP_Class.c **** }
 598              		.loc 1 133 0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 14


 599 013c BD46     		mov	sp, r7
 600 013e 09B0     		add	sp, sp, #36
 601              		@ sp needed
 602 0140 F0BD     		pop	{r4, r5, r6, r7, pc}
 603              	.L40:
 604 0142 C046     		.align	2
 605              	.L39:
 606 0144 00000000 		.word	soilHumArray
 607 0148 00000000 		.word	soilHum
 608              		.cfi_endproc
 609              	.LFE37:
 610              		.size	avgSoilHum, .-avgSoilHum
 611              		.section	.text.inputTemp,"ax",%progbits
 612              		.align	2
 613              		.global	inputTemp
 614              		.code	16
 615              		.thumb_func
 616              		.type	inputTemp, %function
 617              	inputTemp:
 618              	.LFB38:
 134:.\DSP_Class.c **** 
 135:.\DSP_Class.c **** //----------inputTemp0----------
 136:.\DSP_Class.c **** void inputTemp(int32* temp){
 619              		.loc 1 136 0
 620              		.cfi_startproc
 621 0000 80B5     		push	{r7, lr}
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 82B0     		sub	sp, sp, #8
 626              		.cfi_def_cfa_offset 16
 627 0004 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
 629 0006 7860     		str	r0, [r7, #4]
 137:.\DSP_Class.c ****     *tempArrayPtr = *temp;      // The input value is written to the array
 630              		.loc 1 137 0
 631 0008 0B4B     		ldr	r3, .L43
 632 000a 1B68     		ldr	r3, [r3]
 633 000c 7A68     		ldr	r2, [r7, #4]
 634 000e 1268     		ldr	r2, [r2]
 635 0010 1A60     		str	r2, [r3]
 138:.\DSP_Class.c ****     tempArrayPtr++;             // The pointer is moved to the next place in array
 636              		.loc 1 138 0
 637 0012 094B     		ldr	r3, .L43
 638 0014 1B68     		ldr	r3, [r3]
 639 0016 1A1D     		add	r2, r3, #4
 640 0018 074B     		ldr	r3, .L43
 641 001a 1A60     		str	r2, [r3]
 139:.\DSP_Class.c ****     if(tempArrayPtr > &tempArray[ARRAYSIZE-1]){
 642              		.loc 1 139 0
 643 001c 064B     		ldr	r3, .L43
 644 001e 1A68     		ldr	r2, [r3]
 645 0020 064B     		ldr	r3, .L43+4
 646 0022 9A42     		cmp	r2, r3
 647 0024 02D9     		bls	.L42
 140:.\DSP_Class.c ****         tempArrayPtr = &tempArray[0];   // If the pointer is pointing past the end of the array it'
 648              		.loc 1 140 0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 15


 649 0026 044B     		ldr	r3, .L43
 650 0028 054A     		ldr	r2, .L43+8
 651 002a 1A60     		str	r2, [r3]
 652              	.L42:
 141:.\DSP_Class.c ****     }
 142:.\DSP_Class.c ****     
 143:.\DSP_Class.c ****     avgTemp();      // The average value is calculated and onverted into temp(globel) 
 653              		.loc 1 143 0
 654 002c FFF7FEFF 		bl	avgTemp
 144:.\DSP_Class.c **** }
 655              		.loc 1 144 0
 656 0030 BD46     		mov	sp, r7
 657 0032 02B0     		add	sp, sp, #8
 658              		@ sp needed
 659 0034 80BD     		pop	{r7, pc}
 660              	.L44:
 661 0036 C046     		.align	2
 662              	.L43:
 663 0038 00000000 		.word	tempArrayPtr
 664 003c 04000000 		.word	tempArray+4
 665 0040 00000000 		.word	tempArray
 666              		.cfi_endproc
 667              	.LFE38:
 668              		.size	inputTemp, .-inputTemp
 669              		.section	.text.inputSoilHum,"ax",%progbits
 670              		.align	2
 671              		.global	inputSoilHum
 672              		.code	16
 673              		.thumb_func
 674              		.type	inputSoilHum, %function
 675              	inputSoilHum:
 676              	.LFB39:
 145:.\DSP_Class.c **** //----------inputTemp1----------
 146:.\DSP_Class.c **** 
 147:.\DSP_Class.c **** 
 148:.\DSP_Class.c **** void inputSoilHum(uint8 index, int16* soilHum){
 677              		.loc 1 148 0
 678              		.cfi_startproc
 679 0000 80B5     		push	{r7, lr}
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 82B0     		sub	sp, sp, #8
 684              		.cfi_def_cfa_offset 16
 685 0004 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
 687 0006 021C     		mov	r2, r0
 688 0008 3960     		str	r1, [r7]
 689 000a FB1D     		add	r3, r7, #7
 690 000c 1A70     		strb	r2, [r3]
 149:.\DSP_Class.c ****     *soilHumPtr[index] = *soilHum;          // The input value is written to the array
 691              		.loc 1 149 0
 692 000e FB1D     		add	r3, r7, #7
 693 0010 1A78     		ldrb	r2, [r3]
 694 0012 174B     		ldr	r3, .L47
 695 0014 9200     		lsl	r2, r2, #2
 696 0016 D358     		ldr	r3, [r2, r3]
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 16


 697 0018 3A68     		ldr	r2, [r7]
 698 001a 1288     		ldrh	r2, [r2]
 699 001c 1A80     		strh	r2, [r3]
 150:.\DSP_Class.c ****   
 151:.\DSP_Class.c ****     soilHumPtr[index]++;                    // The pointer is moved to the next place in array
 700              		.loc 1 151 0
 701 001e FB1D     		add	r3, r7, #7
 702 0020 1B78     		ldrb	r3, [r3]
 703 0022 134A     		ldr	r2, .L47
 704 0024 9900     		lsl	r1, r3, #2
 705 0026 8A58     		ldr	r2, [r1, r2]
 706 0028 911C     		add	r1, r2, #2
 707 002a 114A     		ldr	r2, .L47
 708 002c 9B00     		lsl	r3, r3, #2
 709 002e 9950     		str	r1, [r3, r2]
 152:.\DSP_Class.c ****     if(soilHumPtr[index] > &soilHumArray[index][ARRAYSIZE-1]){
 710              		.loc 1 152 0
 711 0030 FB1D     		add	r3, r7, #7
 712 0032 1A78     		ldrb	r2, [r3]
 713 0034 0E4B     		ldr	r3, .L47
 714 0036 9200     		lsl	r2, r2, #2
 715 0038 D258     		ldr	r2, [r2, r3]
 716 003a FB1D     		add	r3, r7, #7
 717 003c 1B78     		ldrb	r3, [r3]
 718 003e 9B00     		lsl	r3, r3, #2
 719 0040 991C     		add	r1, r3, #2
 720 0042 0C4B     		ldr	r3, .L47+4
 721 0044 CB18     		add	r3, r1, r3
 722 0046 9A42     		cmp	r2, r3
 723 0048 09D9     		bls	.L46
 153:.\DSP_Class.c ****         soilHumPtr[index] = &soilHumArray[index][0];            // If the pointer is pointing past 
 724              		.loc 1 153 0
 725 004a FB1D     		add	r3, r7, #7
 726 004c 1A78     		ldrb	r2, [r3]
 727 004e FB1D     		add	r3, r7, #7
 728 0050 1B78     		ldrb	r3, [r3]
 729 0052 9900     		lsl	r1, r3, #2
 730 0054 074B     		ldr	r3, .L47+4
 731 0056 C918     		add	r1, r1, r3
 732 0058 054B     		ldr	r3, .L47
 733 005a 9200     		lsl	r2, r2, #2
 734 005c D150     		str	r1, [r2, r3]
 735              	.L46:
 154:.\DSP_Class.c ****     }
 155:.\DSP_Class.c ****     
 156:.\DSP_Class.c ****     avgSoilHum(index);          // The average value is calculated and onverted into soilHum(globel
 736              		.loc 1 156 0
 737 005e FB1D     		add	r3, r7, #7
 738 0060 1B78     		ldrb	r3, [r3]
 739 0062 181C     		mov	r0, r3
 740 0064 FFF7FEFF 		bl	avgSoilHum
 157:.\DSP_Class.c **** }
 741              		.loc 1 157 0
 742 0068 BD46     		mov	sp, r7
 743 006a 02B0     		add	sp, sp, #8
 744              		@ sp needed
 745 006c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 17


 746              	.L48:
 747 006e C046     		.align	2
 748              	.L47:
 749 0070 00000000 		.word	soilHumPtr
 750 0074 00000000 		.word	soilHumArray
 751              		.cfi_endproc
 752              	.LFE39:
 753              		.size	inputSoilHum, .-inputSoilHum
 754              		.text
 755              	.Letext0:
 756              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 757              		.section	.debug_info,"",%progbits
 758              	.Ldebug_info0:
 759 0000 3B030000 		.4byte	0x33b
 760 0004 0400     		.2byte	0x4
 761 0006 00000000 		.4byte	.Ldebug_abbrev0
 762 000a 04       		.byte	0x4
 763 000b 01       		.uleb128 0x1
 764 000c 42000000 		.4byte	.LASF32
 765 0010 01       		.byte	0x1
 766 0011 DB010000 		.4byte	.LASF33
 767 0015 92010000 		.4byte	.LASF34
 768 0019 00000000 		.4byte	.Ldebug_ranges0+0
 769 001d 00000000 		.4byte	0
 770 0021 00000000 		.4byte	.Ldebug_line0
 771 0025 02       		.uleb128 0x2
 772 0026 01       		.byte	0x1
 773 0027 06       		.byte	0x6
 774 0028 0D020000 		.4byte	.LASF0
 775 002c 02       		.uleb128 0x2
 776 002d 01       		.byte	0x1
 777 002e 08       		.byte	0x8
 778 002f BE000000 		.4byte	.LASF1
 779 0033 02       		.uleb128 0x2
 780 0034 02       		.byte	0x2
 781 0035 05       		.byte	0x5
 782 0036 E9010000 		.4byte	.LASF2
 783 003a 02       		.uleb128 0x2
 784 003b 02       		.byte	0x2
 785 003c 07       		.byte	0x7
 786 003d 1C000000 		.4byte	.LASF3
 787 0041 02       		.uleb128 0x2
 788 0042 04       		.byte	0x4
 789 0043 05       		.byte	0x5
 790 0044 FF010000 		.4byte	.LASF4
 791 0048 02       		.uleb128 0x2
 792 0049 04       		.byte	0x4
 793 004a 07       		.byte	0x7
 794 004b D6000000 		.4byte	.LASF5
 795 004f 02       		.uleb128 0x2
 796 0050 08       		.byte	0x8
 797 0051 05       		.byte	0x5
 798 0052 84010000 		.4byte	.LASF6
 799 0056 02       		.uleb128 0x2
 800 0057 08       		.byte	0x8
 801 0058 07       		.byte	0x7
 802 0059 51010000 		.4byte	.LASF7
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 18


 803 005d 03       		.uleb128 0x3
 804 005e 04       		.byte	0x4
 805 005f 05       		.byte	0x5
 806 0060 696E7400 		.ascii	"int\000"
 807 0064 02       		.uleb128 0x2
 808 0065 04       		.byte	0x4
 809 0066 07       		.byte	0x7
 810 0067 33010000 		.4byte	.LASF8
 811 006b 04       		.uleb128 0x4
 812 006c F3010000 		.4byte	.LASF9
 813 0070 02       		.byte	0x2
 814 0071 A1       		.byte	0xa1
 815 0072 2C000000 		.4byte	0x2c
 816 0076 04       		.uleb128 0x4
 817 0077 68010000 		.4byte	.LASF10
 818 007b 02       		.byte	0x2
 819 007c A5       		.byte	0xa5
 820 007d 33000000 		.4byte	0x33
 821 0081 04       		.uleb128 0x4
 822 0082 F4000000 		.4byte	.LASF11
 823 0086 02       		.byte	0x2
 824 0087 A6       		.byte	0xa6
 825 0088 41000000 		.4byte	0x41
 826 008c 02       		.uleb128 0x2
 827 008d 04       		.byte	0x4
 828 008e 04       		.byte	0x4
 829 008f 3C000000 		.4byte	.LASF12
 830 0093 02       		.uleb128 0x2
 831 0094 08       		.byte	0x8
 832 0095 04       		.byte	0x4
 833 0096 19010000 		.4byte	.LASF13
 834 009a 04       		.uleb128 0x4
 835 009b 19020000 		.4byte	.LASF14
 836 009f 02       		.byte	0x2
 837 00a0 AC       		.byte	0xac
 838 00a1 4F000000 		.4byte	0x4f
 839 00a5 02       		.uleb128 0x2
 840 00a6 01       		.byte	0x1
 841 00a7 08       		.byte	0x8
 842 00a8 08020000 		.4byte	.LASF15
 843 00ac 02       		.uleb128 0x2
 844 00ad 04       		.byte	0x4
 845 00ae 07       		.byte	0x7
 846 00af 7B010000 		.4byte	.LASF16
 847 00b3 05       		.uleb128 0x5
 848 00b4 11010000 		.4byte	.LASF17
 849 00b8 01       		.byte	0x1
 850 00b9 1D       		.byte	0x1d
 851 00ba 00000000 		.4byte	.LFB33
 852 00be C0000000 		.4byte	.LFE33-.LFB33
 853 00c2 01       		.uleb128 0x1
 854 00c3 9C       		.byte	0x9c
 855 00c4 0F010000 		.4byte	0x10f
 856 00c8 06       		.uleb128 0x6
 857 00c9 06000000 		.4byte	.LBB2
 858 00cd 58000000 		.4byte	.LBE2-.LBB2
 859 00d1 F8000000 		.4byte	0xf8
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 19


 860 00d5 07       		.uleb128 0x7
 861 00d6 6900     		.ascii	"i\000"
 862 00d8 01       		.byte	0x1
 863 00d9 1F       		.byte	0x1f
 864 00da 6B000000 		.4byte	0x6b
 865 00de 02       		.uleb128 0x2
 866 00df 91       		.byte	0x91
 867 00e0 77       		.sleb128 -9
 868 00e1 08       		.uleb128 0x8
 869 00e2 1C000000 		.4byte	.LBB3
 870 00e6 30000000 		.4byte	.LBE3-.LBB3
 871 00ea 07       		.uleb128 0x7
 872 00eb 6A00     		.ascii	"j\000"
 873 00ed 01       		.byte	0x1
 874 00ee 23       		.byte	0x23
 875 00ef 6B000000 		.4byte	0x6b
 876 00f3 02       		.uleb128 0x2
 877 00f4 91       		.byte	0x91
 878 00f5 76       		.sleb128 -10
 879 00f6 00       		.byte	0
 880 00f7 00       		.byte	0
 881 00f8 08       		.uleb128 0x8
 882 00f9 64000000 		.4byte	.LBB4
 883 00fd 38000000 		.4byte	.LBE4-.LBB4
 884 0101 07       		.uleb128 0x7
 885 0102 6B00     		.ascii	"k\000"
 886 0104 01       		.byte	0x1
 887 0105 2D       		.byte	0x2d
 888 0106 6B000000 		.4byte	0x6b
 889 010a 02       		.uleb128 0x2
 890 010b 91       		.byte	0x91
 891 010c 75       		.sleb128 -11
 892 010d 00       		.byte	0
 893 010e 00       		.byte	0
 894 010f 09       		.uleb128 0x9
 895 0110 E8000000 		.4byte	.LASF35
 896 0114 01       		.byte	0x1
 897 0115 37       		.byte	0x37
 898 0116 6B000000 		.4byte	0x6b
 899 011a 00000000 		.4byte	.LFB34
 900 011e 14000000 		.4byte	.LFE34-.LFB34
 901 0122 01       		.uleb128 0x1
 902 0123 9C       		.byte	0x9c
 903 0124 0A       		.uleb128 0xa
 904 0125 FA000000 		.4byte	.LASF36
 905 0129 01       		.byte	0x1
 906 012a 3D       		.byte	0x3d
 907 012b 6B000000 		.4byte	0x6b
 908 012f 00000000 		.4byte	.LFB35
 909 0133 20000000 		.4byte	.LFE35-.LFB35
 910 0137 01       		.uleb128 0x1
 911 0138 9C       		.byte	0x9c
 912 0139 4C010000 		.4byte	0x14c
 913 013d 0B       		.uleb128 0xb
 914 013e D5010000 		.4byte	.LASF22
 915 0142 01       		.byte	0x1
 916 0143 3D       		.byte	0x3d
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 20


 917 0144 6B000000 		.4byte	0x6b
 918 0148 02       		.uleb128 0x2
 919 0149 91       		.byte	0x91
 920 014a 77       		.sleb128 -9
 921 014b 00       		.byte	0
 922 014c 0C       		.uleb128 0xc
 923 014d 09010000 		.4byte	.LASF18
 924 0151 01       		.byte	0x1
 925 0152 43       		.byte	0x43
 926 0153 00000000 		.4byte	.LFB36
 927 0157 D8000000 		.4byte	.LFE36-.LFB36
 928 015b 01       		.uleb128 0x1
 929 015c 9C       		.byte	0x9c
 930 015d B0010000 		.4byte	0x1b0
 931 0161 0D       		.uleb128 0xd
 932 0162 17000000 		.4byte	.LASF19
 933 0166 01       		.byte	0x1
 934 0167 44       		.byte	0x44
 935 0168 6B000000 		.4byte	0x6b
 936 016c 02       		.uleb128 0x2
 937 016d 91       		.byte	0x91
 938 016e 67       		.sleb128 -25
 939 016f 0D       		.uleb128 0xd
 940 0170 F9010000 		.4byte	.LASF20
 941 0174 01       		.byte	0x1
 942 0175 45       		.byte	0x45
 943 0176 9A000000 		.4byte	0x9a
 944 017a 02       		.uleb128 0x2
 945 017b 91       		.byte	0x91
 946 017c 58       		.sleb128 -40
 947 017d 06       		.uleb128 0x6
 948 017e 16000000 		.4byte	.LBB5
 949 0182 54000000 		.4byte	.LBE5-.LBB5
 950 0186 97010000 		.4byte	0x197
 951 018a 07       		.uleb128 0x7
 952 018b 6900     		.ascii	"i\000"
 953 018d 01       		.byte	0x1
 954 018e 47       		.byte	0x47
 955 018f 6B000000 		.4byte	0x6b
 956 0193 02       		.uleb128 0x2
 957 0194 91       		.byte	0x91
 958 0195 57       		.sleb128 -41
 959 0196 00       		.byte	0
 960 0197 08       		.uleb128 0x8
 961 0198 78000000 		.4byte	.LBB6
 962 019c 46000000 		.4byte	.LBE6-.LBB6
 963 01a0 07       		.uleb128 0x7
 964 01a1 61766700 		.ascii	"avg\000"
 965 01a5 01       		.byte	0x1
 966 01a6 53       		.byte	0x53
 967 01a7 81000000 		.4byte	0x81
 968 01ab 02       		.uleb128 0x2
 969 01ac 91       		.byte	0x91
 970 01ad 50       		.sleb128 -48
 971 01ae 00       		.byte	0
 972 01af 00       		.byte	0
 973 01b0 0C       		.uleb128 0xc
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 21


 974 01b1 CA010000 		.4byte	.LASF21
 975 01b5 01       		.byte	0x1
 976 01b6 66       		.byte	0x66
 977 01b7 00000000 		.4byte	.LFB37
 978 01bb 4C010000 		.4byte	.LFE37-.LFB37
 979 01bf 01       		.uleb128 0x1
 980 01c0 9C       		.byte	0x9c
 981 01c1 30020000 		.4byte	0x230
 982 01c5 0B       		.uleb128 0xb
 983 01c6 D5010000 		.4byte	.LASF22
 984 01ca 01       		.byte	0x1
 985 01cb 66       		.byte	0x66
 986 01cc 6B000000 		.4byte	0x6b
 987 01d0 02       		.uleb128 0x2
 988 01d1 91       		.byte	0x91
 989 01d2 4F       		.sleb128 -49
 990 01d3 0D       		.uleb128 0xd
 991 01d4 17000000 		.4byte	.LASF19
 992 01d8 01       		.byte	0x1
 993 01d9 67       		.byte	0x67
 994 01da 6B000000 		.4byte	0x6b
 995 01de 02       		.uleb128 0x2
 996 01df 91       		.byte	0x91
 997 01e0 67       		.sleb128 -25
 998 01e1 0D       		.uleb128 0xd
 999 01e2 F9010000 		.4byte	.LASF20
 1000 01e6 01       		.byte	0x1
 1001 01e7 68       		.byte	0x68
 1002 01e8 9A000000 		.4byte	0x9a
 1003 01ec 02       		.uleb128 0x2
 1004 01ed 91       		.byte	0x91
 1005 01ee 58       		.sleb128 -40
 1006 01ef 06       		.uleb128 0x6
 1007 01f0 1C000000 		.4byte	.LBB7
 1008 01f4 74000000 		.4byte	.LBE7-.LBB7
 1009 01f8 09020000 		.4byte	0x209
 1010 01fc 07       		.uleb128 0x7
 1011 01fd 6900     		.ascii	"i\000"
 1012 01ff 01       		.byte	0x1
 1013 0200 6A       		.byte	0x6a
 1014 0201 6B000000 		.4byte	0x6b
 1015 0205 02       		.uleb128 0x2
 1016 0206 91       		.byte	0x91
 1017 0207 57       		.sleb128 -41
 1018 0208 00       		.byte	0
 1019 0209 08       		.uleb128 0x8
 1020 020a 9E000000 		.4byte	.LBB8
 1021 020e 92000000 		.4byte	.LBE8-.LBB8
 1022 0212 07       		.uleb128 0x7
 1023 0213 61766700 		.ascii	"avg\000"
 1024 0217 01       		.byte	0x1
 1025 0218 76       		.byte	0x76
 1026 0219 8C000000 		.4byte	0x8c
 1027 021d 02       		.uleb128 0x2
 1028 021e 91       		.byte	0x91
 1029 021f 50       		.sleb128 -48
 1030 0220 0D       		.uleb128 0xd
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 22


 1031 0221 45010000 		.4byte	.LASF23
 1032 0225 01       		.byte	0x1
 1033 0226 77       		.byte	0x77
 1034 0227 6B000000 		.4byte	0x6b
 1035 022b 02       		.uleb128 0x2
 1036 022c 91       		.byte	0x91
 1037 022d 56       		.sleb128 -42
 1038 022e 00       		.byte	0
 1039 022f 00       		.byte	0
 1040 0230 0C       		.uleb128 0xc
 1041 0231 0D000000 		.4byte	.LASF24
 1042 0235 01       		.byte	0x1
 1043 0236 88       		.byte	0x88
 1044 0237 00000000 		.4byte	.LFB38
 1045 023b 44000000 		.4byte	.LFE38-.LFB38
 1046 023f 01       		.uleb128 0x1
 1047 0240 9C       		.byte	0x9c
 1048 0241 54020000 		.4byte	0x254
 1049 0245 0B       		.uleb128 0xb
 1050 0246 40010000 		.4byte	.LASF25
 1051 024a 01       		.byte	0x1
 1052 024b 88       		.byte	0x88
 1053 024c 54020000 		.4byte	0x254
 1054 0250 02       		.uleb128 0x2
 1055 0251 91       		.byte	0x91
 1056 0252 74       		.sleb128 -12
 1057 0253 00       		.byte	0
 1058 0254 0E       		.uleb128 0xe
 1059 0255 04       		.byte	0x4
 1060 0256 81000000 		.4byte	0x81
 1061 025a 0C       		.uleb128 0xc
 1062 025b 2F000000 		.4byte	.LASF26
 1063 025f 01       		.byte	0x1
 1064 0260 94       		.byte	0x94
 1065 0261 00000000 		.4byte	.LFB39
 1066 0265 78000000 		.4byte	.LFE39-.LFB39
 1067 0269 01       		.uleb128 0x1
 1068 026a 9C       		.byte	0x9c
 1069 026b 8C020000 		.4byte	0x28c
 1070 026f 0B       		.uleb128 0xb
 1071 0270 D5010000 		.4byte	.LASF22
 1072 0274 01       		.byte	0x1
 1073 0275 94       		.byte	0x94
 1074 0276 6B000000 		.4byte	0x6b
 1075 027a 02       		.uleb128 0x2
 1076 027b 91       		.byte	0x91
 1077 027c 77       		.sleb128 -9
 1078 027d 0B       		.uleb128 0xb
 1079 027e 20010000 		.4byte	.LASF27
 1080 0282 01       		.byte	0x1
 1081 0283 94       		.byte	0x94
 1082 0284 8C020000 		.4byte	0x28c
 1083 0288 02       		.uleb128 0x2
 1084 0289 91       		.byte	0x91
 1085 028a 70       		.sleb128 -16
 1086 028b 00       		.byte	0
 1087 028c 0E       		.uleb128 0xe
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 23


 1088 028d 04       		.byte	0x4
 1089 028e 76000000 		.4byte	0x76
 1090 0292 0F       		.uleb128 0xf
 1091 0293 81000000 		.4byte	0x81
 1092 0297 A2020000 		.4byte	0x2a2
 1093 029b 10       		.uleb128 0x10
 1094 029c AC000000 		.4byte	0xac
 1095 02a0 01       		.byte	0x1
 1096 02a1 00       		.byte	0
 1097 02a2 11       		.uleb128 0x11
 1098 02a3 CC000000 		.4byte	.LASF28
 1099 02a7 01       		.byte	0x1
 1100 02a8 11       		.byte	0x11
 1101 02a9 92020000 		.4byte	0x292
 1102 02ad 05       		.uleb128 0x5
 1103 02ae 03       		.byte	0x3
 1104 02af 00000000 		.4byte	tempArray
 1105 02b3 11       		.uleb128 0x11
 1106 02b4 6E010000 		.4byte	.LASF29
 1107 02b8 01       		.byte	0x1
 1108 02b9 12       		.byte	0x12
 1109 02ba 54020000 		.4byte	0x254
 1110 02be 05       		.uleb128 0x5
 1111 02bf 03       		.byte	0x3
 1112 02c0 00000000 		.4byte	tempArrayPtr
 1113 02c4 0F       		.uleb128 0xf
 1114 02c5 76000000 		.4byte	0x76
 1115 02c9 DA020000 		.4byte	0x2da
 1116 02cd 10       		.uleb128 0x10
 1117 02ce AC000000 		.4byte	0xac
 1118 02d2 05       		.byte	0x5
 1119 02d3 10       		.uleb128 0x10
 1120 02d4 AC000000 		.4byte	0xac
 1121 02d8 01       		.byte	0x1
 1122 02d9 00       		.byte	0
 1123 02da 11       		.uleb128 0x11
 1124 02db 00000000 		.4byte	.LASF30
 1125 02df 01       		.byte	0x1
 1126 02e0 13       		.byte	0x13
 1127 02e1 C4020000 		.4byte	0x2c4
 1128 02e5 05       		.uleb128 0x5
 1129 02e6 03       		.byte	0x3
 1130 02e7 00000000 		.4byte	soilHumArray
 1131 02eb 0F       		.uleb128 0xf
 1132 02ec 8C020000 		.4byte	0x28c
 1133 02f0 FB020000 		.4byte	0x2fb
 1134 02f4 10       		.uleb128 0x10
 1135 02f5 AC000000 		.4byte	0xac
 1136 02f9 05       		.byte	0x5
 1137 02fa 00       		.byte	0
 1138 02fb 11       		.uleb128 0x11
 1139 02fc 28010000 		.4byte	.LASF31
 1140 0300 01       		.byte	0x1
 1141 0301 14       		.byte	0x14
 1142 0302 EB020000 		.4byte	0x2eb
 1143 0306 05       		.uleb128 0x5
 1144 0307 03       		.byte	0x3
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 24


 1145 0308 00000000 		.4byte	soilHumPtr
 1146 030c 11       		.uleb128 0x11
 1147 030d 40010000 		.4byte	.LASF25
 1148 0311 01       		.byte	0x1
 1149 0312 15       		.byte	0x15
 1150 0313 6B000000 		.4byte	0x6b
 1151 0317 05       		.uleb128 0x5
 1152 0318 03       		.byte	0x3
 1153 0319 00000000 		.4byte	temp
 1154 031d 0F       		.uleb128 0xf
 1155 031e 6B000000 		.4byte	0x6b
 1156 0322 2D030000 		.4byte	0x32d
 1157 0326 10       		.uleb128 0x10
 1158 0327 AC000000 		.4byte	0xac
 1159 032b 05       		.byte	0x5
 1160 032c 00       		.byte	0
 1161 032d 11       		.uleb128 0x11
 1162 032e 20010000 		.4byte	.LASF27
 1163 0332 01       		.byte	0x1
 1164 0333 15       		.byte	0x15
 1165 0334 1D030000 		.4byte	0x31d
 1166 0338 05       		.uleb128 0x5
 1167 0339 03       		.byte	0x3
 1168 033a 00000000 		.4byte	soilHum
 1169 033e 00       		.byte	0
 1170              		.section	.debug_abbrev,"",%progbits
 1171              	.Ldebug_abbrev0:
 1172 0000 01       		.uleb128 0x1
 1173 0001 11       		.uleb128 0x11
 1174 0002 01       		.byte	0x1
 1175 0003 25       		.uleb128 0x25
 1176 0004 0E       		.uleb128 0xe
 1177 0005 13       		.uleb128 0x13
 1178 0006 0B       		.uleb128 0xb
 1179 0007 03       		.uleb128 0x3
 1180 0008 0E       		.uleb128 0xe
 1181 0009 1B       		.uleb128 0x1b
 1182 000a 0E       		.uleb128 0xe
 1183 000b 55       		.uleb128 0x55
 1184 000c 17       		.uleb128 0x17
 1185 000d 11       		.uleb128 0x11
 1186 000e 01       		.uleb128 0x1
 1187 000f 10       		.uleb128 0x10
 1188 0010 17       		.uleb128 0x17
 1189 0011 00       		.byte	0
 1190 0012 00       		.byte	0
 1191 0013 02       		.uleb128 0x2
 1192 0014 24       		.uleb128 0x24
 1193 0015 00       		.byte	0
 1194 0016 0B       		.uleb128 0xb
 1195 0017 0B       		.uleb128 0xb
 1196 0018 3E       		.uleb128 0x3e
 1197 0019 0B       		.uleb128 0xb
 1198 001a 03       		.uleb128 0x3
 1199 001b 0E       		.uleb128 0xe
 1200 001c 00       		.byte	0
 1201 001d 00       		.byte	0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 25


 1202 001e 03       		.uleb128 0x3
 1203 001f 24       		.uleb128 0x24
 1204 0020 00       		.byte	0
 1205 0021 0B       		.uleb128 0xb
 1206 0022 0B       		.uleb128 0xb
 1207 0023 3E       		.uleb128 0x3e
 1208 0024 0B       		.uleb128 0xb
 1209 0025 03       		.uleb128 0x3
 1210 0026 08       		.uleb128 0x8
 1211 0027 00       		.byte	0
 1212 0028 00       		.byte	0
 1213 0029 04       		.uleb128 0x4
 1214 002a 16       		.uleb128 0x16
 1215 002b 00       		.byte	0
 1216 002c 03       		.uleb128 0x3
 1217 002d 0E       		.uleb128 0xe
 1218 002e 3A       		.uleb128 0x3a
 1219 002f 0B       		.uleb128 0xb
 1220 0030 3B       		.uleb128 0x3b
 1221 0031 0B       		.uleb128 0xb
 1222 0032 49       		.uleb128 0x49
 1223 0033 13       		.uleb128 0x13
 1224 0034 00       		.byte	0
 1225 0035 00       		.byte	0
 1226 0036 05       		.uleb128 0x5
 1227 0037 2E       		.uleb128 0x2e
 1228 0038 01       		.byte	0x1
 1229 0039 3F       		.uleb128 0x3f
 1230 003a 19       		.uleb128 0x19
 1231 003b 03       		.uleb128 0x3
 1232 003c 0E       		.uleb128 0xe
 1233 003d 3A       		.uleb128 0x3a
 1234 003e 0B       		.uleb128 0xb
 1235 003f 3B       		.uleb128 0x3b
 1236 0040 0B       		.uleb128 0xb
 1237 0041 27       		.uleb128 0x27
 1238 0042 19       		.uleb128 0x19
 1239 0043 11       		.uleb128 0x11
 1240 0044 01       		.uleb128 0x1
 1241 0045 12       		.uleb128 0x12
 1242 0046 06       		.uleb128 0x6
 1243 0047 40       		.uleb128 0x40
 1244 0048 18       		.uleb128 0x18
 1245 0049 9742     		.uleb128 0x2117
 1246 004b 19       		.uleb128 0x19
 1247 004c 01       		.uleb128 0x1
 1248 004d 13       		.uleb128 0x13
 1249 004e 00       		.byte	0
 1250 004f 00       		.byte	0
 1251 0050 06       		.uleb128 0x6
 1252 0051 0B       		.uleb128 0xb
 1253 0052 01       		.byte	0x1
 1254 0053 11       		.uleb128 0x11
 1255 0054 01       		.uleb128 0x1
 1256 0055 12       		.uleb128 0x12
 1257 0056 06       		.uleb128 0x6
 1258 0057 01       		.uleb128 0x1
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 26


 1259 0058 13       		.uleb128 0x13
 1260 0059 00       		.byte	0
 1261 005a 00       		.byte	0
 1262 005b 07       		.uleb128 0x7
 1263 005c 34       		.uleb128 0x34
 1264 005d 00       		.byte	0
 1265 005e 03       		.uleb128 0x3
 1266 005f 08       		.uleb128 0x8
 1267 0060 3A       		.uleb128 0x3a
 1268 0061 0B       		.uleb128 0xb
 1269 0062 3B       		.uleb128 0x3b
 1270 0063 0B       		.uleb128 0xb
 1271 0064 49       		.uleb128 0x49
 1272 0065 13       		.uleb128 0x13
 1273 0066 02       		.uleb128 0x2
 1274 0067 18       		.uleb128 0x18
 1275 0068 00       		.byte	0
 1276 0069 00       		.byte	0
 1277 006a 08       		.uleb128 0x8
 1278 006b 0B       		.uleb128 0xb
 1279 006c 01       		.byte	0x1
 1280 006d 11       		.uleb128 0x11
 1281 006e 01       		.uleb128 0x1
 1282 006f 12       		.uleb128 0x12
 1283 0070 06       		.uleb128 0x6
 1284 0071 00       		.byte	0
 1285 0072 00       		.byte	0
 1286 0073 09       		.uleb128 0x9
 1287 0074 2E       		.uleb128 0x2e
 1288 0075 00       		.byte	0
 1289 0076 3F       		.uleb128 0x3f
 1290 0077 19       		.uleb128 0x19
 1291 0078 03       		.uleb128 0x3
 1292 0079 0E       		.uleb128 0xe
 1293 007a 3A       		.uleb128 0x3a
 1294 007b 0B       		.uleb128 0xb
 1295 007c 3B       		.uleb128 0x3b
 1296 007d 0B       		.uleb128 0xb
 1297 007e 27       		.uleb128 0x27
 1298 007f 19       		.uleb128 0x19
 1299 0080 49       		.uleb128 0x49
 1300 0081 13       		.uleb128 0x13
 1301 0082 11       		.uleb128 0x11
 1302 0083 01       		.uleb128 0x1
 1303 0084 12       		.uleb128 0x12
 1304 0085 06       		.uleb128 0x6
 1305 0086 40       		.uleb128 0x40
 1306 0087 18       		.uleb128 0x18
 1307 0088 9742     		.uleb128 0x2117
 1308 008a 19       		.uleb128 0x19
 1309 008b 00       		.byte	0
 1310 008c 00       		.byte	0
 1311 008d 0A       		.uleb128 0xa
 1312 008e 2E       		.uleb128 0x2e
 1313 008f 01       		.byte	0x1
 1314 0090 3F       		.uleb128 0x3f
 1315 0091 19       		.uleb128 0x19
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 27


 1316 0092 03       		.uleb128 0x3
 1317 0093 0E       		.uleb128 0xe
 1318 0094 3A       		.uleb128 0x3a
 1319 0095 0B       		.uleb128 0xb
 1320 0096 3B       		.uleb128 0x3b
 1321 0097 0B       		.uleb128 0xb
 1322 0098 27       		.uleb128 0x27
 1323 0099 19       		.uleb128 0x19
 1324 009a 49       		.uleb128 0x49
 1325 009b 13       		.uleb128 0x13
 1326 009c 11       		.uleb128 0x11
 1327 009d 01       		.uleb128 0x1
 1328 009e 12       		.uleb128 0x12
 1329 009f 06       		.uleb128 0x6
 1330 00a0 40       		.uleb128 0x40
 1331 00a1 18       		.uleb128 0x18
 1332 00a2 9742     		.uleb128 0x2117
 1333 00a4 19       		.uleb128 0x19
 1334 00a5 01       		.uleb128 0x1
 1335 00a6 13       		.uleb128 0x13
 1336 00a7 00       		.byte	0
 1337 00a8 00       		.byte	0
 1338 00a9 0B       		.uleb128 0xb
 1339 00aa 05       		.uleb128 0x5
 1340 00ab 00       		.byte	0
 1341 00ac 03       		.uleb128 0x3
 1342 00ad 0E       		.uleb128 0xe
 1343 00ae 3A       		.uleb128 0x3a
 1344 00af 0B       		.uleb128 0xb
 1345 00b0 3B       		.uleb128 0x3b
 1346 00b1 0B       		.uleb128 0xb
 1347 00b2 49       		.uleb128 0x49
 1348 00b3 13       		.uleb128 0x13
 1349 00b4 02       		.uleb128 0x2
 1350 00b5 18       		.uleb128 0x18
 1351 00b6 00       		.byte	0
 1352 00b7 00       		.byte	0
 1353 00b8 0C       		.uleb128 0xc
 1354 00b9 2E       		.uleb128 0x2e
 1355 00ba 01       		.byte	0x1
 1356 00bb 3F       		.uleb128 0x3f
 1357 00bc 19       		.uleb128 0x19
 1358 00bd 03       		.uleb128 0x3
 1359 00be 0E       		.uleb128 0xe
 1360 00bf 3A       		.uleb128 0x3a
 1361 00c0 0B       		.uleb128 0xb
 1362 00c1 3B       		.uleb128 0x3b
 1363 00c2 0B       		.uleb128 0xb
 1364 00c3 27       		.uleb128 0x27
 1365 00c4 19       		.uleb128 0x19
 1366 00c5 11       		.uleb128 0x11
 1367 00c6 01       		.uleb128 0x1
 1368 00c7 12       		.uleb128 0x12
 1369 00c8 06       		.uleb128 0x6
 1370 00c9 40       		.uleb128 0x40
 1371 00ca 18       		.uleb128 0x18
 1372 00cb 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 28


 1373 00cd 19       		.uleb128 0x19
 1374 00ce 01       		.uleb128 0x1
 1375 00cf 13       		.uleb128 0x13
 1376 00d0 00       		.byte	0
 1377 00d1 00       		.byte	0
 1378 00d2 0D       		.uleb128 0xd
 1379 00d3 34       		.uleb128 0x34
 1380 00d4 00       		.byte	0
 1381 00d5 03       		.uleb128 0x3
 1382 00d6 0E       		.uleb128 0xe
 1383 00d7 3A       		.uleb128 0x3a
 1384 00d8 0B       		.uleb128 0xb
 1385 00d9 3B       		.uleb128 0x3b
 1386 00da 0B       		.uleb128 0xb
 1387 00db 49       		.uleb128 0x49
 1388 00dc 13       		.uleb128 0x13
 1389 00dd 02       		.uleb128 0x2
 1390 00de 18       		.uleb128 0x18
 1391 00df 00       		.byte	0
 1392 00e0 00       		.byte	0
 1393 00e1 0E       		.uleb128 0xe
 1394 00e2 0F       		.uleb128 0xf
 1395 00e3 00       		.byte	0
 1396 00e4 0B       		.uleb128 0xb
 1397 00e5 0B       		.uleb128 0xb
 1398 00e6 49       		.uleb128 0x49
 1399 00e7 13       		.uleb128 0x13
 1400 00e8 00       		.byte	0
 1401 00e9 00       		.byte	0
 1402 00ea 0F       		.uleb128 0xf
 1403 00eb 01       		.uleb128 0x1
 1404 00ec 01       		.byte	0x1
 1405 00ed 49       		.uleb128 0x49
 1406 00ee 13       		.uleb128 0x13
 1407 00ef 01       		.uleb128 0x1
 1408 00f0 13       		.uleb128 0x13
 1409 00f1 00       		.byte	0
 1410 00f2 00       		.byte	0
 1411 00f3 10       		.uleb128 0x10
 1412 00f4 21       		.uleb128 0x21
 1413 00f5 00       		.byte	0
 1414 00f6 49       		.uleb128 0x49
 1415 00f7 13       		.uleb128 0x13
 1416 00f8 2F       		.uleb128 0x2f
 1417 00f9 0B       		.uleb128 0xb
 1418 00fa 00       		.byte	0
 1419 00fb 00       		.byte	0
 1420 00fc 11       		.uleb128 0x11
 1421 00fd 34       		.uleb128 0x34
 1422 00fe 00       		.byte	0
 1423 00ff 03       		.uleb128 0x3
 1424 0100 0E       		.uleb128 0xe
 1425 0101 3A       		.uleb128 0x3a
 1426 0102 0B       		.uleb128 0xb
 1427 0103 3B       		.uleb128 0x3b
 1428 0104 0B       		.uleb128 0xb
 1429 0105 49       		.uleb128 0x49
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 29


 1430 0106 13       		.uleb128 0x13
 1431 0107 3F       		.uleb128 0x3f
 1432 0108 19       		.uleb128 0x19
 1433 0109 02       		.uleb128 0x2
 1434 010a 18       		.uleb128 0x18
 1435 010b 00       		.byte	0
 1436 010c 00       		.byte	0
 1437 010d 00       		.byte	0
 1438              		.section	.debug_aranges,"",%progbits
 1439 0000 4C000000 		.4byte	0x4c
 1440 0004 0200     		.2byte	0x2
 1441 0006 00000000 		.4byte	.Ldebug_info0
 1442 000a 04       		.byte	0x4
 1443 000b 00       		.byte	0
 1444 000c 0000     		.2byte	0
 1445 000e 0000     		.2byte	0
 1446 0010 00000000 		.4byte	.LFB33
 1447 0014 C0000000 		.4byte	.LFE33-.LFB33
 1448 0018 00000000 		.4byte	.LFB34
 1449 001c 14000000 		.4byte	.LFE34-.LFB34
 1450 0020 00000000 		.4byte	.LFB35
 1451 0024 20000000 		.4byte	.LFE35-.LFB35
 1452 0028 00000000 		.4byte	.LFB36
 1453 002c D8000000 		.4byte	.LFE36-.LFB36
 1454 0030 00000000 		.4byte	.LFB37
 1455 0034 4C010000 		.4byte	.LFE37-.LFB37
 1456 0038 00000000 		.4byte	.LFB38
 1457 003c 44000000 		.4byte	.LFE38-.LFB38
 1458 0040 00000000 		.4byte	.LFB39
 1459 0044 78000000 		.4byte	.LFE39-.LFB39
 1460 0048 00000000 		.4byte	0
 1461 004c 00000000 		.4byte	0
 1462              		.section	.debug_ranges,"",%progbits
 1463              	.Ldebug_ranges0:
 1464 0000 00000000 		.4byte	.LFB33
 1465 0004 C0000000 		.4byte	.LFE33
 1466 0008 00000000 		.4byte	.LFB34
 1467 000c 14000000 		.4byte	.LFE34
 1468 0010 00000000 		.4byte	.LFB35
 1469 0014 20000000 		.4byte	.LFE35
 1470 0018 00000000 		.4byte	.LFB36
 1471 001c D8000000 		.4byte	.LFE36
 1472 0020 00000000 		.4byte	.LFB37
 1473 0024 4C010000 		.4byte	.LFE37
 1474 0028 00000000 		.4byte	.LFB38
 1475 002c 44000000 		.4byte	.LFE38
 1476 0030 00000000 		.4byte	.LFB39
 1477 0034 78000000 		.4byte	.LFE39
 1478 0038 00000000 		.4byte	0
 1479 003c 00000000 		.4byte	0
 1480              		.section	.debug_line,"",%progbits
 1481              	.Ldebug_line0:
 1482 0000 3E010000 		.section	.debug_str,"MS",%progbits,1
 1482      02004800 
 1482      00000201 
 1482      FB0E0D00 
 1482      01010101 
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 30


 1483              	.LASF30:
 1484 0000 736F696C 		.ascii	"soilHumArray\000"
 1484      48756D41 
 1484      72726179 
 1484      00
 1485              	.LASF24:
 1486 000d 696E7075 		.ascii	"inputTemp\000"
 1486      7454656D 
 1486      7000
 1487              	.LASF19:
 1488 0017 736B6970 		.ascii	"skip\000"
 1488      00
 1489              	.LASF3:
 1490 001c 73686F72 		.ascii	"short unsigned int\000"
 1490      7420756E 
 1490      7369676E 
 1490      65642069 
 1490      6E7400
 1491              	.LASF26:
 1492 002f 696E7075 		.ascii	"inputSoilHum\000"
 1492      74536F69 
 1492      6C48756D 
 1492      00
 1493              	.LASF12:
 1494 003c 666C6F61 		.ascii	"float\000"
 1494      7400
 1495              	.LASF32:
 1496 0042 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1496      4320342E 
 1496      382E3420 
 1496      32303134 
 1496      30353236 
 1497 0075 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1497      20726576 
 1497      6973696F 
 1497      6E203231 
 1497      31333538 
 1498 00a8 30202D66 		.ascii	"0 -ffunction-sections\000"
 1498      66756E63 
 1498      74696F6E 
 1498      2D736563 
 1498      74696F6E 
 1499              	.LASF1:
 1500 00be 756E7369 		.ascii	"unsigned char\000"
 1500      676E6564 
 1500      20636861 
 1500      7200
 1501              	.LASF28:
 1502 00cc 74656D70 		.ascii	"tempArray\000"
 1502      41727261 
 1502      7900
 1503              	.LASF5:
 1504 00d6 6C6F6E67 		.ascii	"long unsigned int\000"
 1504      20756E73 
 1504      69676E65 
 1504      6420696E 
 1504      7400
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 31


 1505              	.LASF35:
 1506 00e8 67657454 		.ascii	"getTemp_DSP\000"
 1506      656D705F 
 1506      44535000 
 1507              	.LASF11:
 1508 00f4 696E7433 		.ascii	"int32\000"
 1508      3200
 1509              	.LASF36:
 1510 00fa 67657453 		.ascii	"getSoilHum_DSP\000"
 1510      6F696C48 
 1510      756D5F44 
 1510      535000
 1511              	.LASF18:
 1512 0109 61766754 		.ascii	"avgTemp\000"
 1512      656D7000 
 1513              	.LASF17:
 1514 0111 696E6974 		.ascii	"initDSP\000"
 1514      44535000 
 1515              	.LASF13:
 1516 0119 646F7562 		.ascii	"double\000"
 1516      6C6500
 1517              	.LASF27:
 1518 0120 736F696C 		.ascii	"soilHum\000"
 1518      48756D00 
 1519              	.LASF31:
 1520 0128 736F696C 		.ascii	"soilHumPtr\000"
 1520      48756D50 
 1520      747200
 1521              	.LASF8:
 1522 0133 756E7369 		.ascii	"unsigned int\000"
 1522      676E6564 
 1522      20696E74 
 1522      00
 1523              	.LASF25:
 1524 0140 74656D70 		.ascii	"temp\000"
 1524      00
 1525              	.LASF23:
 1526 0145 736F696C 		.ascii	"soilHumInRH\000"
 1526      48756D49 
 1526      6E524800 
 1527              	.LASF7:
 1528 0151 6C6F6E67 		.ascii	"long long unsigned int\000"
 1528      206C6F6E 
 1528      6720756E 
 1528      7369676E 
 1528      65642069 
 1529              	.LASF10:
 1530 0168 696E7431 		.ascii	"int16\000"
 1530      3600
 1531              	.LASF29:
 1532 016e 74656D70 		.ascii	"tempArrayPtr\000"
 1532      41727261 
 1532      79507472 
 1532      00
 1533              	.LASF16:
 1534 017b 73697A65 		.ascii	"sizetype\000"
 1534      74797065 
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\ccB86zu4.s 			page 32


 1534      00
 1535              	.LASF6:
 1536 0184 6C6F6E67 		.ascii	"long long int\000"
 1536      206C6F6E 
 1536      6720696E 
 1536      7400
 1537              	.LASF34:
 1538 0192 463A5C44 		.ascii	"F:\\Dropbox\\PRJ3\\LaTeX\\src\\PSoC_Master\\PSoC_Ma"
 1538      726F7062 
 1538      6F785C50 
 1538      524A335C 
 1538      4C615465 
 1539 01bf 73746572 		.ascii	"ster.cydsn\000"
 1539      2E637964 
 1539      736E00
 1540              	.LASF21:
 1541 01ca 61766753 		.ascii	"avgSoilHum\000"
 1541      6F696C48 
 1541      756D00
 1542              	.LASF22:
 1543 01d5 696E6465 		.ascii	"index\000"
 1543      7800
 1544              	.LASF33:
 1545 01db 2E5C4453 		.ascii	".\\DSP_Class.c\000"
 1545      505F436C 
 1545      6173732E 
 1545      6300
 1546              	.LASF2:
 1547 01e9 73686F72 		.ascii	"short int\000"
 1547      7420696E 
 1547      7400
 1548              	.LASF9:
 1549 01f3 75696E74 		.ascii	"uint8\000"
 1549      3800
 1550              	.LASF20:
 1551 01f9 746F7461 		.ascii	"total\000"
 1551      6C00
 1552              	.LASF4:
 1553 01ff 6C6F6E67 		.ascii	"long int\000"
 1553      20696E74 
 1553      00
 1554              	.LASF15:
 1555 0208 63686172 		.ascii	"char\000"
 1555      00
 1556              	.LASF0:
 1557 020d 7369676E 		.ascii	"signed char\000"
 1557      65642063 
 1557      68617200 
 1558              	.LASF14:
 1559 0219 696E7436 		.ascii	"int64\000"
 1559      3400
 1560              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
