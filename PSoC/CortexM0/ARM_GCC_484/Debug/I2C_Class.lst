ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	irrigationStatus
  18              		.bss
  19              		.type	irrigationStatus, %object
  20              		.size	irrigationStatus, 1
  21              	irrigationStatus:
  22 0000 00       		.space	1
  23              		.data
  24              		.align	2
  25              		.type	size, %object
  26              		.size	size, 4
  27              	size:
  28 0000 01000000 		.word	1
  29              		.section	.text.initI2C,"ax",%progbits
  30              		.align	2
  31              		.global	initI2C
  32              		.code	16
  33              		.thumb_func
  34              		.type	initI2C, %function
  35              	initI2C:
  36              	.LFB33:
  37              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** #define CONVERT_TO_ASCII 48
  17:.\I2C_Class.c **** #define TEMP_SENSOR_ADDRESS 0x48            // For LM75 temp sensor with A0 = 0, A1 = 0 and A3 = 0
  18:.\I2C_Class.c **** #define SOILHUM_SENSOR_ADDRESS 0x32
  19:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  20:.\I2C_Class.c **** //#define debugging // Uncomment to enable debugging
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 2


  21:.\I2C_Class.c **** 
  22:.\I2C_Class.c **** // Private data members
  23:.\I2C_Class.c **** uint8 irrigationStatus = 0;
  24:.\I2C_Class.c **** 
  25:.\I2C_Class.c **** // Private prototypes
  26:.\I2C_Class.c **** 
  27:.\I2C_Class.c **** // Buffers / flags
  28:.\I2C_Class.c **** static int size = 1;
  29:.\I2C_Class.c **** 
  30:.\I2C_Class.c **** void initI2C(void){
  38              		.loc 1 30 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  31:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  46              		.loc 1 31 0
  47 0004 FFF7FEFF 		bl	I2C_Start
  32:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  48              		.loc 1 32 0
  49 0008 FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  33:.\I2C_Class.c **** }
  50              		.loc 1 33 0
  51 000c BD46     		mov	sp, r7
  52              		@ sp needed
  53 000e 80BD     		pop	{r7, pc}
  54              		.cfi_endproc
  55              	.LFE33:
  56              		.size	initI2C, .-initI2C
  57              		.section	.text.adjustWindow,"ax",%progbits
  58              		.align	2
  59              		.global	adjustWindow
  60              		.code	16
  61              		.thumb_func
  62              		.type	adjustWindow, %function
  63              	adjustWindow:
  64              	.LFB34:
  34:.\I2C_Class.c **** 
  35:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
  65              		.loc 1 35 0
  66              		.cfi_startproc
  67 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  68              		.cfi_def_cfa_offset 20
  69              		.cfi_offset 4, -20
  70              		.cfi_offset 5, -16
  71              		.cfi_offset 6, -12
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 97B0     		sub	sp, sp, #92
  75              		.cfi_def_cfa_offset 112
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 031C     		mov	r3, r0
  79 0008 3A1C     		mov	r2, r7
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 3


  80 000a 3F32     		add	r2, r2, #63
  81 000c 1370     		strb	r3, [r2]
  82 000e 6B46     		mov	r3, sp
  83 0010 1E1C     		mov	r6, r3
  36:.\I2C_Class.c ****     uint8 openWindow[size], closeWindow[size];
  84              		.loc 1 36 0
  85 0012 594B     		ldr	r3, .L11
  86 0014 1A68     		ldr	r2, [r3]
  87 0016 531E     		sub	r3, r2, #1
  88 0018 3B65     		str	r3, [r7, #80]
  89 001a 131C     		mov	r3, r2
  90 001c 1C1C     		mov	r4, r3
  91 001e 0023     		mov	r3, #0
  92 0020 1D1C     		mov	r5, r3
  93 0022 630F     		lsr	r3, r4, #29
  94 0024 E900     		lsl	r1, r5, #3
  95 0026 7963     		str	r1, [r7, #52]
  96 0028 796B     		ldr	r1, [r7, #52]
  97 002a 1943     		orr	r1, r3
  98 002c 7963     		str	r1, [r7, #52]
  99 002e E300     		lsl	r3, r4, #3
 100 0030 131C     		mov	r3, r2
 101 0032 BB62     		str	r3, [r7, #40]
 102 0034 0023     		mov	r3, #0
 103 0036 FB62     		str	r3, [r7, #44]
 104 0038 B96A     		ldr	r1, [r7, #40]
 105 003a 4B0F     		lsr	r3, r1, #29
 106 003c F96A     		ldr	r1, [r7, #44]
 107 003e C900     		lsl	r1, r1, #3
 108 0040 7962     		str	r1, [r7, #36]
 109 0042 796A     		ldr	r1, [r7, #36]
 110 0044 1943     		orr	r1, r3
 111 0046 7962     		str	r1, [r7, #36]
 112 0048 BB6A     		ldr	r3, [r7, #40]
 113 004a DB00     		lsl	r3, r3, #3
 114 004c 131C     		mov	r3, r2
 115 004e 0733     		add	r3, r3, #7
 116 0050 DB08     		lsr	r3, r3, #3
 117 0052 DB00     		lsl	r3, r3, #3
 118 0054 6946     		mov	r1, sp
 119 0056 C91A     		sub	r1, r1, r3
 120 0058 8D46     		mov	sp, r1
 121 005a 6B46     		mov	r3, sp
 122 005c 0033     		add	r3, r3, #0
 123 005e FB64     		str	r3, [r7, #76]
 124 0060 454B     		ldr	r3, .L11
 125 0062 1B68     		ldr	r3, [r3]
 126 0064 5A1E     		sub	r2, r3, #1
 127 0066 BA64     		str	r2, [r7, #72]
 128 0068 1A1C     		mov	r2, r3
 129 006a BA61     		str	r2, [r7, #24]
 130 006c 0022     		mov	r2, #0
 131 006e FA61     		str	r2, [r7, #28]
 132 0070 B969     		ldr	r1, [r7, #24]
 133 0072 4A0F     		lsr	r2, r1, #29
 134 0074 F969     		ldr	r1, [r7, #28]
 135 0076 C900     		lsl	r1, r1, #3
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 4


 136 0078 7961     		str	r1, [r7, #20]
 137 007a 7969     		ldr	r1, [r7, #20]
 138 007c 1143     		orr	r1, r2
 139 007e 7961     		str	r1, [r7, #20]
 140 0080 BA69     		ldr	r2, [r7, #24]
 141 0082 D200     		lsl	r2, r2, #3
 142 0084 1A1C     		mov	r2, r3
 143 0086 BA60     		str	r2, [r7, #8]
 144 0088 0022     		mov	r2, #0
 145 008a FA60     		str	r2, [r7, #12]
 146 008c B968     		ldr	r1, [r7, #8]
 147 008e 4A0F     		lsr	r2, r1, #29
 148 0090 F968     		ldr	r1, [r7, #12]
 149 0092 C900     		lsl	r1, r1, #3
 150 0094 7960     		str	r1, [r7, #4]
 151 0096 7968     		ldr	r1, [r7, #4]
 152 0098 1143     		orr	r1, r2
 153 009a 7960     		str	r1, [r7, #4]
 154 009c BA68     		ldr	r2, [r7, #8]
 155 009e D200     		lsl	r2, r2, #3
 156 00a0 0733     		add	r3, r3, #7
 157 00a2 DB08     		lsr	r3, r3, #3
 158 00a4 DB00     		lsl	r3, r3, #3
 159 00a6 6946     		mov	r1, sp
 160 00a8 C91A     		sub	r1, r1, r3
 161 00aa 8D46     		mov	sp, r1
 162 00ac 6B46     		mov	r3, sp
 163 00ae 0033     		add	r3, r3, #0
 164 00b0 7B64     		str	r3, [r7, #68]
  37:.\I2C_Class.c ****     openWindow[0] = 0xF;
 165              		.loc 1 37 0
 166 00b2 FB6C     		ldr	r3, [r7, #76]
 167 00b4 0F22     		mov	r2, #15
 168 00b6 1A70     		strb	r2, [r3]
  38:.\I2C_Class.c ****     closeWindow[0] = 0x0;
 169              		.loc 1 38 0
 170 00b8 7B6C     		ldr	r3, [r7, #68]
 171 00ba 0022     		mov	r2, #0
 172 00bc 1A70     		strb	r2, [r3]
  39:.\I2C_Class.c ****     uint8 result = 0;
 173              		.loc 1 39 0
 174 00be 3B1C     		mov	r3, r7
 175 00c0 5733     		add	r3, r3, #87
 176 00c2 0022     		mov	r2, #0
 177 00c4 1A70     		strb	r2, [r3]
  40:.\I2C_Class.c ****     uint8 tempWindow = 0;
 178              		.loc 1 40 0
 179 00c6 3B1C     		mov	r3, r7
 180 00c8 4333     		add	r3, r3, #67
 181 00ca 0022     		mov	r2, #0
 182 00cc 1A70     		strb	r2, [r3]
  41:.\I2C_Class.c ****         
  42:.\I2C_Class.c ****     if(pos == 0xFF){
 183              		.loc 1 42 0
 184 00ce 3B1C     		mov	r3, r7
 185 00d0 3F33     		add	r3, r3, #63
 186 00d2 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 5


 187 00d4 FF2B     		cmp	r3, #255
 188 00d6 0DD1     		bne	.L3
  43:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  44:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,openWindow,size,I2C_I2C_MODE_COMPLETE_XFER);
 189              		.loc 1 44 0
 190 00d8 FA6C     		ldr	r2, [r7, #76]
 191 00da 274B     		ldr	r3, .L11
 192 00dc 1B68     		ldr	r3, [r3]
 193 00de 4220     		mov	r0, #66
 194 00e0 111C     		mov	r1, r2
 195 00e2 1A1C     		mov	r2, r3
 196 00e4 0023     		mov	r3, #0
 197 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 198 00ea 021C     		mov	r2, r0
 199 00ec 3B1C     		mov	r3, r7
 200 00ee 5733     		add	r3, r3, #87
 201 00f0 1A70     		strb	r2, [r3]
 202 00f2 12E0     		b	.L4
 203              	.L3:
  45:.\I2C_Class.c ****     }
  46:.\I2C_Class.c ****     else if(pos == 0x0){
 204              		.loc 1 46 0
 205 00f4 3B1C     		mov	r3, r7
 206 00f6 3F33     		add	r3, r3, #63
 207 00f8 1B78     		ldrb	r3, [r3]
 208 00fa 002B     		cmp	r3, #0
 209 00fc 0DD1     		bne	.L4
  47:.\I2C_Class.c ****         // Close window
  48:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,closeWindow,size,I2C_I2C_MODE_COMPLETE_XFER)
 210              		.loc 1 48 0
 211 00fe 7A6C     		ldr	r2, [r7, #68]
 212 0100 1D4B     		ldr	r3, .L11
 213 0102 1B68     		ldr	r3, [r3]
 214 0104 4220     		mov	r0, #66
 215 0106 111C     		mov	r1, r2
 216 0108 1A1C     		mov	r2, r3
 217 010a 0023     		mov	r3, #0
 218 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 219 0110 021C     		mov	r2, r0
 220 0112 3B1C     		mov	r3, r7
 221 0114 5733     		add	r3, r3, #87
 222 0116 1A70     		strb	r2, [r3]
  49:.\I2C_Class.c ****     }
  50:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 223              		.loc 1 50 0
 224 0118 FFE7     		b	.L10
 225              	.L4:
 226              	.L10:
 227 011a C046     		mov	r8, r8
 228              	.L5:
 229              		.loc 1 50 0 is_stmt 0 discriminator 1
 230 011c FFF7FEFF 		bl	I2C_I2CMasterStatus
 231 0120 021C     		mov	r2, r0
 232 0122 0223     		mov	r3, #2
 233 0124 1340     		and	r3, r2
 234 0126 F9D0     		beq	.L5
  51:.\I2C_Class.c ****     CyDelay(60);
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 6


 235              		.loc 1 51 0 is_stmt 1
 236 0128 3C20     		mov	r0, #60
 237 012a FFF7FEFF 		bl	CyDelay
  52:.\I2C_Class.c ****     
  53:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(&tempWindow, NULL, NULL, NULL))){
 238              		.loc 1 53 0
 239 012e 3B1C     		mov	r3, r7
 240 0130 5733     		add	r3, r3, #87
 241 0132 1B78     		ldrb	r3, [r3]
 242 0134 002B     		cmp	r3, #0
 243 0136 18D1     		bne	.L6
 244              		.loc 1 53 0 is_stmt 0 discriminator 1
 245 0138 3B1C     		mov	r3, r7
 246 013a 4333     		add	r3, r3, #67
 247 013c 181C     		mov	r0, r3
 248 013e 0021     		mov	r1, #0
 249 0140 0022     		mov	r2, #0
 250 0142 0023     		mov	r3, #0
 251 0144 FFF7FEFF 		bl	getActuatorStatus
 252 0148 031C     		mov	r3, r0
 253 014a 002B     		cmp	r3, #0
 254 014c 0DD1     		bne	.L6
  54:.\I2C_Class.c ****         if (tempWindow == pos >> 4 ){  //hacky solution when dealing with fully open/closed window
 255              		.loc 1 54 0 is_stmt 1
 256 014e 3B1C     		mov	r3, r7
 257 0150 3F33     		add	r3, r3, #63
 258 0152 1B78     		ldrb	r3, [r3]
 259 0154 1B09     		lsr	r3, r3, #4
 260 0156 DAB2     		uxtb	r2, r3
 261 0158 3B1C     		mov	r3, r7
 262 015a 4333     		add	r3, r3, #67
 263 015c 1B78     		ldrb	r3, [r3]
 264 015e 9A42     		cmp	r2, r3
 265 0160 01D1     		bne	.L7
  55:.\I2C_Class.c ****             return 0;	
 266              		.loc 1 55 0
 267 0162 0023     		mov	r3, #0
 268 0164 02E0     		b	.L8
 269              	.L7:
  56:.\I2C_Class.c ****         }
  57:.\I2C_Class.c ****         else {
  58:.\I2C_Class.c ****             return -1;
 270              		.loc 1 58 0
 271 0166 FF23     		mov	r3, #255
 272 0168 00E0     		b	.L8
 273              	.L6:
  59:.\I2C_Class.c ****         }
  60:.\I2C_Class.c ****     }
  61:.\I2C_Class.c ****     else {
  62:.\I2C_Class.c ****         return -1;
 274              		.loc 1 62 0
 275 016a FF23     		mov	r3, #255
 276              	.L8:
 277 016c B546     		mov	sp, r6
 278 016e 5BB2     		sxtb	r3, r3
  63:.\I2C_Class.c ****     }
  64:.\I2C_Class.c **** }
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 7


 279              		.loc 1 64 0
 280 0170 181C     		mov	r0, r3
 281 0172 BD46     		mov	sp, r7
 282 0174 17B0     		add	sp, sp, #92
 283              		@ sp needed
 284 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 285              	.L12:
 286              		.align	2
 287              	.L11:
 288 0178 00000000 		.word	size
 289              		.cfi_endproc
 290              	.LFE34:
 291              		.size	adjustWindow, .-adjustWindow
 292              		.section	.text.adjustHeat,"ax",%progbits
 293              		.align	2
 294              		.global	adjustHeat
 295              		.code	16
 296              		.thumb_func
 297              		.type	adjustHeat, %function
 298              	adjustHeat:
 299              	.LFB35:
  65:.\I2C_Class.c **** 
  66:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 300              		.loc 1 66 0
 301              		.cfi_startproc
 302 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 303              		.cfi_def_cfa_offset 20
 304              		.cfi_offset 4, -20
 305              		.cfi_offset 5, -16
 306              		.cfi_offset 6, -12
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 97B0     		sub	sp, sp, #92
 310              		.cfi_def_cfa_offset 112
 311 0004 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 313 0006 031C     		mov	r3, r0
 314 0008 3A1C     		mov	r2, r7
 315 000a 3F32     		add	r2, r2, #63
 316 000c 1370     		strb	r3, [r2]
 317 000e 6B46     		mov	r3, sp
 318 0010 1E1C     		mov	r6, r3
  67:.\I2C_Class.c ****     uint8 turnHeatOn[size], turnOffHeat[size];
 319              		.loc 1 67 0
 320 0012 594B     		ldr	r3, .L22
 321 0014 1A68     		ldr	r2, [r3]
 322 0016 531E     		sub	r3, r2, #1
 323 0018 3B65     		str	r3, [r7, #80]
 324 001a 131C     		mov	r3, r2
 325 001c 1C1C     		mov	r4, r3
 326 001e 0023     		mov	r3, #0
 327 0020 1D1C     		mov	r5, r3
 328 0022 630F     		lsr	r3, r4, #29
 329 0024 E900     		lsl	r1, r5, #3
 330 0026 7963     		str	r1, [r7, #52]
 331 0028 796B     		ldr	r1, [r7, #52]
 332 002a 1943     		orr	r1, r3
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 8


 333 002c 7963     		str	r1, [r7, #52]
 334 002e E300     		lsl	r3, r4, #3
 335 0030 131C     		mov	r3, r2
 336 0032 BB62     		str	r3, [r7, #40]
 337 0034 0023     		mov	r3, #0
 338 0036 FB62     		str	r3, [r7, #44]
 339 0038 B96A     		ldr	r1, [r7, #40]
 340 003a 4B0F     		lsr	r3, r1, #29
 341 003c F96A     		ldr	r1, [r7, #44]
 342 003e C900     		lsl	r1, r1, #3
 343 0040 7962     		str	r1, [r7, #36]
 344 0042 796A     		ldr	r1, [r7, #36]
 345 0044 1943     		orr	r1, r3
 346 0046 7962     		str	r1, [r7, #36]
 347 0048 BB6A     		ldr	r3, [r7, #40]
 348 004a DB00     		lsl	r3, r3, #3
 349 004c 131C     		mov	r3, r2
 350 004e 0733     		add	r3, r3, #7
 351 0050 DB08     		lsr	r3, r3, #3
 352 0052 DB00     		lsl	r3, r3, #3
 353 0054 6946     		mov	r1, sp
 354 0056 C91A     		sub	r1, r1, r3
 355 0058 8D46     		mov	sp, r1
 356 005a 6B46     		mov	r3, sp
 357 005c 0033     		add	r3, r3, #0
 358 005e FB64     		str	r3, [r7, #76]
 359 0060 454B     		ldr	r3, .L22
 360 0062 1B68     		ldr	r3, [r3]
 361 0064 5A1E     		sub	r2, r3, #1
 362 0066 BA64     		str	r2, [r7, #72]
 363 0068 1A1C     		mov	r2, r3
 364 006a BA61     		str	r2, [r7, #24]
 365 006c 0022     		mov	r2, #0
 366 006e FA61     		str	r2, [r7, #28]
 367 0070 B969     		ldr	r1, [r7, #24]
 368 0072 4A0F     		lsr	r2, r1, #29
 369 0074 F969     		ldr	r1, [r7, #28]
 370 0076 C900     		lsl	r1, r1, #3
 371 0078 7961     		str	r1, [r7, #20]
 372 007a 7969     		ldr	r1, [r7, #20]
 373 007c 1143     		orr	r1, r2
 374 007e 7961     		str	r1, [r7, #20]
 375 0080 BA69     		ldr	r2, [r7, #24]
 376 0082 D200     		lsl	r2, r2, #3
 377 0084 1A1C     		mov	r2, r3
 378 0086 BA60     		str	r2, [r7, #8]
 379 0088 0022     		mov	r2, #0
 380 008a FA60     		str	r2, [r7, #12]
 381 008c B968     		ldr	r1, [r7, #8]
 382 008e 4A0F     		lsr	r2, r1, #29
 383 0090 F968     		ldr	r1, [r7, #12]
 384 0092 C900     		lsl	r1, r1, #3
 385 0094 7960     		str	r1, [r7, #4]
 386 0096 7968     		ldr	r1, [r7, #4]
 387 0098 1143     		orr	r1, r2
 388 009a 7960     		str	r1, [r7, #4]
 389 009c BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 9


 390 009e D200     		lsl	r2, r2, #3
 391 00a0 0733     		add	r3, r3, #7
 392 00a2 DB08     		lsr	r3, r3, #3
 393 00a4 DB00     		lsl	r3, r3, #3
 394 00a6 6946     		mov	r1, sp
 395 00a8 C91A     		sub	r1, r1, r3
 396 00aa 8D46     		mov	sp, r1
 397 00ac 6B46     		mov	r3, sp
 398 00ae 0033     		add	r3, r3, #0
 399 00b0 7B64     		str	r3, [r7, #68]
  68:.\I2C_Class.c ****     turnHeatOn[0] = 0b01000111;
 400              		.loc 1 68 0
 401 00b2 FB6C     		ldr	r3, [r7, #76]
 402 00b4 4722     		mov	r2, #71
 403 00b6 1A70     		strb	r2, [r3]
  69:.\I2C_Class.c ****     turnOffHeat[0] = 0b01000000;
 404              		.loc 1 69 0
 405 00b8 7B6C     		ldr	r3, [r7, #68]
 406 00ba 4022     		mov	r2, #64
 407 00bc 1A70     		strb	r2, [r3]
  70:.\I2C_Class.c ****     uint8 result = 0;
 408              		.loc 1 70 0
 409 00be 3B1C     		mov	r3, r7
 410 00c0 5733     		add	r3, r3, #87
 411 00c2 0022     		mov	r2, #0
 412 00c4 1A70     		strb	r2, [r3]
  71:.\I2C_Class.c ****     uint8 temp = 0xFF;
 413              		.loc 1 71 0
 414 00c6 3B1C     		mov	r3, r7
 415 00c8 4333     		add	r3, r3, #67
 416 00ca FF22     		mov	r2, #255
 417 00cc 1A70     		strb	r2, [r3]
  72:.\I2C_Class.c ****     
  73:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();
 418              		.loc 1 73 0
 419 00ce FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  74:.\I2C_Class.c ****     
  75:.\I2C_Class.c ****     if(heat == 0b111){
 420              		.loc 1 75 0
 421 00d2 3B1C     		mov	r3, r7
 422 00d4 3F33     		add	r3, r3, #63
 423 00d6 1B78     		ldrb	r3, [r3]
 424 00d8 072B     		cmp	r3, #7
 425 00da 0DD1     		bne	.L14
  76:.\I2C_Class.c ****         // Turn on heat
  77:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnHeatOn,size,I2C_I2C_MODE_COMPLETE_XFER);
 426              		.loc 1 77 0
 427 00dc FA6C     		ldr	r2, [r7, #76]
 428 00de 264B     		ldr	r3, .L22
 429 00e0 1B68     		ldr	r3, [r3]
 430 00e2 4220     		mov	r0, #66
 431 00e4 111C     		mov	r1, r2
 432 00e6 1A1C     		mov	r2, r3
 433 00e8 0023     		mov	r3, #0
 434 00ea FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 435 00ee 021C     		mov	r2, r0
 436 00f0 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 10


 437 00f2 5733     		add	r3, r3, #87
 438 00f4 1A70     		strb	r2, [r3]
 439 00f6 12E0     		b	.L15
 440              	.L14:
  78:.\I2C_Class.c ****     }
  79:.\I2C_Class.c ****     else if(heat == 0b0){
 441              		.loc 1 79 0
 442 00f8 3B1C     		mov	r3, r7
 443 00fa 3F33     		add	r3, r3, #63
 444 00fc 1B78     		ldrb	r3, [r3]
 445 00fe 002B     		cmp	r3, #0
 446 0100 0DD1     		bne	.L15
  80:.\I2C_Class.c ****         // Turn off heat
  81:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffHeat,size,I2C_I2C_MODE_COMPLETE_XFER)
 447              		.loc 1 81 0
 448 0102 7A6C     		ldr	r2, [r7, #68]
 449 0104 1C4B     		ldr	r3, .L22
 450 0106 1B68     		ldr	r3, [r3]
 451 0108 4220     		mov	r0, #66
 452 010a 111C     		mov	r1, r2
 453 010c 1A1C     		mov	r2, r3
 454 010e 0023     		mov	r3, #0
 455 0110 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 456 0114 021C     		mov	r2, r0
 457 0116 3B1C     		mov	r3, r7
 458 0118 5733     		add	r3, r3, #87
 459 011a 1A70     		strb	r2, [r3]
  82:.\I2C_Class.c ****     }
  83:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 460              		.loc 1 83 0
 461 011c FFE7     		b	.L21
 462              	.L15:
 463              	.L21:
 464 011e C046     		mov	r8, r8
 465              	.L16:
 466              		.loc 1 83 0 is_stmt 0 discriminator 1
 467 0120 FFF7FEFF 		bl	I2C_I2CMasterStatus
 468 0124 021C     		mov	r2, r0
 469 0126 0223     		mov	r3, #2
 470 0128 1340     		and	r3, r2
 471 012a F9D0     		beq	.L16
  84:.\I2C_Class.c ****     CyDelay(60);
 472              		.loc 1 84 0 is_stmt 1
 473 012c 3C20     		mov	r0, #60
 474 012e FFF7FEFF 		bl	CyDelay
  85:.\I2C_Class.c **** 
  86:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, &temp, NULL, NULL))){
 475              		.loc 1 86 0
 476 0132 3B1C     		mov	r3, r7
 477 0134 5733     		add	r3, r3, #87
 478 0136 1B78     		ldrb	r3, [r3]
 479 0138 002B     		cmp	r3, #0
 480 013a 16D1     		bne	.L17
 481              		.loc 1 86 0 is_stmt 0 discriminator 1
 482 013c 3B1C     		mov	r3, r7
 483 013e 4333     		add	r3, r3, #67
 484 0140 0020     		mov	r0, #0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 11


 485 0142 191C     		mov	r1, r3
 486 0144 0022     		mov	r2, #0
 487 0146 0023     		mov	r3, #0
 488 0148 FFF7FEFF 		bl	getActuatorStatus
 489 014c 031C     		mov	r3, r0
 490 014e 002B     		cmp	r3, #0
 491 0150 0BD1     		bne	.L17
  87:.\I2C_Class.c ****         if (temp == heat){
 492              		.loc 1 87 0 is_stmt 1
 493 0152 3B1C     		mov	r3, r7
 494 0154 4333     		add	r3, r3, #67
 495 0156 1B78     		ldrb	r3, [r3]
 496 0158 3A1C     		mov	r2, r7
 497 015a 3F32     		add	r2, r2, #63
 498 015c 1278     		ldrb	r2, [r2]
 499 015e 9A42     		cmp	r2, r3
 500 0160 01D1     		bne	.L18
  88:.\I2C_Class.c ****             return 0;
 501              		.loc 1 88 0
 502 0162 0023     		mov	r3, #0
 503 0164 02E0     		b	.L19
 504              	.L18:
  89:.\I2C_Class.c ****         }
  90:.\I2C_Class.c ****         else {
  91:.\I2C_Class.c ****             return -1;   
 505              		.loc 1 91 0
 506 0166 FF23     		mov	r3, #255
 507 0168 00E0     		b	.L19
 508              	.L17:
  92:.\I2C_Class.c ****         }
  93:.\I2C_Class.c ****     }
  94:.\I2C_Class.c ****     else {
  95:.\I2C_Class.c ****         return -1;
 509              		.loc 1 95 0
 510 016a FF23     		mov	r3, #255
 511              	.L19:
 512 016c B546     		mov	sp, r6
 513 016e 5BB2     		sxtb	r3, r3
  96:.\I2C_Class.c ****     }
  97:.\I2C_Class.c **** }
 514              		.loc 1 97 0
 515 0170 181C     		mov	r0, r3
 516 0172 BD46     		mov	sp, r7
 517 0174 17B0     		add	sp, sp, #92
 518              		@ sp needed
 519 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 520              	.L23:
 521              		.align	2
 522              	.L22:
 523 0178 00000000 		.word	size
 524              		.cfi_endproc
 525              	.LFE35:
 526              		.size	adjustHeat, .-adjustHeat
 527              		.section	.text.adjustVentilation,"ax",%progbits
 528              		.align	2
 529              		.global	adjustVentilation
 530              		.code	16
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 12


 531              		.thumb_func
 532              		.type	adjustVentilation, %function
 533              	adjustVentilation:
 534              	.LFB36:
  98:.\I2C_Class.c **** 
  99:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 535              		.loc 1 99 0
 536              		.cfi_startproc
 537 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 538              		.cfi_def_cfa_offset 20
 539              		.cfi_offset 4, -20
 540              		.cfi_offset 5, -16
 541              		.cfi_offset 6, -12
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 97B0     		sub	sp, sp, #92
 545              		.cfi_def_cfa_offset 112
 546 0004 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 548 0006 031C     		mov	r3, r0
 549 0008 3A1C     		mov	r2, r7
 550 000a 3F32     		add	r2, r2, #63
 551 000c 1370     		strb	r3, [r2]
 552 000e 6B46     		mov	r3, sp
 553 0010 1E1C     		mov	r6, r3
 100:.\I2C_Class.c ****     uint8 turnOnVent[size], turnOffVent[size];
 554              		.loc 1 100 0
 555 0012 594B     		ldr	r3, .L33
 556 0014 1A68     		ldr	r2, [r3]
 557 0016 531E     		sub	r3, r2, #1
 558 0018 3B65     		str	r3, [r7, #80]
 559 001a 131C     		mov	r3, r2
 560 001c 1C1C     		mov	r4, r3
 561 001e 0023     		mov	r3, #0
 562 0020 1D1C     		mov	r5, r3
 563 0022 630F     		lsr	r3, r4, #29
 564 0024 E900     		lsl	r1, r5, #3
 565 0026 7963     		str	r1, [r7, #52]
 566 0028 796B     		ldr	r1, [r7, #52]
 567 002a 1943     		orr	r1, r3
 568 002c 7963     		str	r1, [r7, #52]
 569 002e E300     		lsl	r3, r4, #3
 570 0030 131C     		mov	r3, r2
 571 0032 BB62     		str	r3, [r7, #40]
 572 0034 0023     		mov	r3, #0
 573 0036 FB62     		str	r3, [r7, #44]
 574 0038 B96A     		ldr	r1, [r7, #40]
 575 003a 4B0F     		lsr	r3, r1, #29
 576 003c F96A     		ldr	r1, [r7, #44]
 577 003e C900     		lsl	r1, r1, #3
 578 0040 7962     		str	r1, [r7, #36]
 579 0042 796A     		ldr	r1, [r7, #36]
 580 0044 1943     		orr	r1, r3
 581 0046 7962     		str	r1, [r7, #36]
 582 0048 BB6A     		ldr	r3, [r7, #40]
 583 004a DB00     		lsl	r3, r3, #3
 584 004c 131C     		mov	r3, r2
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 13


 585 004e 0733     		add	r3, r3, #7
 586 0050 DB08     		lsr	r3, r3, #3
 587 0052 DB00     		lsl	r3, r3, #3
 588 0054 6946     		mov	r1, sp
 589 0056 C91A     		sub	r1, r1, r3
 590 0058 8D46     		mov	sp, r1
 591 005a 6B46     		mov	r3, sp
 592 005c 0033     		add	r3, r3, #0
 593 005e FB64     		str	r3, [r7, #76]
 594 0060 454B     		ldr	r3, .L33
 595 0062 1B68     		ldr	r3, [r3]
 596 0064 5A1E     		sub	r2, r3, #1
 597 0066 BA64     		str	r2, [r7, #72]
 598 0068 1A1C     		mov	r2, r3
 599 006a BA61     		str	r2, [r7, #24]
 600 006c 0022     		mov	r2, #0
 601 006e FA61     		str	r2, [r7, #28]
 602 0070 B969     		ldr	r1, [r7, #24]
 603 0072 4A0F     		lsr	r2, r1, #29
 604 0074 F969     		ldr	r1, [r7, #28]
 605 0076 C900     		lsl	r1, r1, #3
 606 0078 7961     		str	r1, [r7, #20]
 607 007a 7969     		ldr	r1, [r7, #20]
 608 007c 1143     		orr	r1, r2
 609 007e 7961     		str	r1, [r7, #20]
 610 0080 BA69     		ldr	r2, [r7, #24]
 611 0082 D200     		lsl	r2, r2, #3
 612 0084 1A1C     		mov	r2, r3
 613 0086 BA60     		str	r2, [r7, #8]
 614 0088 0022     		mov	r2, #0
 615 008a FA60     		str	r2, [r7, #12]
 616 008c B968     		ldr	r1, [r7, #8]
 617 008e 4A0F     		lsr	r2, r1, #29
 618 0090 F968     		ldr	r1, [r7, #12]
 619 0092 C900     		lsl	r1, r1, #3
 620 0094 7960     		str	r1, [r7, #4]
 621 0096 7968     		ldr	r1, [r7, #4]
 622 0098 1143     		orr	r1, r2
 623 009a 7960     		str	r1, [r7, #4]
 624 009c BA68     		ldr	r2, [r7, #8]
 625 009e D200     		lsl	r2, r2, #3
 626 00a0 0733     		add	r3, r3, #7
 627 00a2 DB08     		lsr	r3, r3, #3
 628 00a4 DB00     		lsl	r3, r3, #3
 629 00a6 6946     		mov	r1, sp
 630 00a8 C91A     		sub	r1, r1, r3
 631 00aa 8D46     		mov	sp, r1
 632 00ac 6B46     		mov	r3, sp
 633 00ae 0033     		add	r3, r3, #0
 634 00b0 7B64     		str	r3, [r7, #68]
 101:.\I2C_Class.c ****     turnOnVent[0] = 0b10000111;
 635              		.loc 1 101 0
 636 00b2 FB6C     		ldr	r3, [r7, #76]
 637 00b4 8722     		mov	r2, #135
 638 00b6 1A70     		strb	r2, [r3]
 102:.\I2C_Class.c ****     turnOffVent[0] = 0b10000000;
 639              		.loc 1 102 0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 14


 640 00b8 7B6C     		ldr	r3, [r7, #68]
 641 00ba 8022     		mov	r2, #128
 642 00bc 1A70     		strb	r2, [r3]
 103:.\I2C_Class.c ****     uint8 result = 0;
 643              		.loc 1 103 0
 644 00be 3B1C     		mov	r3, r7
 645 00c0 5733     		add	r3, r3, #87
 646 00c2 0022     		mov	r2, #0
 647 00c4 1A70     		strb	r2, [r3]
 104:.\I2C_Class.c ****     uint8 temp = 0xFF;
 648              		.loc 1 104 0
 649 00c6 3B1C     		mov	r3, r7
 650 00c8 4333     		add	r3, r3, #67
 651 00ca FF22     		mov	r2, #255
 652 00cc 1A70     		strb	r2, [r3]
 105:.\I2C_Class.c ****         
 106:.\I2C_Class.c ****     if(speed == 0xFF){
 653              		.loc 1 106 0
 654 00ce 3B1C     		mov	r3, r7
 655 00d0 3F33     		add	r3, r3, #63
 656 00d2 1B78     		ldrb	r3, [r3]
 657 00d4 FF2B     		cmp	r3, #255
 658 00d6 0DD1     		bne	.L25
 107:.\I2C_Class.c ****         // Turn vent on
 108:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOnVent,size,I2C_I2C_MODE_COMPLETE_XFER);
 659              		.loc 1 108 0
 660 00d8 FA6C     		ldr	r2, [r7, #76]
 661 00da 274B     		ldr	r3, .L33
 662 00dc 1B68     		ldr	r3, [r3]
 663 00de 4220     		mov	r0, #66
 664 00e0 111C     		mov	r1, r2
 665 00e2 1A1C     		mov	r2, r3
 666 00e4 0023     		mov	r3, #0
 667 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 668 00ea 021C     		mov	r2, r0
 669 00ec 3B1C     		mov	r3, r7
 670 00ee 5733     		add	r3, r3, #87
 671 00f0 1A70     		strb	r2, [r3]
 672 00f2 12E0     		b	.L26
 673              	.L25:
 109:.\I2C_Class.c ****     }
 110:.\I2C_Class.c ****     else if(speed == 0b0){
 674              		.loc 1 110 0
 675 00f4 3B1C     		mov	r3, r7
 676 00f6 3F33     		add	r3, r3, #63
 677 00f8 1B78     		ldrb	r3, [r3]
 678 00fa 002B     		cmp	r3, #0
 679 00fc 0DD1     		bne	.L26
 111:.\I2C_Class.c ****         // Turn vent off
 112:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffVent,size,I2C_I2C_MODE_COMPLETE_XFER)
 680              		.loc 1 112 0
 681 00fe 7A6C     		ldr	r2, [r7, #68]
 682 0100 1D4B     		ldr	r3, .L33
 683 0102 1B68     		ldr	r3, [r3]
 684 0104 4220     		mov	r0, #66
 685 0106 111C     		mov	r1, r2
 686 0108 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 15


 687 010a 0023     		mov	r3, #0
 688 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 689 0110 021C     		mov	r2, r0
 690 0112 3B1C     		mov	r3, r7
 691 0114 5733     		add	r3, r3, #87
 692 0116 1A70     		strb	r2, [r3]
 113:.\I2C_Class.c ****     }
 114:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 693              		.loc 1 114 0
 694 0118 FFE7     		b	.L32
 695              	.L26:
 696              	.L32:
 697 011a C046     		mov	r8, r8
 698              	.L27:
 699              		.loc 1 114 0 is_stmt 0 discriminator 1
 700 011c FFF7FEFF 		bl	I2C_I2CMasterStatus
 701 0120 021C     		mov	r2, r0
 702 0122 0223     		mov	r3, #2
 703 0124 1340     		and	r3, r2
 704 0126 F9D0     		beq	.L27
 115:.\I2C_Class.c ****     CyDelay(60);
 705              		.loc 1 115 0 is_stmt 1
 706 0128 3C20     		mov	r0, #60
 707 012a FFF7FEFF 		bl	CyDelay
 116:.\I2C_Class.c ****     
 117:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, NULL, &temp, NULL))){
 708              		.loc 1 117 0
 709 012e 3B1C     		mov	r3, r7
 710 0130 5733     		add	r3, r3, #87
 711 0132 1B78     		ldrb	r3, [r3]
 712 0134 002B     		cmp	r3, #0
 713 0136 18D1     		bne	.L28
 714              		.loc 1 117 0 is_stmt 0 discriminator 1
 715 0138 3B1C     		mov	r3, r7
 716 013a 4333     		add	r3, r3, #67
 717 013c 0020     		mov	r0, #0
 718 013e 0021     		mov	r1, #0
 719 0140 1A1C     		mov	r2, r3
 720 0142 0023     		mov	r3, #0
 721 0144 FFF7FEFF 		bl	getActuatorStatus
 722 0148 031C     		mov	r3, r0
 723 014a 002B     		cmp	r3, #0
 724 014c 0DD1     		bne	.L28
 118:.\I2C_Class.c ****         if (temp == speed >> 5){ //Hacky solution when not dealing with more than 2 steps
 725              		.loc 1 118 0 is_stmt 1
 726 014e 3B1C     		mov	r3, r7
 727 0150 3F33     		add	r3, r3, #63
 728 0152 1B78     		ldrb	r3, [r3]
 729 0154 5B09     		lsr	r3, r3, #5
 730 0156 DAB2     		uxtb	r2, r3
 731 0158 3B1C     		mov	r3, r7
 732 015a 4333     		add	r3, r3, #67
 733 015c 1B78     		ldrb	r3, [r3]
 734 015e 9A42     		cmp	r2, r3
 735 0160 01D1     		bne	.L29
 119:.\I2C_Class.c ****             return 0;
 736              		.loc 1 119 0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 16


 737 0162 0023     		mov	r3, #0
 738 0164 02E0     		b	.L30
 739              	.L29:
 120:.\I2C_Class.c ****             }
 121:.\I2C_Class.c ****         else {
 122:.\I2C_Class.c ****             return -1;       
 740              		.loc 1 122 0
 741 0166 FF23     		mov	r3, #255
 742 0168 00E0     		b	.L30
 743              	.L28:
 123:.\I2C_Class.c ****         }
 124:.\I2C_Class.c ****     }
 125:.\I2C_Class.c ****     else {
 126:.\I2C_Class.c ****         return -1;
 744              		.loc 1 126 0
 745 016a FF23     		mov	r3, #255
 746              	.L30:
 747 016c B546     		mov	sp, r6
 748 016e 5BB2     		sxtb	r3, r3
 127:.\I2C_Class.c ****     }
 128:.\I2C_Class.c **** }
 749              		.loc 1 128 0
 750 0170 181C     		mov	r0, r3
 751 0172 BD46     		mov	sp, r7
 752 0174 17B0     		add	sp, sp, #92
 753              		@ sp needed
 754 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 755              	.L34:
 756              		.align	2
 757              	.L33:
 758 0178 00000000 		.word	size
 759              		.cfi_endproc
 760              	.LFE36:
 761              		.size	adjustVentilation, .-adjustVentilation
 762              		.section	.text.adjustIrrigation,"ax",%progbits
 763              		.align	2
 764              		.global	adjustIrrigation
 765              		.code	16
 766              		.thumb_func
 767              		.type	adjustIrrigation, %function
 768              	adjustIrrigation:
 769              	.LFB37:
 129:.\I2C_Class.c **** 
 130:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 770              		.loc 1 130 0
 771              		.cfi_startproc
 772 0000 80B5     		push	{r7, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 7, -8
 775              		.cfi_offset 14, -4
 776 0002 84B0     		sub	sp, sp, #16
 777              		.cfi_def_cfa_offset 24
 778 0004 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 780 0006 0A1C     		mov	r2, r1
 781 0008 FB1D     		add	r3, r7, #7
 782 000a 011C     		add	r1, r0, #0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 17


 783 000c 1970     		strb	r1, [r3]
 784 000e BB1D     		add	r3, r7, #6
 785 0010 1A70     		strb	r2, [r3]
 131:.\I2C_Class.c ****     uint8 irriTransfer[1];
 132:.\I2C_Class.c ****     uint8 result;
 133:.\I2C_Class.c ****     
 134:.\I2C_Class.c ****     //getActuatorStatus(NULL, NULL, NULL, &irrigationStatus);
 135:.\I2C_Class.c **** 
 136:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 137:.\I2C_Class.c ****         has to get updated each time this function is called. */
 138:.\I2C_Class.c ****     if (onOff == 0xFF){    // Irrigation turn on
 786              		.loc 1 138 0
 787 0012 BB1D     		add	r3, r7, #6
 788 0014 1B78     		ldrb	r3, [r3]
 789 0016 FF2B     		cmp	r3, #255
 790 0018 18D1     		bne	.L36
 139:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus |= (1 << index)) | 0b11000000;
 791              		.loc 1 139 0
 792 001a FB1D     		add	r3, r7, #7
 793 001c 1B78     		ldrb	r3, [r3]
 794 001e 0122     		mov	r2, #1
 795 0020 111C     		mov	r1, r2
 796 0022 9940     		lsl	r1, r1, r3
 797 0024 0B1C     		mov	r3, r1
 798 0026 DAB2     		uxtb	r2, r3
 799 0028 314B     		ldr	r3, .L43
 800 002a 1B78     		ldrb	r3, [r3]
 801 002c DBB2     		uxtb	r3, r3
 802 002e 1343     		orr	r3, r2
 803 0030 DBB2     		uxtb	r3, r3
 804 0032 DAB2     		uxtb	r2, r3
 805 0034 2E4B     		ldr	r3, .L43
 806 0036 1A70     		strb	r2, [r3]
 807 0038 2D4B     		ldr	r3, .L43
 808 003a 1B78     		ldrb	r3, [r3]
 809 003c 4022     		mov	r2, #64
 810 003e 5242     		neg	r2, r2
 811 0040 1343     		orr	r3, r2
 812 0042 DAB2     		uxtb	r2, r3
 813 0044 3B1C     		mov	r3, r7
 814 0046 0C33     		add	r3, r3, #12
 815 0048 1A70     		strb	r2, [r3]
 816 004a 20E0     		b	.L37
 817              	.L36:
 140:.\I2C_Class.c ****     }
 141:.\I2C_Class.c ****     else if (onOff == 0x00){   // Irrigation turn off
 818              		.loc 1 141 0
 819 004c BB1D     		add	r3, r7, #6
 820 004e 1B78     		ldrb	r3, [r3]
 821 0050 002B     		cmp	r3, #0
 822 0052 1AD1     		bne	.L38
 142:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus &= ~(1 << index)) | 0b11000000;
 823              		.loc 1 142 0
 824 0054 FB1D     		add	r3, r7, #7
 825 0056 1B78     		ldrb	r3, [r3]
 826 0058 0122     		mov	r2, #1
 827 005a 111C     		mov	r1, r2
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 18


 828 005c 9940     		lsl	r1, r1, r3
 829 005e 0B1C     		mov	r3, r1
 830 0060 DBB2     		uxtb	r3, r3
 831 0062 DB43     		mvn	r3, r3
 832 0064 DBB2     		uxtb	r3, r3
 833 0066 224A     		ldr	r2, .L43
 834 0068 1278     		ldrb	r2, [r2]
 835 006a D2B2     		uxtb	r2, r2
 836 006c 1340     		and	r3, r2
 837 006e DBB2     		uxtb	r3, r3
 838 0070 DAB2     		uxtb	r2, r3
 839 0072 1F4B     		ldr	r3, .L43
 840 0074 1A70     		strb	r2, [r3]
 841 0076 1E4B     		ldr	r3, .L43
 842 0078 1B78     		ldrb	r3, [r3]
 843 007a 4022     		mov	r2, #64
 844 007c 5242     		neg	r2, r2
 845 007e 1343     		orr	r3, r2
 846 0080 DAB2     		uxtb	r2, r3
 847 0082 3B1C     		mov	r3, r7
 848 0084 0C33     		add	r3, r3, #12
 849 0086 1A70     		strb	r2, [r3]
 850 0088 01E0     		b	.L37
 851              	.L38:
 143:.\I2C_Class.c ****     }
 144:.\I2C_Class.c ****     else{
 145:.\I2C_Class.c ****         return -1; // Bad argument.
 852              		.loc 1 145 0
 853 008a FF23     		mov	r3, #255
 854 008c 2BE0     		b	.L42
 855              	.L37:
 146:.\I2C_Class.c ****     }
 147:.\I2C_Class.c ****     
 148:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, irriTransfer, 1, I2C_I2C_MODE_COMPLETE_XFER);
 856              		.loc 1 148 0
 857 008e 3B1C     		mov	r3, r7
 858 0090 0C33     		add	r3, r3, #12
 859 0092 4220     		mov	r0, #66
 860 0094 191C     		mov	r1, r3
 861 0096 0122     		mov	r2, #1
 862 0098 0023     		mov	r3, #0
 863 009a FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 864 009e 021C     		mov	r2, r0
 865 00a0 3B1C     		mov	r3, r7
 866 00a2 0F33     		add	r3, r3, #15
 867 00a4 1A70     		strb	r2, [r3]
 149:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 868              		.loc 1 149 0
 869 00a6 C046     		mov	r8, r8
 870              	.L40:
 871              		.loc 1 149 0 is_stmt 0 discriminator 1
 872 00a8 FFF7FEFF 		bl	I2C_I2CMasterStatus
 873 00ac 021C     		mov	r2, r0
 874 00ae 0223     		mov	r3, #2
 875 00b0 1340     		and	r3, r2
 876 00b2 F9D0     		beq	.L40
 150:.\I2C_Class.c ****     CyDelay(60);
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 19


 877              		.loc 1 150 0 is_stmt 1
 878 00b4 3C20     		mov	r0, #60
 879 00b6 FFF7FEFF 		bl	CyDelay
 151:.\I2C_Class.c ****     
 152:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, irriTransfer);
 880              		.loc 1 152 0
 881 00ba 3B1C     		mov	r3, r7
 882 00bc 0C33     		add	r3, r3, #12
 883 00be 0020     		mov	r0, #0
 884 00c0 0021     		mov	r1, #0
 885 00c2 0022     		mov	r2, #0
 886 00c4 FFF7FEFF 		bl	getActuatorStatus
 153:.\I2C_Class.c ****     
 154:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 887              		.loc 1 154 0
 888 00c8 3B1C     		mov	r3, r7
 889 00ca 0F33     		add	r3, r3, #15
 890 00cc 1B78     		ldrb	r3, [r3]
 891 00ce 002B     		cmp	r3, #0
 892 00d0 08D1     		bne	.L41
 155:.\I2C_Class.c ****         if(irrigationStatus == irriTransfer[0]){
 893              		.loc 1 155 0
 894 00d2 3B1C     		mov	r3, r7
 895 00d4 0C33     		add	r3, r3, #12
 896 00d6 1A78     		ldrb	r2, [r3]
 897 00d8 054B     		ldr	r3, .L43
 898 00da 1B78     		ldrb	r3, [r3]
 899 00dc 9A42     		cmp	r2, r3
 900 00de 01D1     		bne	.L41
 156:.\I2C_Class.c ****             return 0;
 901              		.loc 1 156 0
 902 00e0 0023     		mov	r3, #0
 903 00e2 00E0     		b	.L42
 904              	.L41:
 157:.\I2C_Class.c ****         }
 158:.\I2C_Class.c ****     }
 159:.\I2C_Class.c ****     return -1;
 905              		.loc 1 159 0
 906 00e4 FF23     		mov	r3, #255
 907              	.L42:
 908 00e6 5BB2     		sxtb	r3, r3
 160:.\I2C_Class.c **** }
 909              		.loc 1 160 0
 910 00e8 181C     		mov	r0, r3
 911 00ea BD46     		mov	sp, r7
 912 00ec 04B0     		add	sp, sp, #16
 913              		@ sp needed
 914 00ee 80BD     		pop	{r7, pc}
 915              	.L44:
 916              		.align	2
 917              	.L43:
 918 00f0 00000000 		.word	irrigationStatus
 919              		.cfi_endproc
 920              	.LFE37:
 921              		.size	adjustIrrigation, .-adjustIrrigation
 922              		.section	.text.getActuatorStatus,"ax",%progbits
 923              		.align	2
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 20


 924              		.global	getActuatorStatus
 925              		.code	16
 926              		.thumb_func
 927              		.type	getActuatorStatus, %function
 928              	getActuatorStatus:
 929              	.LFB38:
 161:.\I2C_Class.c **** 
 162:.\I2C_Class.c **** //----------getActuatorStatus0----------
 163:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 930              		.loc 1 163 0
 931              		.cfi_startproc
 932 0000 80B5     		push	{r7, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 86B0     		sub	sp, sp, #24
 937              		.cfi_def_cfa_offset 32
 938 0004 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 940 0006 F860     		str	r0, [r7, #12]
 941 0008 B960     		str	r1, [r7, #8]
 942 000a 7A60     		str	r2, [r7, #4]
 943 000c 3B60     		str	r3, [r7]
 164:.\I2C_Class.c ****     uint8 result = 0;
 944              		.loc 1 164 0
 945 000e 3B1C     		mov	r3, r7
 946 0010 1733     		add	r3, r3, #23
 947 0012 0022     		mov	r2, #0
 948 0014 1A70     		strb	r2, [r3]
 165:.\I2C_Class.c ****     uint8 dataget[2] = {0, 0};
 949              		.loc 1 165 0
 950 0016 3B1C     		mov	r3, r7
 951 0018 1433     		add	r3, r3, #20
 952 001a 0022     		mov	r2, #0
 953 001c 1A70     		strb	r2, [r3]
 954 001e 3B1C     		mov	r3, r7
 955 0020 1433     		add	r3, r3, #20
 956 0022 0022     		mov	r2, #0
 957 0024 5A70     		strb	r2, [r3, #1]
 166:.\I2C_Class.c ****     
 167:.\I2C_Class.c ****     CyDelay(60);
 958              		.loc 1 167 0
 959 0026 3C20     		mov	r0, #60
 960 0028 FFF7FEFF 		bl	CyDelay
 168:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 961              		.loc 1 168 0
 962 002c FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 169:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, 2, I2C_I2C_MODE_COMPLETE_XFER);
 963              		.loc 1 169 0
 964 0030 3B1C     		mov	r3, r7
 965 0032 1433     		add	r3, r3, #20
 966 0034 4220     		mov	r0, #66
 967 0036 191C     		mov	r1, r3
 968 0038 0222     		mov	r2, #2
 969 003a 0023     		mov	r3, #0
 970 003c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 971 0040 021C     		mov	r2, r0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 21


 972 0042 3B1C     		mov	r3, r7
 973 0044 1733     		add	r3, r3, #23
 974 0046 1A70     		strb	r2, [r3]
 170:.\I2C_Class.c ****     
 171:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the dataget array to
 975              		.loc 1 171 0
 976 0048 C046     		mov	r8, r8
 977              	.L46:
 978              		.loc 1 171 0 is_stmt 0 discriminator 1
 979 004a FFF7FEFF 		bl	I2C_I2CMasterStatus
 980 004e 021C     		mov	r2, r0
 981 0050 0123     		mov	r3, #1
 982 0052 1340     		and	r3, r2
 983 0054 F9D0     		beq	.L46
 172:.\I2C_Class.c ****     
 173:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (I2C_I2CMasterGetReadBufSize() != 0)){
 984              		.loc 1 173 0 is_stmt 1
 985 0056 3B1C     		mov	r3, r7
 986 0058 1733     		add	r3, r3, #23
 987 005a 1B78     		ldrb	r3, [r3]
 988 005c 002B     		cmp	r3, #0
 989 005e 44D1     		bne	.L47
 990              		.loc 1 173 0 is_stmt 0 discriminator 1
 991 0060 FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 992 0064 031C     		mov	r3, r0
 993 0066 002B     		cmp	r3, #0
 994 0068 3FD0     		beq	.L47
 174:.\I2C_Class.c **** //----------getActuatorStatus1----------
 175:.\I2C_Class.c ****         if (window){                                   // Expecting to receive MSB first           
 995              		.loc 1 175 0 is_stmt 1
 996 006a FB68     		ldr	r3, [r7, #12]
 997 006c 002B     		cmp	r3, #0
 998 006e 06D0     		beq	.L48
 176:.\I2C_Class.c ****             *window = (dataget[0] >> 4);      // Shifting out the 4 least significant bits.
 999              		.loc 1 176 0
 1000 0070 3B1C     		mov	r3, r7
 1001 0072 1433     		add	r3, r3, #20
 1002 0074 1B78     		ldrb	r3, [r3]
 1003 0076 1B09     		lsr	r3, r3, #4
 1004 0078 DAB2     		uxtb	r2, r3
 1005 007a FB68     		ldr	r3, [r7, #12]
 1006 007c 1A70     		strb	r2, [r3]
 1007              	.L48:
 177:.\I2C_Class.c ****             #ifdef debugging
 178:.\I2C_Class.c ****                 UART_UartPutChar(*window+CONVERT_TO_ASCII);
 179:.\I2C_Class.c ****             #endif
 180:.\I2C_Class.c ****         }
 181:.\I2C_Class.c ****         if (heat){
 1008              		.loc 1 181 0
 1009 007e BB68     		ldr	r3, [r7, #8]
 1010 0080 002B     		cmp	r3, #0
 1011 0082 09D0     		beq	.L49
 182:.\I2C_Class.c ****             *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and 
 1012              		.loc 1 182 0
 1013 0084 3B1C     		mov	r3, r7
 1014 0086 1433     		add	r3, r3, #20
 1015 0088 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 22


 1016 008a 1A1C     		mov	r2, r3
 1017 008c 0E23     		mov	r3, #14
 1018 008e 1340     		and	r3, r2
 1019 0090 5B10     		asr	r3, r3, #1
 1020 0092 DAB2     		uxtb	r2, r3
 1021 0094 BB68     		ldr	r3, [r7, #8]
 1022 0096 1A70     		strb	r2, [r3]
 1023              	.L49:
 183:.\I2C_Class.c ****             #ifdef debugging
 184:.\I2C_Class.c ****                 UART_UartPutChar(*heat+CONVERT_TO_ASCII);
 185:.\I2C_Class.c ****             #endif
 186:.\I2C_Class.c ****         }
 187:.\I2C_Class.c ****         if (vent){
 1024              		.loc 1 187 0
 1025 0098 7B68     		ldr	r3, [r7, #4]
 1026 009a 002B     		cmp	r3, #0
 1027 009c 18D0     		beq	.L50
 188:.\I2C_Class.c ****             if ((dataget[0] & 0b00000001) == 0b00000001){        // Maybe we can find a smarter way
 1028              		.loc 1 188 0
 1029 009e 3B1C     		mov	r3, r7
 1030 00a0 1433     		add	r3, r3, #20
 1031 00a2 1B78     		ldrb	r3, [r3]
 1032 00a4 1A1C     		mov	r2, r3
 1033 00a6 0123     		mov	r3, #1
 1034 00a8 1340     		and	r3, r2
 1035 00aa 0AD0     		beq	.L51
 189:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000100;          // The if statements checks if bit
 1036              		.loc 1 189 0
 1037 00ac 3B1C     		mov	r3, r7
 1038 00ae 1433     		add	r3, r3, #20
 1039 00b0 5B78     		ldrb	r3, [r3, #1]
 1040 00b2 9B09     		lsr	r3, r3, #6
 1041 00b4 DBB2     		uxtb	r3, r3
 1042 00b6 0422     		mov	r2, #4
 1043 00b8 1343     		orr	r3, r2
 1044 00ba DAB2     		uxtb	r2, r3
 1045 00bc 7B68     		ldr	r3, [r7, #4]
 1046 00be 1A70     		strb	r2, [r3]
 1047 00c0 06E0     		b	.L50
 1048              	.L51:
 190:.\I2C_Class.c ****                 #ifdef debugging
 191:.\I2C_Class.c ****                     UART_UartPutChar(*vent+CONVERT_TO_ASCII);                         // Shifting 5
 192:.\I2C_Class.c ****                 #endif
 193:.\I2C_Class.c ****             }                                                    
 194:.\I2C_Class.c ****             else {
 195:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000000;          // shifting 5 right since only the
 1049              		.loc 1 195 0
 1050 00c2 3B1C     		mov	r3, r7
 1051 00c4 1433     		add	r3, r3, #20
 1052 00c6 5B78     		ldrb	r3, [r3, #1]
 1053 00c8 9B09     		lsr	r3, r3, #6
 1054 00ca DAB2     		uxtb	r2, r3
 1055 00cc 7B68     		ldr	r3, [r7, #4]
 1056 00ce 1A70     		strb	r2, [r3]
 1057              	.L50:
 196:.\I2C_Class.c ****                 #ifdef debugging
 197:.\I2C_Class.c ****                     UART_UartPutChar(*vent+CONVERT_TO_ASCII);
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 23


 198:.\I2C_Class.c ****                 #endif
 199:.\I2C_Class.c ****             }
 200:.\I2C_Class.c ****         }
 201:.\I2C_Class.c ****         if (irrigation){
 1058              		.loc 1 201 0
 1059 00d0 3B68     		ldr	r3, [r7]
 1060 00d2 002B     		cmp	r3, #0
 1061 00d4 07D0     		beq	.L52
 202:.\I2C_Class.c ****             *irrigation = (dataget[1] & 0b00111111);             // Ignoring two most significant b
 1062              		.loc 1 202 0
 1063 00d6 3B1C     		mov	r3, r7
 1064 00d8 1433     		add	r3, r3, #20
 1065 00da 5A78     		ldrb	r2, [r3, #1]
 1066 00dc 3F23     		mov	r3, #63
 1067 00de 1340     		and	r3, r2
 1068 00e0 DAB2     		uxtb	r2, r3
 1069 00e2 3B68     		ldr	r3, [r7]
 1070 00e4 1A70     		strb	r2, [r3]
 1071              	.L52:
 203:.\I2C_Class.c ****             #ifdef debugging
 204:.\I2C_Class.c ****                 UART_UartPutChar(*irrigation);
 205:.\I2C_Class.c ****             #endif
 206:.\I2C_Class.c ****         }   
 207:.\I2C_Class.c ****         return 0;
 1072              		.loc 1 207 0
 1073 00e6 0023     		mov	r3, #0
 1074 00e8 00E0     		b	.L54
 1075              	.L47:
 208:.\I2C_Class.c ****     }
 209:.\I2C_Class.c ****     else {
 210:.\I2C_Class.c ****         return -1;   
 1076              		.loc 1 210 0
 1077 00ea FF23     		mov	r3, #255
 1078              	.L54:
 1079 00ec 5BB2     		sxtb	r3, r3
 211:.\I2C_Class.c ****     }
 212:.\I2C_Class.c **** }
 1080              		.loc 1 212 0
 1081 00ee 181C     		mov	r0, r3
 1082 00f0 BD46     		mov	sp, r7
 1083 00f2 06B0     		add	sp, sp, #24
 1084              		@ sp needed
 1085 00f4 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE38:
 1088              		.size	getActuatorStatus, .-getActuatorStatus
 1089 00f6 C046     		.section	.rodata
 1090              		.align	2
 1091              	.LC0:
 1092 0000 09000000 		.word	9
 1093 0004 09000000 		.word	9
 1094              		.section	.text.getTemp,"ax",%progbits
 1095              		.align	2
 1096              		.global	getTemp
 1097              		.code	16
 1098              		.thumb_func
 1099              		.type	getTemp, %function
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 24


 1100              	getTemp:
 1101              	.LFB39:
 213:.\I2C_Class.c **** 
 214:.\I2C_Class.c **** 
 215:.\I2C_Class.c **** //----------getTemp0----------
 216:.\I2C_Class.c **** int8 getTemp(int32* temp){
 1102              		.loc 1 216 0
 1103              		.cfi_startproc
 1104 0000 80B5     		push	{r7, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 86B0     		sub	sp, sp, #24
 1109              		.cfi_def_cfa_offset 32
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 1112 0006 7860     		str	r0, [r7, #4]
 217:.\I2C_Class.c **** 
 218:.\I2C_Class.c ****     uint8 dataget[2] = {0,0};
 1113              		.loc 1 218 0
 1114 0008 3B1C     		mov	r3, r7
 1115 000a 1433     		add	r3, r3, #20
 1116 000c 0022     		mov	r2, #0
 1117 000e 1A70     		strb	r2, [r3]
 1118 0010 3B1C     		mov	r3, r7
 1119 0012 1433     		add	r3, r3, #20
 1120 0014 0022     		mov	r2, #0
 1121 0016 5A70     		strb	r2, [r3, #1]
 219:.\I2C_Class.c ****     uint32 errorStatus[2] = {9,9};      // For debugging and error handling
 1122              		.loc 1 219 0
 1123 0018 3B1C     		mov	r3, r7
 1124 001a 0C33     		add	r3, r3, #12
 1125 001c 214A     		ldr	r2, .L60
 1126 001e 03CA     		ldmia	r2!, {r0, r1}
 1127 0020 03C3     		stmia	r3!, {r0, r1}
 220:.\I2C_Class.c ****     
 221:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1128              		.loc 1 221 0
 1129 0022 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 222:.\I2C_Class.c ****     errorStatus[0] = I2C_I2CMasterSendStart(TEMP_SENSOR_ADDRESS, I2C_I2C_READ_XFER_MODE);
 1130              		.loc 1 222 0
 1131 0026 4820     		mov	r0, #72
 1132 0028 0121     		mov	r1, #1
 1133 002a FFF7FEFF 		bl	I2C_I2CMasterSendStart
 1134 002e 021C     		mov	r2, r0
 1135 0030 3B1C     		mov	r3, r7
 1136 0032 0C33     		add	r3, r3, #12
 1137 0034 1A60     		str	r2, [r3]
 223:.\I2C_Class.c ****     if (errorStatus[0] == I2C_I2C_MSTR_NO_ERROR){
 1138              		.loc 1 223 0
 1139 0036 3B1C     		mov	r3, r7
 1140 0038 0C33     		add	r3, r3, #12
 1141 003a 1B68     		ldr	r3, [r3]
 1142 003c 002B     		cmp	r3, #0
 1143 003e 25D1     		bne	.L56
 224:.\I2C_Class.c ****         dataget[0] = I2C_I2CMasterReadByte(I2C_I2C_ACK_DATA);
 1144              		.loc 1 224 0
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 25


 1145 0040 0020     		mov	r0, #0
 1146 0042 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1147 0046 031C     		mov	r3, r0
 1148 0048 DAB2     		uxtb	r2, r3
 1149 004a 3B1C     		mov	r3, r7
 1150 004c 1433     		add	r3, r3, #20
 1151 004e 1A70     		strb	r2, [r3]
 225:.\I2C_Class.c ****         dataget[1] = I2C_I2CMasterReadByte(I2C_I2C_NAK_DATA);
 1152              		.loc 1 225 0
 1153 0050 0120     		mov	r0, #1
 1154 0052 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1155 0056 031C     		mov	r3, r0
 1156 0058 DAB2     		uxtb	r2, r3
 1157 005a 3B1C     		mov	r3, r7
 1158 005c 1433     		add	r3, r3, #20
 1159 005e 5A70     		strb	r2, [r3, #1]
 226:.\I2C_Class.c ****         errorStatus[1] = I2C_I2CMasterSendStop();
 1160              		.loc 1 226 0
 1161 0060 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 1162 0064 021C     		mov	r2, r0
 1163 0066 3B1C     		mov	r3, r7
 1164 0068 0C33     		add	r3, r3, #12
 1165 006a 5A60     		str	r2, [r3, #4]
 227:.\I2C_Class.c ****     }
 228:.\I2C_Class.c ****     else{
 229:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 230:.\I2C_Class.c ****         *temp = -1;
 231:.\I2C_Class.c ****         return -1;
 232:.\I2C_Class.c ****     }
 233:.\I2C_Class.c **** 
 234:.\I2C_Class.c ****     // The data is converted directly to UART protocol because of the ,5 resolution
 235:.\I2C_Class.c ****     *temp = (dataget[0]*2)+(dataget[1] >> 7)+40;
 1166              		.loc 1 235 0
 1167 006c 3B1C     		mov	r3, r7
 1168 006e 1433     		add	r3, r3, #20
 1169 0070 1B78     		ldrb	r3, [r3]
 1170 0072 5A00     		lsl	r2, r3, #1
 1171 0074 3B1C     		mov	r3, r7
 1172 0076 1433     		add	r3, r3, #20
 1173 0078 5B78     		ldrb	r3, [r3, #1]
 1174 007a DB09     		lsr	r3, r3, #7
 1175 007c DBB2     		uxtb	r3, r3
 1176 007e D318     		add	r3, r2, r3
 1177 0080 1A1C     		mov	r2, r3
 1178 0082 2832     		add	r2, r2, #40
 1179 0084 7B68     		ldr	r3, [r7, #4]
 1180 0086 1A60     		str	r2, [r3]
 236:.\I2C_Class.c **** 
 237:.\I2C_Class.c ****     return 0;
 1181              		.loc 1 237 0
 1182 0088 0023     		mov	r3, #0
 1183 008a 06E0     		b	.L59
 1184              	.L56:
 229:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 1185              		.loc 1 229 0
 1186 008c FFF7FEFF 		bl	I2C_I2CMasterSendStop
 230:.\I2C_Class.c ****         *temp = -1;
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 26


 1187              		.loc 1 230 0
 1188 0090 7B68     		ldr	r3, [r7, #4]
 1189 0092 0122     		mov	r2, #1
 1190 0094 5242     		neg	r2, r2
 1191 0096 1A60     		str	r2, [r3]
 231:.\I2C_Class.c ****         return -1;
 1192              		.loc 1 231 0
 1193 0098 FF23     		mov	r3, #255
 1194              	.L59:
 1195 009a 5BB2     		sxtb	r3, r3
 238:.\I2C_Class.c **** }
 1196              		.loc 1 238 0
 1197 009c 181C     		mov	r0, r3
 1198 009e BD46     		mov	sp, r7
 1199 00a0 06B0     		add	sp, sp, #24
 1200              		@ sp needed
 1201 00a2 80BD     		pop	{r7, pc}
 1202              	.L61:
 1203              		.align	2
 1204              	.L60:
 1205 00a4 00000000 		.word	.LC0
 1206              		.cfi_endproc
 1207              	.LFE39:
 1208              		.size	getTemp, .-getTemp
 1209              		.section	.text.getSoilHum,"ax",%progbits
 1210              		.align	2
 1211              		.global	getSoilHum
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	getSoilHum, %function
 1215              	getSoilHum:
 1216              	.LFB40:
 239:.\I2C_Class.c **** //----------getTemp1----------
 240:.\I2C_Class.c **** 
 241:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){
 1217              		.loc 1 241 0
 1218              		.cfi_startproc
 1219 0000 80B5     		push	{r7, lr}
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 84B0     		sub	sp, sp, #16
 1224              		.cfi_def_cfa_offset 24
 1225 0004 00AF     		add	r7, sp, #0
 1226              		.cfi_def_cfa_register 7
 1227 0006 021C     		mov	r2, r0
 1228 0008 3960     		str	r1, [r7]
 1229 000a FB1D     		add	r3, r7, #7
 1230 000c 1A70     		strb	r2, [r3]
 242:.\I2C_Class.c ****     uint32 result;
 243:.\I2C_Class.c ****     uint8 soilTransfer[1] = {index};
 1231              		.loc 1 243 0
 1232 000e 3B1C     		mov	r3, r7
 1233 0010 0833     		add	r3, r3, #8
 1234 0012 FA1D     		add	r2, r7, #7
 1235 0014 1278     		ldrb	r2, [r2]
 1236 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 27


 244:.\I2C_Class.c ****     
 245:.\I2C_Class.c ****     /*pseudo kode
 246:.\I2C_Class.c ****     write, address, 0-5 (LSB)
 247:.\I2C_Class.c ****     read, address, 7 = status, 0-6 = value (1-100)*/
 248:.\I2C_Class.c ****     
 249:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(SOILHUM_SENSOR_ADDRESS, soilTransfer, 1, I2C_I2C_MODE_COMPLETE_X
 1237              		.loc 1 249 0
 1238 0018 3B1C     		mov	r3, r7
 1239 001a 0833     		add	r3, r3, #8
 1240 001c 3220     		mov	r0, #50
 1241 001e 191C     		mov	r1, r3
 1242 0020 0122     		mov	r2, #1
 1243 0022 0023     		mov	r3, #0
 1244 0024 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 1245 0028 031C     		mov	r3, r0
 1246 002a FB60     		str	r3, [r7, #12]
 250:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT));
 1247              		.loc 1 250 0
 1248 002c C046     		mov	r8, r8
 1249              	.L63:
 1250              		.loc 1 250 0 is_stmt 0 discriminator 1
 1251 002e FFF7FEFF 		bl	I2C_I2CMasterStatus
 1252 0032 021C     		mov	r2, r0
 1253 0034 0223     		mov	r3, #2
 1254 0036 1340     		and	r3, r2
 1255 0038 F9D0     		beq	.L63
 251:.\I2C_Class.c ****         
 252:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1256              		.loc 1 252 0 is_stmt 1
 1257 003a FB68     		ldr	r3, [r7, #12]
 1258 003c 002B     		cmp	r3, #0
 1259 003e 2AD1     		bne	.L64
 253:.\I2C_Class.c ****         CyDelay(60);
 1260              		.loc 1 253 0
 1261 0040 3C20     		mov	r0, #60
 1262 0042 FFF7FEFF 		bl	CyDelay
 254:.\I2C_Class.c ****         result = I2C_I2CMasterReadBuf(SOILHUM_SENSOR_ADDRESS, soilTransfer, 1, I2C_I2C_MODE_COMPLET
 1263              		.loc 1 254 0
 1264 0046 3B1C     		mov	r3, r7
 1265 0048 0833     		add	r3, r3, #8
 1266 004a 3220     		mov	r0, #50
 1267 004c 191C     		mov	r1, r3
 1268 004e 0122     		mov	r2, #1
 1269 0050 0023     		mov	r3, #0
 1270 0052 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1271 0056 031C     		mov	r3, r0
 1272 0058 FB60     		str	r3, [r7, #12]
 255:.\I2C_Class.c ****         while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the data to be r
 1273              		.loc 1 255 0
 1274 005a C046     		mov	r8, r8
 1275              	.L65:
 1276              		.loc 1 255 0 is_stmt 0 discriminator 1
 1277 005c FFF7FEFF 		bl	I2C_I2CMasterStatus
 1278 0060 021C     		mov	r2, r0
 1279 0062 0123     		mov	r3, #1
 1280 0064 1340     		and	r3, r2
 1281 0066 F9D0     		beq	.L65
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 28


 256:.\I2C_Class.c ****         if (result == I2C_I2C_MSTR_NO_ERROR && (I2C_I2CMasterGetReadBufSize() != 0)){
 1282              		.loc 1 256 0 is_stmt 1
 1283 0068 FB68     		ldr	r3, [r7, #12]
 1284 006a 002B     		cmp	r3, #0
 1285 006c 13D1     		bne	.L64
 1286              		.loc 1 256 0 is_stmt 0 discriminator 1
 1287 006e FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 1288 0072 031C     		mov	r3, r0
 1289 0074 002B     		cmp	r3, #0
 1290 0076 0ED0     		beq	.L64
 257:.\I2C_Class.c ****             if ((soilTransfer[0] >> 7) == 0){
 1291              		.loc 1 257 0 is_stmt 1
 1292 0078 3B1C     		mov	r3, r7
 1293 007a 0833     		add	r3, r3, #8
 1294 007c 1B78     		ldrb	r3, [r3]
 1295 007e DBB2     		uxtb	r3, r3
 1296 0080 5BB2     		sxtb	r3, r3
 1297 0082 002B     		cmp	r3, #0
 1298 0084 07DB     		blt	.L64
 258:.\I2C_Class.c ****                 *soilHum = soilTransfer[0];
 1299              		.loc 1 258 0
 1300 0086 3B1C     		mov	r3, r7
 1301 0088 0833     		add	r3, r3, #8
 1302 008a 1B78     		ldrb	r3, [r3]
 1303 008c 1A1C     		mov	r2, r3
 1304 008e 3B68     		ldr	r3, [r7]
 1305 0090 1A80     		strh	r2, [r3]
 259:.\I2C_Class.c ****                 return 0;
 1306              		.loc 1 259 0
 1307 0092 0023     		mov	r3, #0
 1308 0094 04E0     		b	.L67
 1309              	.L64:
 260:.\I2C_Class.c ****             }
 261:.\I2C_Class.c ****                         
 262:.\I2C_Class.c ****         }
 263:.\I2C_Class.c ****     }
 264:.\I2C_Class.c ****     *soilHum = -1;
 1310              		.loc 1 264 0
 1311 0096 3B68     		ldr	r3, [r7]
 1312 0098 0122     		mov	r2, #1
 1313 009a 5242     		neg	r2, r2
 1314 009c 1A80     		strh	r2, [r3]
 265:.\I2C_Class.c ****     return -1;
 1315              		.loc 1 265 0
 1316 009e FF23     		mov	r3, #255
 1317              	.L67:
 1318 00a0 5BB2     		sxtb	r3, r3
 266:.\I2C_Class.c **** }
 1319              		.loc 1 266 0
 1320 00a2 181C     		mov	r0, r3
 1321 00a4 BD46     		mov	sp, r7
 1322 00a6 04B0     		add	sp, sp, #16
 1323              		@ sp needed
 1324 00a8 80BD     		pop	{r7, pc}
 1325              		.cfi_endproc
 1326              	.LFE40:
 1327              		.size	getSoilHum, .-getSoilHum
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 29


 1328 00aa C046     		.text
 1329              	.Letext0:
 1330              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1331              		.section	.debug_info,"",%progbits
 1332              	.Ldebug_info0:
 1333 0000 29040000 		.4byte	0x429
 1334 0004 0400     		.2byte	0x4
 1335 0006 00000000 		.4byte	.Ldebug_abbrev0
 1336 000a 04       		.byte	0x4
 1337 000b 01       		.uleb128 0x1
 1338 000c B5000000 		.4byte	.LASF48
 1339 0010 01       		.byte	0x1
 1340 0011 38000000 		.4byte	.LASF49
 1341 0015 77000000 		.4byte	.LASF50
 1342 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1343 001d 00000000 		.4byte	0
 1344 0021 00000000 		.4byte	.Ldebug_line0
 1345 0025 02       		.uleb128 0x2
 1346 0026 01       		.byte	0x1
 1347 0027 06       		.byte	0x6
 1348 0028 7C010000 		.4byte	.LASF0
 1349 002c 02       		.uleb128 0x2
 1350 002d 01       		.byte	0x1
 1351 002e 08       		.byte	0x8
 1352 002f 90010000 		.4byte	.LASF1
 1353 0033 02       		.uleb128 0x2
 1354 0034 02       		.byte	0x2
 1355 0035 05       		.byte	0x5
 1356 0036 65020000 		.4byte	.LASF2
 1357 003a 02       		.uleb128 0x2
 1358 003b 02       		.byte	0x2
 1359 003c 07       		.byte	0x7
 1360 003d 46000000 		.4byte	.LASF3
 1361 0041 02       		.uleb128 0x2
 1362 0042 04       		.byte	0x4
 1363 0043 05       		.byte	0x5
 1364 0044 82020000 		.4byte	.LASF4
 1365 0048 02       		.uleb128 0x2
 1366 0049 04       		.byte	0x4
 1367 004a 07       		.byte	0x7
 1368 004b 52010000 		.4byte	.LASF5
 1369 004f 02       		.uleb128 0x2
 1370 0050 08       		.byte	0x8
 1371 0051 05       		.byte	0x5
 1372 0052 2C020000 		.4byte	.LASF6
 1373 0056 02       		.uleb128 0x2
 1374 0057 08       		.byte	0x8
 1375 0058 07       		.byte	0x7
 1376 0059 E7010000 		.4byte	.LASF7
 1377 005d 03       		.uleb128 0x3
 1378 005e 04       		.byte	0x4
 1379 005f 05       		.byte	0x5
 1380 0060 696E7400 		.ascii	"int\000"
 1381 0064 02       		.uleb128 0x2
 1382 0065 04       		.byte	0x4
 1383 0066 07       		.byte	0x7
 1384 0067 D5010000 		.4byte	.LASF8
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 30


 1385 006b 04       		.uleb128 0x4
 1386 006c 71000000 		.4byte	.LASF9
 1387 0070 02       		.byte	0x2
 1388 0071 A1       		.byte	0xa1
 1389 0072 2C000000 		.4byte	0x2c
 1390 0076 04       		.uleb128 0x4
 1391 0077 C2010000 		.4byte	.LASF10
 1392 007b 02       		.byte	0x2
 1393 007c A2       		.byte	0xa2
 1394 007d 3A000000 		.4byte	0x3a
 1395 0081 04       		.uleb128 0x4
 1396 0082 CE010000 		.4byte	.LASF11
 1397 0086 02       		.byte	0x2
 1398 0087 A3       		.byte	0xa3
 1399 0088 48000000 		.4byte	0x48
 1400 008c 04       		.uleb128 0x4
 1401 008d C9010000 		.4byte	.LASF12
 1402 0091 02       		.byte	0x2
 1403 0092 A4       		.byte	0xa4
 1404 0093 25000000 		.4byte	0x25
 1405 0097 04       		.uleb128 0x4
 1406 0098 4C010000 		.4byte	.LASF13
 1407 009c 02       		.byte	0x2
 1408 009d A5       		.byte	0xa5
 1409 009e 33000000 		.4byte	0x33
 1410 00a2 04       		.uleb128 0x4
 1411 00a3 76010000 		.4byte	.LASF14
 1412 00a7 02       		.byte	0x2
 1413 00a8 A6       		.byte	0xa6
 1414 00a9 41000000 		.4byte	0x41
 1415 00ad 02       		.uleb128 0x2
 1416 00ae 04       		.byte	0x4
 1417 00af 04       		.byte	0x4
 1418 00b0 AF000000 		.4byte	.LASF15
 1419 00b4 02       		.uleb128 0x2
 1420 00b5 08       		.byte	0x8
 1421 00b6 04       		.byte	0x4
 1422 00b7 9E010000 		.4byte	.LASF16
 1423 00bb 02       		.uleb128 0x2
 1424 00bc 01       		.byte	0x1
 1425 00bd 08       		.byte	0x8
 1426 00be 42020000 		.4byte	.LASF17
 1427 00c2 02       		.uleb128 0x2
 1428 00c3 04       		.byte	0x4
 1429 00c4 07       		.byte	0x7
 1430 00c5 23020000 		.4byte	.LASF18
 1431 00c9 05       		.uleb128 0x5
 1432 00ca 04       		.byte	0x4
 1433 00cb 6B000000 		.4byte	0x6b
 1434 00cf 06       		.uleb128 0x6
 1435 00d0 15020000 		.4byte	.LASF51
 1436 00d4 01       		.byte	0x1
 1437 00d5 1E       		.byte	0x1e
 1438 00d6 00000000 		.4byte	.LFB33
 1439 00da 10000000 		.4byte	.LFE33-.LFB33
 1440 00de 01       		.uleb128 0x1
 1441 00df 9C       		.byte	0x9c
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 31


 1442 00e0 07       		.uleb128 0x7
 1443 00e1 0C000000 		.4byte	.LASF23
 1444 00e5 01       		.byte	0x1
 1445 00e6 23       		.byte	0x23
 1446 00e7 8C000000 		.4byte	0x8c
 1447 00eb 00000000 		.4byte	.LFB34
 1448 00ef 7C010000 		.4byte	.LFE34-.LFB34
 1449 00f3 01       		.uleb128 0x1
 1450 00f4 9C       		.byte	0x9c
 1451 00f5 42010000 		.4byte	0x142
 1452 00f9 08       		.uleb128 0x8
 1453 00fa 706F7300 		.ascii	"pos\000"
 1454 00fe 01       		.byte	0x1
 1455 00ff 23       		.byte	0x23
 1456 0100 6B000000 		.4byte	0x6b
 1457 0104 02       		.uleb128 0x2
 1458 0105 91       		.byte	0x91
 1459 0106 4F       		.sleb128 -49
 1460 0107 09       		.uleb128 0x9
 1461 0108 0A020000 		.4byte	.LASF19
 1462 010c 01       		.byte	0x1
 1463 010d 24       		.byte	0x24
 1464 010e 42010000 		.4byte	0x142
 1465 0112 03       		.uleb128 0x3
 1466 0113 91       		.byte	0x91
 1467 0114 5C       		.sleb128 -36
 1468 0115 06       		.byte	0x6
 1469 0116 09       		.uleb128 0x9
 1470 0117 B6010000 		.4byte	.LASF20
 1471 011b 01       		.byte	0x1
 1472 011c 24       		.byte	0x24
 1473 011d 55010000 		.4byte	0x155
 1474 0121 03       		.uleb128 0x3
 1475 0122 91       		.byte	0x91
 1476 0123 54       		.sleb128 -44
 1477 0124 06       		.byte	0x6
 1478 0125 09       		.uleb128 0x9
 1479 0126 FE010000 		.4byte	.LASF21
 1480 012a 01       		.byte	0x1
 1481 012b 27       		.byte	0x27
 1482 012c 6B000000 		.4byte	0x6b
 1483 0130 02       		.uleb128 0x2
 1484 0131 91       		.byte	0x91
 1485 0132 67       		.sleb128 -25
 1486 0133 09       		.uleb128 0x9
 1487 0134 41010000 		.4byte	.LASF22
 1488 0138 01       		.byte	0x1
 1489 0139 28       		.byte	0x28
 1490 013a 6B000000 		.4byte	0x6b
 1491 013e 02       		.uleb128 0x2
 1492 013f 91       		.byte	0x91
 1493 0140 53       		.sleb128 -45
 1494 0141 00       		.byte	0
 1495 0142 0A       		.uleb128 0xa
 1496 0143 6B000000 		.4byte	0x6b
 1497 0147 55010000 		.4byte	0x155
 1498 014b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 32


 1499 014c C2000000 		.4byte	0xc2
 1500 0150 03       		.uleb128 0x3
 1501 0151 91       		.byte	0x91
 1502 0152 60       		.sleb128 -32
 1503 0153 06       		.byte	0x6
 1504 0154 00       		.byte	0
 1505 0155 0A       		.uleb128 0xa
 1506 0156 6B000000 		.4byte	0x6b
 1507 015a 68010000 		.4byte	0x168
 1508 015e 0B       		.uleb128 0xb
 1509 015f C2000000 		.4byte	0xc2
 1510 0163 03       		.uleb128 0x3
 1511 0164 91       		.byte	0x91
 1512 0165 58       		.sleb128 -40
 1513 0166 06       		.byte	0x6
 1514 0167 00       		.byte	0
 1515 0168 07       		.uleb128 0x7
 1516 0169 B9020000 		.4byte	.LASF24
 1517 016d 01       		.byte	0x1
 1518 016e 42       		.byte	0x42
 1519 016f 8C000000 		.4byte	0x8c
 1520 0173 00000000 		.4byte	.LFB35
 1521 0177 7C010000 		.4byte	.LFE35-.LFB35
 1522 017b 01       		.uleb128 0x1
 1523 017c 9C       		.byte	0x9c
 1524 017d CA010000 		.4byte	0x1ca
 1525 0181 0C       		.uleb128 0xc
 1526 0182 05020000 		.4byte	.LASF25
 1527 0186 01       		.byte	0x1
 1528 0187 42       		.byte	0x42
 1529 0188 6B000000 		.4byte	0x6b
 1530 018c 02       		.uleb128 0x2
 1531 018d 91       		.byte	0x91
 1532 018e 4F       		.sleb128 -49
 1533 018f 09       		.uleb128 0x9
 1534 0190 5A020000 		.4byte	.LASF26
 1535 0194 01       		.byte	0x1
 1536 0195 43       		.byte	0x43
 1537 0196 CA010000 		.4byte	0x1ca
 1538 019a 03       		.uleb128 0x3
 1539 019b 91       		.byte	0x91
 1540 019c 5C       		.sleb128 -36
 1541 019d 06       		.byte	0x6
 1542 019e 09       		.uleb128 0x9
 1543 019f 59000000 		.4byte	.LASF27
 1544 01a3 01       		.byte	0x1
 1545 01a4 43       		.byte	0x43
 1546 01a5 DD010000 		.4byte	0x1dd
 1547 01a9 03       		.uleb128 0x3
 1548 01aa 91       		.byte	0x91
 1549 01ab 54       		.sleb128 -44
 1550 01ac 06       		.byte	0x6
 1551 01ad 09       		.uleb128 0x9
 1552 01ae FE010000 		.4byte	.LASF21
 1553 01b2 01       		.byte	0x1
 1554 01b3 46       		.byte	0x46
 1555 01b4 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 33


 1556 01b8 02       		.uleb128 0x2
 1557 01b9 91       		.byte	0x91
 1558 01ba 67       		.sleb128 -25
 1559 01bb 09       		.uleb128 0x9
 1560 01bc E2010000 		.4byte	.LASF28
 1561 01c0 01       		.byte	0x1
 1562 01c1 47       		.byte	0x47
 1563 01c2 6B000000 		.4byte	0x6b
 1564 01c6 02       		.uleb128 0x2
 1565 01c7 91       		.byte	0x91
 1566 01c8 53       		.sleb128 -45
 1567 01c9 00       		.byte	0
 1568 01ca 0A       		.uleb128 0xa
 1569 01cb 6B000000 		.4byte	0x6b
 1570 01cf DD010000 		.4byte	0x1dd
 1571 01d3 0B       		.uleb128 0xb
 1572 01d4 C2000000 		.4byte	0xc2
 1573 01d8 03       		.uleb128 0x3
 1574 01d9 91       		.byte	0x91
 1575 01da 60       		.sleb128 -32
 1576 01db 06       		.byte	0x6
 1577 01dc 00       		.byte	0
 1578 01dd 0A       		.uleb128 0xa
 1579 01de 6B000000 		.4byte	0x6b
 1580 01e2 F0010000 		.4byte	0x1f0
 1581 01e6 0B       		.uleb128 0xb
 1582 01e7 C2000000 		.4byte	0xc2
 1583 01eb 03       		.uleb128 0x3
 1584 01ec 91       		.byte	0x91
 1585 01ed 58       		.sleb128 -40
 1586 01ee 06       		.byte	0x6
 1587 01ef 00       		.byte	0
 1588 01f0 07       		.uleb128 0x7
 1589 01f1 26000000 		.4byte	.LASF29
 1590 01f5 01       		.byte	0x1
 1591 01f6 63       		.byte	0x63
 1592 01f7 8C000000 		.4byte	0x8c
 1593 01fb 00000000 		.4byte	.LFB36
 1594 01ff 7C010000 		.4byte	.LFE36-.LFB36
 1595 0203 01       		.uleb128 0x1
 1596 0204 9C       		.byte	0x9c
 1597 0205 52020000 		.4byte	0x252
 1598 0209 0C       		.uleb128 0xc
 1599 020a 1D020000 		.4byte	.LASF30
 1600 020e 01       		.byte	0x1
 1601 020f 63       		.byte	0x63
 1602 0210 6B000000 		.4byte	0x6b
 1603 0214 02       		.uleb128 0x2
 1604 0215 91       		.byte	0x91
 1605 0216 4F       		.sleb128 -49
 1606 0217 09       		.uleb128 0x9
 1607 0218 8B020000 		.4byte	.LASF31
 1608 021c 01       		.byte	0x1
 1609 021d 64       		.byte	0x64
 1610 021e 52020000 		.4byte	0x252
 1611 0222 03       		.uleb128 0x3
 1612 0223 91       		.byte	0x91
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 34


 1613 0224 5C       		.sleb128 -36
 1614 0225 06       		.byte	0x6
 1615 0226 09       		.uleb128 0x9
 1616 0227 00000000 		.4byte	.LASF32
 1617 022b 01       		.byte	0x1
 1618 022c 64       		.byte	0x64
 1619 022d 65020000 		.4byte	0x265
 1620 0231 03       		.uleb128 0x3
 1621 0232 91       		.byte	0x91
 1622 0233 54       		.sleb128 -44
 1623 0234 06       		.byte	0x6
 1624 0235 09       		.uleb128 0x9
 1625 0236 FE010000 		.4byte	.LASF21
 1626 023a 01       		.byte	0x1
 1627 023b 67       		.byte	0x67
 1628 023c 6B000000 		.4byte	0x6b
 1629 0240 02       		.uleb128 0x2
 1630 0241 91       		.byte	0x91
 1631 0242 67       		.sleb128 -25
 1632 0243 09       		.uleb128 0x9
 1633 0244 E2010000 		.4byte	.LASF28
 1634 0248 01       		.byte	0x1
 1635 0249 68       		.byte	0x68
 1636 024a 6B000000 		.4byte	0x6b
 1637 024e 02       		.uleb128 0x2
 1638 024f 91       		.byte	0x91
 1639 0250 53       		.sleb128 -45
 1640 0251 00       		.byte	0
 1641 0252 0A       		.uleb128 0xa
 1642 0253 6B000000 		.4byte	0x6b
 1643 0257 65020000 		.4byte	0x265
 1644 025b 0B       		.uleb128 0xb
 1645 025c C2000000 		.4byte	0xc2
 1646 0260 03       		.uleb128 0x3
 1647 0261 91       		.byte	0x91
 1648 0262 60       		.sleb128 -32
 1649 0263 06       		.byte	0x6
 1650 0264 00       		.byte	0
 1651 0265 0A       		.uleb128 0xa
 1652 0266 6B000000 		.4byte	0x6b
 1653 026a 78020000 		.4byte	0x278
 1654 026e 0B       		.uleb128 0xb
 1655 026f C2000000 		.4byte	0xc2
 1656 0273 03       		.uleb128 0x3
 1657 0274 91       		.byte	0x91
 1658 0275 58       		.sleb128 -40
 1659 0276 06       		.byte	0x6
 1660 0277 00       		.byte	0
 1661 0278 07       		.uleb128 0x7
 1662 0279 A8020000 		.4byte	.LASF33
 1663 027d 01       		.byte	0x1
 1664 027e 82       		.byte	0x82
 1665 027f 8C000000 		.4byte	0x8c
 1666 0283 00000000 		.4byte	.LFB37
 1667 0287 F4000000 		.4byte	.LFE37-.LFB37
 1668 028b 01       		.uleb128 0x1
 1669 028c 9C       		.byte	0x9c
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 35


 1670 028d CA020000 		.4byte	0x2ca
 1671 0291 0C       		.uleb128 0xc
 1672 0292 47020000 		.4byte	.LASF34
 1673 0296 01       		.byte	0x1
 1674 0297 82       		.byte	0x82
 1675 0298 6B000000 		.4byte	0x6b
 1676 029c 02       		.uleb128 0x2
 1677 029d 91       		.byte	0x91
 1678 029e 6F       		.sleb128 -17
 1679 029f 0C       		.uleb128 0xc
 1680 02a0 3B010000 		.4byte	.LASF35
 1681 02a4 01       		.byte	0x1
 1682 02a5 82       		.byte	0x82
 1683 02a6 6B000000 		.4byte	0x6b
 1684 02aa 02       		.uleb128 0x2
 1685 02ab 91       		.byte	0x91
 1686 02ac 6E       		.sleb128 -18
 1687 02ad 09       		.uleb128 0x9
 1688 02ae 19000000 		.4byte	.LASF36
 1689 02b2 01       		.byte	0x1
 1690 02b3 83       		.byte	0x83
 1691 02b4 CA020000 		.4byte	0x2ca
 1692 02b8 02       		.uleb128 0x2
 1693 02b9 91       		.byte	0x91
 1694 02ba 74       		.sleb128 -12
 1695 02bb 09       		.uleb128 0x9
 1696 02bc FE010000 		.4byte	.LASF21
 1697 02c0 01       		.byte	0x1
 1698 02c1 84       		.byte	0x84
 1699 02c2 6B000000 		.4byte	0x6b
 1700 02c6 02       		.uleb128 0x2
 1701 02c7 91       		.byte	0x91
 1702 02c8 77       		.sleb128 -9
 1703 02c9 00       		.byte	0
 1704 02ca 0A       		.uleb128 0xa
 1705 02cb 6B000000 		.4byte	0x6b
 1706 02cf DA020000 		.4byte	0x2da
 1707 02d3 0D       		.uleb128 0xd
 1708 02d4 C2000000 		.4byte	0xc2
 1709 02d8 00       		.byte	0
 1710 02d9 00       		.byte	0
 1711 02da 07       		.uleb128 0x7
 1712 02db 64010000 		.4byte	.LASF37
 1713 02df 01       		.byte	0x1
 1714 02e0 A3       		.byte	0xa3
 1715 02e1 8C000000 		.4byte	0x8c
 1716 02e5 00000000 		.4byte	.LFB38
 1717 02e9 F6000000 		.4byte	.LFE38-.LFB38
 1718 02ed 01       		.uleb128 0x1
 1719 02ee 9C       		.byte	0x9c
 1720 02ef 48030000 		.4byte	0x348
 1721 02f3 0C       		.uleb128 0xc
 1722 02f4 96020000 		.4byte	.LASF38
 1723 02f8 01       		.byte	0x1
 1724 02f9 A3       		.byte	0xa3
 1725 02fa C9000000 		.4byte	0xc9
 1726 02fe 02       		.uleb128 0x2
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 36


 1727 02ff 91       		.byte	0x91
 1728 0300 6C       		.sleb128 -20
 1729 0301 0C       		.uleb128 0xc
 1730 0302 05020000 		.4byte	.LASF25
 1731 0306 01       		.byte	0x1
 1732 0307 A3       		.byte	0xa3
 1733 0308 C9000000 		.4byte	0xc9
 1734 030c 02       		.uleb128 0x2
 1735 030d 91       		.byte	0x91
 1736 030e 68       		.sleb128 -24
 1737 030f 0C       		.uleb128 0xc
 1738 0310 36010000 		.4byte	.LASF39
 1739 0314 01       		.byte	0x1
 1740 0315 A3       		.byte	0xa3
 1741 0316 C9000000 		.4byte	0xc9
 1742 031a 02       		.uleb128 0x2
 1743 031b 91       		.byte	0x91
 1744 031c 64       		.sleb128 -28
 1745 031d 0C       		.uleb128 0xc
 1746 031e 6F020000 		.4byte	.LASF40
 1747 0322 01       		.byte	0x1
 1748 0323 A3       		.byte	0xa3
 1749 0324 C9000000 		.4byte	0xc9
 1750 0328 02       		.uleb128 0x2
 1751 0329 91       		.byte	0x91
 1752 032a 60       		.sleb128 -32
 1753 032b 09       		.uleb128 0x9
 1754 032c FE010000 		.4byte	.LASF21
 1755 0330 01       		.byte	0x1
 1756 0331 A4       		.byte	0xa4
 1757 0332 6B000000 		.4byte	0x6b
 1758 0336 02       		.uleb128 0x2
 1759 0337 91       		.byte	0x91
 1760 0338 77       		.sleb128 -9
 1761 0339 09       		.uleb128 0x9
 1762 033a 88010000 		.4byte	.LASF41
 1763 033e 01       		.byte	0x1
 1764 033f A5       		.byte	0xa5
 1765 0340 48030000 		.4byte	0x348
 1766 0344 02       		.uleb128 0x2
 1767 0345 91       		.byte	0x91
 1768 0346 74       		.sleb128 -12
 1769 0347 00       		.byte	0
 1770 0348 0A       		.uleb128 0xa
 1771 0349 6B000000 		.4byte	0x6b
 1772 034d 58030000 		.4byte	0x358
 1773 0351 0D       		.uleb128 0xd
 1774 0352 C2000000 		.4byte	0xc2
 1775 0356 01       		.byte	0x1
 1776 0357 00       		.byte	0
 1777 0358 07       		.uleb128 0x7
 1778 0359 3A020000 		.4byte	.LASF42
 1779 035d 01       		.byte	0x1
 1780 035e D8       		.byte	0xd8
 1781 035f 8C000000 		.4byte	0x8c
 1782 0363 00000000 		.4byte	.LFB39
 1783 0367 A8000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 37


 1784 036b 01       		.uleb128 0x1
 1785 036c 9C       		.byte	0x9c
 1786 036d 9C030000 		.4byte	0x39c
 1787 0371 0C       		.uleb128 0xc
 1788 0372 E2010000 		.4byte	.LASF28
 1789 0376 01       		.byte	0x1
 1790 0377 D8       		.byte	0xd8
 1791 0378 9C030000 		.4byte	0x39c
 1792 037c 02       		.uleb128 0x2
 1793 037d 91       		.byte	0x91
 1794 037e 64       		.sleb128 -28
 1795 037f 09       		.uleb128 0x9
 1796 0380 88010000 		.4byte	.LASF41
 1797 0384 01       		.byte	0x1
 1798 0385 DA       		.byte	0xda
 1799 0386 48030000 		.4byte	0x348
 1800 038a 02       		.uleb128 0x2
 1801 038b 91       		.byte	0x91
 1802 038c 74       		.sleb128 -12
 1803 038d 09       		.uleb128 0x9
 1804 038e 65000000 		.4byte	.LASF43
 1805 0392 01       		.byte	0x1
 1806 0393 DB       		.byte	0xdb
 1807 0394 A2030000 		.4byte	0x3a2
 1808 0398 02       		.uleb128 0x2
 1809 0399 91       		.byte	0x91
 1810 039a 6C       		.sleb128 -20
 1811 039b 00       		.byte	0
 1812 039c 05       		.uleb128 0x5
 1813 039d 04       		.byte	0x4
 1814 039e A2000000 		.4byte	0xa2
 1815 03a2 0A       		.uleb128 0xa
 1816 03a3 81000000 		.4byte	0x81
 1817 03a7 B2030000 		.4byte	0x3b2
 1818 03ab 0D       		.uleb128 0xd
 1819 03ac C2000000 		.4byte	0xc2
 1820 03b0 01       		.byte	0x1
 1821 03b1 00       		.byte	0
 1822 03b2 07       		.uleb128 0x7
 1823 03b3 9D020000 		.4byte	.LASF44
 1824 03b7 01       		.byte	0x1
 1825 03b8 F1       		.byte	0xf1
 1826 03b9 8C000000 		.4byte	0x8c
 1827 03bd 00000000 		.4byte	.LFB40
 1828 03c1 AA000000 		.4byte	.LFE40-.LFB40
 1829 03c5 01       		.uleb128 0x1
 1830 03c6 9C       		.byte	0x9c
 1831 03c7 04040000 		.4byte	0x404
 1832 03cb 0C       		.uleb128 0xc
 1833 03cc 47020000 		.4byte	.LASF34
 1834 03d0 01       		.byte	0x1
 1835 03d1 F1       		.byte	0xf1
 1836 03d2 6B000000 		.4byte	0x6b
 1837 03d6 02       		.uleb128 0x2
 1838 03d7 91       		.byte	0x91
 1839 03d8 6F       		.sleb128 -17
 1840 03d9 0C       		.uleb128 0xc
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 38


 1841 03da 7A020000 		.4byte	.LASF45
 1842 03de 01       		.byte	0x1
 1843 03df F1       		.byte	0xf1
 1844 03e0 04040000 		.4byte	0x404
 1845 03e4 02       		.uleb128 0x2
 1846 03e5 91       		.byte	0x91
 1847 03e6 68       		.sleb128 -24
 1848 03e7 09       		.uleb128 0x9
 1849 03e8 FE010000 		.4byte	.LASF21
 1850 03ec 01       		.byte	0x1
 1851 03ed F2       		.byte	0xf2
 1852 03ee 81000000 		.4byte	0x81
 1853 03f2 02       		.uleb128 0x2
 1854 03f3 91       		.byte	0x91
 1855 03f4 74       		.sleb128 -12
 1856 03f5 09       		.uleb128 0x9
 1857 03f6 4D020000 		.4byte	.LASF46
 1858 03fa 01       		.byte	0x1
 1859 03fb F3       		.byte	0xf3
 1860 03fc CA020000 		.4byte	0x2ca
 1861 0400 02       		.uleb128 0x2
 1862 0401 91       		.byte	0x91
 1863 0402 70       		.sleb128 -16
 1864 0403 00       		.byte	0
 1865 0404 05       		.uleb128 0x5
 1866 0405 04       		.byte	0x4
 1867 0406 97000000 		.4byte	0x97
 1868 040a 09       		.uleb128 0x9
 1869 040b 31010000 		.4byte	.LASF47
 1870 040f 01       		.byte	0x1
 1871 0410 1C       		.byte	0x1c
 1872 0411 5D000000 		.4byte	0x5d
 1873 0415 05       		.uleb128 0x5
 1874 0416 03       		.byte	0x3
 1875 0417 00000000 		.4byte	size
 1876 041b 0E       		.uleb128 0xe
 1877 041c A5010000 		.4byte	.LASF52
 1878 0420 01       		.byte	0x1
 1879 0421 17       		.byte	0x17
 1880 0422 6B000000 		.4byte	0x6b
 1881 0426 05       		.uleb128 0x5
 1882 0427 03       		.byte	0x3
 1883 0428 00000000 		.4byte	irrigationStatus
 1884 042c 00       		.byte	0
 1885              		.section	.debug_abbrev,"",%progbits
 1886              	.Ldebug_abbrev0:
 1887 0000 01       		.uleb128 0x1
 1888 0001 11       		.uleb128 0x11
 1889 0002 01       		.byte	0x1
 1890 0003 25       		.uleb128 0x25
 1891 0004 0E       		.uleb128 0xe
 1892 0005 13       		.uleb128 0x13
 1893 0006 0B       		.uleb128 0xb
 1894 0007 03       		.uleb128 0x3
 1895 0008 0E       		.uleb128 0xe
 1896 0009 1B       		.uleb128 0x1b
 1897 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 39


 1898 000b 55       		.uleb128 0x55
 1899 000c 17       		.uleb128 0x17
 1900 000d 11       		.uleb128 0x11
 1901 000e 01       		.uleb128 0x1
 1902 000f 10       		.uleb128 0x10
 1903 0010 17       		.uleb128 0x17
 1904 0011 00       		.byte	0
 1905 0012 00       		.byte	0
 1906 0013 02       		.uleb128 0x2
 1907 0014 24       		.uleb128 0x24
 1908 0015 00       		.byte	0
 1909 0016 0B       		.uleb128 0xb
 1910 0017 0B       		.uleb128 0xb
 1911 0018 3E       		.uleb128 0x3e
 1912 0019 0B       		.uleb128 0xb
 1913 001a 03       		.uleb128 0x3
 1914 001b 0E       		.uleb128 0xe
 1915 001c 00       		.byte	0
 1916 001d 00       		.byte	0
 1917 001e 03       		.uleb128 0x3
 1918 001f 24       		.uleb128 0x24
 1919 0020 00       		.byte	0
 1920 0021 0B       		.uleb128 0xb
 1921 0022 0B       		.uleb128 0xb
 1922 0023 3E       		.uleb128 0x3e
 1923 0024 0B       		.uleb128 0xb
 1924 0025 03       		.uleb128 0x3
 1925 0026 08       		.uleb128 0x8
 1926 0027 00       		.byte	0
 1927 0028 00       		.byte	0
 1928 0029 04       		.uleb128 0x4
 1929 002a 16       		.uleb128 0x16
 1930 002b 00       		.byte	0
 1931 002c 03       		.uleb128 0x3
 1932 002d 0E       		.uleb128 0xe
 1933 002e 3A       		.uleb128 0x3a
 1934 002f 0B       		.uleb128 0xb
 1935 0030 3B       		.uleb128 0x3b
 1936 0031 0B       		.uleb128 0xb
 1937 0032 49       		.uleb128 0x49
 1938 0033 13       		.uleb128 0x13
 1939 0034 00       		.byte	0
 1940 0035 00       		.byte	0
 1941 0036 05       		.uleb128 0x5
 1942 0037 0F       		.uleb128 0xf
 1943 0038 00       		.byte	0
 1944 0039 0B       		.uleb128 0xb
 1945 003a 0B       		.uleb128 0xb
 1946 003b 49       		.uleb128 0x49
 1947 003c 13       		.uleb128 0x13
 1948 003d 00       		.byte	0
 1949 003e 00       		.byte	0
 1950 003f 06       		.uleb128 0x6
 1951 0040 2E       		.uleb128 0x2e
 1952 0041 00       		.byte	0
 1953 0042 3F       		.uleb128 0x3f
 1954 0043 19       		.uleb128 0x19
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 40


 1955 0044 03       		.uleb128 0x3
 1956 0045 0E       		.uleb128 0xe
 1957 0046 3A       		.uleb128 0x3a
 1958 0047 0B       		.uleb128 0xb
 1959 0048 3B       		.uleb128 0x3b
 1960 0049 0B       		.uleb128 0xb
 1961 004a 27       		.uleb128 0x27
 1962 004b 19       		.uleb128 0x19
 1963 004c 11       		.uleb128 0x11
 1964 004d 01       		.uleb128 0x1
 1965 004e 12       		.uleb128 0x12
 1966 004f 06       		.uleb128 0x6
 1967 0050 40       		.uleb128 0x40
 1968 0051 18       		.uleb128 0x18
 1969 0052 9642     		.uleb128 0x2116
 1970 0054 19       		.uleb128 0x19
 1971 0055 00       		.byte	0
 1972 0056 00       		.byte	0
 1973 0057 07       		.uleb128 0x7
 1974 0058 2E       		.uleb128 0x2e
 1975 0059 01       		.byte	0x1
 1976 005a 3F       		.uleb128 0x3f
 1977 005b 19       		.uleb128 0x19
 1978 005c 03       		.uleb128 0x3
 1979 005d 0E       		.uleb128 0xe
 1980 005e 3A       		.uleb128 0x3a
 1981 005f 0B       		.uleb128 0xb
 1982 0060 3B       		.uleb128 0x3b
 1983 0061 0B       		.uleb128 0xb
 1984 0062 27       		.uleb128 0x27
 1985 0063 19       		.uleb128 0x19
 1986 0064 49       		.uleb128 0x49
 1987 0065 13       		.uleb128 0x13
 1988 0066 11       		.uleb128 0x11
 1989 0067 01       		.uleb128 0x1
 1990 0068 12       		.uleb128 0x12
 1991 0069 06       		.uleb128 0x6
 1992 006a 40       		.uleb128 0x40
 1993 006b 18       		.uleb128 0x18
 1994 006c 9642     		.uleb128 0x2116
 1995 006e 19       		.uleb128 0x19
 1996 006f 01       		.uleb128 0x1
 1997 0070 13       		.uleb128 0x13
 1998 0071 00       		.byte	0
 1999 0072 00       		.byte	0
 2000 0073 08       		.uleb128 0x8
 2001 0074 05       		.uleb128 0x5
 2002 0075 00       		.byte	0
 2003 0076 03       		.uleb128 0x3
 2004 0077 08       		.uleb128 0x8
 2005 0078 3A       		.uleb128 0x3a
 2006 0079 0B       		.uleb128 0xb
 2007 007a 3B       		.uleb128 0x3b
 2008 007b 0B       		.uleb128 0xb
 2009 007c 49       		.uleb128 0x49
 2010 007d 13       		.uleb128 0x13
 2011 007e 02       		.uleb128 0x2
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 41


 2012 007f 18       		.uleb128 0x18
 2013 0080 00       		.byte	0
 2014 0081 00       		.byte	0
 2015 0082 09       		.uleb128 0x9
 2016 0083 34       		.uleb128 0x34
 2017 0084 00       		.byte	0
 2018 0085 03       		.uleb128 0x3
 2019 0086 0E       		.uleb128 0xe
 2020 0087 3A       		.uleb128 0x3a
 2021 0088 0B       		.uleb128 0xb
 2022 0089 3B       		.uleb128 0x3b
 2023 008a 0B       		.uleb128 0xb
 2024 008b 49       		.uleb128 0x49
 2025 008c 13       		.uleb128 0x13
 2026 008d 02       		.uleb128 0x2
 2027 008e 18       		.uleb128 0x18
 2028 008f 00       		.byte	0
 2029 0090 00       		.byte	0
 2030 0091 0A       		.uleb128 0xa
 2031 0092 01       		.uleb128 0x1
 2032 0093 01       		.byte	0x1
 2033 0094 49       		.uleb128 0x49
 2034 0095 13       		.uleb128 0x13
 2035 0096 01       		.uleb128 0x1
 2036 0097 13       		.uleb128 0x13
 2037 0098 00       		.byte	0
 2038 0099 00       		.byte	0
 2039 009a 0B       		.uleb128 0xb
 2040 009b 21       		.uleb128 0x21
 2041 009c 00       		.byte	0
 2042 009d 49       		.uleb128 0x49
 2043 009e 13       		.uleb128 0x13
 2044 009f 2F       		.uleb128 0x2f
 2045 00a0 18       		.uleb128 0x18
 2046 00a1 00       		.byte	0
 2047 00a2 00       		.byte	0
 2048 00a3 0C       		.uleb128 0xc
 2049 00a4 05       		.uleb128 0x5
 2050 00a5 00       		.byte	0
 2051 00a6 03       		.uleb128 0x3
 2052 00a7 0E       		.uleb128 0xe
 2053 00a8 3A       		.uleb128 0x3a
 2054 00a9 0B       		.uleb128 0xb
 2055 00aa 3B       		.uleb128 0x3b
 2056 00ab 0B       		.uleb128 0xb
 2057 00ac 49       		.uleb128 0x49
 2058 00ad 13       		.uleb128 0x13
 2059 00ae 02       		.uleb128 0x2
 2060 00af 18       		.uleb128 0x18
 2061 00b0 00       		.byte	0
 2062 00b1 00       		.byte	0
 2063 00b2 0D       		.uleb128 0xd
 2064 00b3 21       		.uleb128 0x21
 2065 00b4 00       		.byte	0
 2066 00b5 49       		.uleb128 0x49
 2067 00b6 13       		.uleb128 0x13
 2068 00b7 2F       		.uleb128 0x2f
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 42


 2069 00b8 0B       		.uleb128 0xb
 2070 00b9 00       		.byte	0
 2071 00ba 00       		.byte	0
 2072 00bb 0E       		.uleb128 0xe
 2073 00bc 34       		.uleb128 0x34
 2074 00bd 00       		.byte	0
 2075 00be 03       		.uleb128 0x3
 2076 00bf 0E       		.uleb128 0xe
 2077 00c0 3A       		.uleb128 0x3a
 2078 00c1 0B       		.uleb128 0xb
 2079 00c2 3B       		.uleb128 0x3b
 2080 00c3 0B       		.uleb128 0xb
 2081 00c4 49       		.uleb128 0x49
 2082 00c5 13       		.uleb128 0x13
 2083 00c6 3F       		.uleb128 0x3f
 2084 00c7 19       		.uleb128 0x19
 2085 00c8 02       		.uleb128 0x2
 2086 00c9 18       		.uleb128 0x18
 2087 00ca 00       		.byte	0
 2088 00cb 00       		.byte	0
 2089 00cc 00       		.byte	0
 2090              		.section	.debug_aranges,"",%progbits
 2091 0000 54000000 		.4byte	0x54
 2092 0004 0200     		.2byte	0x2
 2093 0006 00000000 		.4byte	.Ldebug_info0
 2094 000a 04       		.byte	0x4
 2095 000b 00       		.byte	0
 2096 000c 0000     		.2byte	0
 2097 000e 0000     		.2byte	0
 2098 0010 00000000 		.4byte	.LFB33
 2099 0014 10000000 		.4byte	.LFE33-.LFB33
 2100 0018 00000000 		.4byte	.LFB34
 2101 001c 7C010000 		.4byte	.LFE34-.LFB34
 2102 0020 00000000 		.4byte	.LFB35
 2103 0024 7C010000 		.4byte	.LFE35-.LFB35
 2104 0028 00000000 		.4byte	.LFB36
 2105 002c 7C010000 		.4byte	.LFE36-.LFB36
 2106 0030 00000000 		.4byte	.LFB37
 2107 0034 F4000000 		.4byte	.LFE37-.LFB37
 2108 0038 00000000 		.4byte	.LFB38
 2109 003c F6000000 		.4byte	.LFE38-.LFB38
 2110 0040 00000000 		.4byte	.LFB39
 2111 0044 A8000000 		.4byte	.LFE39-.LFB39
 2112 0048 00000000 		.4byte	.LFB40
 2113 004c AA000000 		.4byte	.LFE40-.LFB40
 2114 0050 00000000 		.4byte	0
 2115 0054 00000000 		.4byte	0
 2116              		.section	.debug_ranges,"",%progbits
 2117              	.Ldebug_ranges0:
 2118 0000 00000000 		.4byte	.LFB33
 2119 0004 10000000 		.4byte	.LFE33
 2120 0008 00000000 		.4byte	.LFB34
 2121 000c 7C010000 		.4byte	.LFE34
 2122 0010 00000000 		.4byte	.LFB35
 2123 0014 7C010000 		.4byte	.LFE35
 2124 0018 00000000 		.4byte	.LFB36
 2125 001c 7C010000 		.4byte	.LFE36
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 43


 2126 0020 00000000 		.4byte	.LFB37
 2127 0024 F4000000 		.4byte	.LFE37
 2128 0028 00000000 		.4byte	.LFB38
 2129 002c F6000000 		.4byte	.LFE38
 2130 0030 00000000 		.4byte	.LFB39
 2131 0034 A8000000 		.4byte	.LFE39
 2132 0038 00000000 		.4byte	.LFB40
 2133 003c AA000000 		.4byte	.LFE40
 2134 0040 00000000 		.4byte	0
 2135 0044 00000000 		.4byte	0
 2136              		.section	.debug_line,"",%progbits
 2137              	.Ldebug_line0:
 2138 0000 A1010000 		.section	.debug_str,"MS",%progbits,1
 2138      02004800 
 2138      00000201 
 2138      FB0E0D00 
 2138      01010101 
 2139              	.LASF32:
 2140 0000 7475726E 		.ascii	"turnOffVent\000"
 2140      4F666656 
 2140      656E7400 
 2141              	.LASF23:
 2142 000c 61646A75 		.ascii	"adjustWindow\000"
 2142      73745769 
 2142      6E646F77 
 2142      00
 2143              	.LASF36:
 2144 0019 69727269 		.ascii	"irriTransfer\000"
 2144      5472616E 
 2144      73666572 
 2144      00
 2145              	.LASF29:
 2146 0026 61646A75 		.ascii	"adjustVentilation\000"
 2146      73745665 
 2146      6E74696C 
 2146      6174696F 
 2146      6E00
 2147              	.LASF49:
 2148 0038 2E5C4932 		.ascii	".\\I2C_Class.c\000"
 2148      435F436C 
 2148      6173732E 
 2148      6300
 2149              	.LASF3:
 2150 0046 73686F72 		.ascii	"short unsigned int\000"
 2150      7420756E 
 2150      7369676E 
 2150      65642069 
 2150      6E7400
 2151              	.LASF27:
 2152 0059 7475726E 		.ascii	"turnOffHeat\000"
 2152      4F666648 
 2152      65617400 
 2153              	.LASF43:
 2154 0065 6572726F 		.ascii	"errorStatus\000"
 2154      72537461 
 2154      74757300 
 2155              	.LASF9:
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 44


 2156 0071 75696E74 		.ascii	"uint8\000"
 2156      3800
 2157              	.LASF50:
 2158 0077 463A5C44 		.ascii	"F:\\Dropbox\\PRJ3\\LaTeX\\src\\PSoC_Master\\PSoC_Ma"
 2158      726F7062 
 2158      6F785C50 
 2158      524A335C 
 2158      4C615465 
 2159 00a4 73746572 		.ascii	"ster.cydsn\000"
 2159      2E637964 
 2159      736E00
 2160              	.LASF15:
 2161 00af 666C6F61 		.ascii	"float\000"
 2161      7400
 2162              	.LASF48:
 2163 00b5 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2163      4320342E 
 2163      382E3420 
 2163      32303134 
 2163      30353236 
 2164 00e8 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2164      20726576 
 2164      6973696F 
 2164      6E203231 
 2164      31333538 
 2165 011b 30202D66 		.ascii	"0 -ffunction-sections\000"
 2165      66756E63 
 2165      74696F6E 
 2165      2D736563 
 2165      74696F6E 
 2166              	.LASF47:
 2167 0131 73697A65 		.ascii	"size\000"
 2167      00
 2168              	.LASF39:
 2169 0136 76656E74 		.ascii	"vent\000"
 2169      00
 2170              	.LASF35:
 2171 013b 6F6E4F66 		.ascii	"onOff\000"
 2171      6600
 2172              	.LASF22:
 2173 0141 74656D70 		.ascii	"tempWindow\000"
 2173      57696E64 
 2173      6F7700
 2174              	.LASF13:
 2175 014c 696E7431 		.ascii	"int16\000"
 2175      3600
 2176              	.LASF5:
 2177 0152 6C6F6E67 		.ascii	"long unsigned int\000"
 2177      20756E73 
 2177      69676E65 
 2177      6420696E 
 2177      7400
 2178              	.LASF37:
 2179 0164 67657441 		.ascii	"getActuatorStatus\000"
 2179      63747561 
 2179      746F7253 
 2179      74617475 
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 45


 2179      7300
 2180              	.LASF14:
 2181 0176 696E7433 		.ascii	"int32\000"
 2181      3200
 2182              	.LASF0:
 2183 017c 7369676E 		.ascii	"signed char\000"
 2183      65642063 
 2183      68617200 
 2184              	.LASF41:
 2185 0188 64617461 		.ascii	"dataget\000"
 2185      67657400 
 2186              	.LASF1:
 2187 0190 756E7369 		.ascii	"unsigned char\000"
 2187      676E6564 
 2187      20636861 
 2187      7200
 2188              	.LASF16:
 2189 019e 646F7562 		.ascii	"double\000"
 2189      6C6500
 2190              	.LASF52:
 2191 01a5 69727269 		.ascii	"irrigationStatus\000"
 2191      67617469 
 2191      6F6E5374 
 2191      61747573 
 2191      00
 2192              	.LASF20:
 2193 01b6 636C6F73 		.ascii	"closeWindow\000"
 2193      6557696E 
 2193      646F7700 
 2194              	.LASF10:
 2195 01c2 75696E74 		.ascii	"uint16\000"
 2195      313600
 2196              	.LASF12:
 2197 01c9 696E7438 		.ascii	"int8\000"
 2197      00
 2198              	.LASF11:
 2199 01ce 75696E74 		.ascii	"uint32\000"
 2199      333200
 2200              	.LASF8:
 2201 01d5 756E7369 		.ascii	"unsigned int\000"
 2201      676E6564 
 2201      20696E74 
 2201      00
 2202              	.LASF28:
 2203 01e2 74656D70 		.ascii	"temp\000"
 2203      00
 2204              	.LASF7:
 2205 01e7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2205      206C6F6E 
 2205      6720756E 
 2205      7369676E 
 2205      65642069 
 2206              	.LASF21:
 2207 01fe 72657375 		.ascii	"result\000"
 2207      6C7400
 2208              	.LASF25:
 2209 0205 68656174 		.ascii	"heat\000"
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 46


 2209      00
 2210              	.LASF19:
 2211 020a 6F70656E 		.ascii	"openWindow\000"
 2211      57696E64 
 2211      6F7700
 2212              	.LASF51:
 2213 0215 696E6974 		.ascii	"initI2C\000"
 2213      49324300 
 2214              	.LASF30:
 2215 021d 73706565 		.ascii	"speed\000"
 2215      6400
 2216              	.LASF18:
 2217 0223 73697A65 		.ascii	"sizetype\000"
 2217      74797065 
 2217      00
 2218              	.LASF6:
 2219 022c 6C6F6E67 		.ascii	"long long int\000"
 2219      206C6F6E 
 2219      6720696E 
 2219      7400
 2220              	.LASF42:
 2221 023a 67657454 		.ascii	"getTemp\000"
 2221      656D7000 
 2222              	.LASF17:
 2223 0242 63686172 		.ascii	"char\000"
 2223      00
 2224              	.LASF34:
 2225 0247 696E6465 		.ascii	"index\000"
 2225      7800
 2226              	.LASF46:
 2227 024d 736F696C 		.ascii	"soilTransfer\000"
 2227      5472616E 
 2227      73666572 
 2227      00
 2228              	.LASF26:
 2229 025a 7475726E 		.ascii	"turnHeatOn\000"
 2229      48656174 
 2229      4F6E00
 2230              	.LASF2:
 2231 0265 73686F72 		.ascii	"short int\000"
 2231      7420696E 
 2231      7400
 2232              	.LASF40:
 2233 026f 69727269 		.ascii	"irrigation\000"
 2233      67617469 
 2233      6F6E00
 2234              	.LASF45:
 2235 027a 736F696C 		.ascii	"soilHum\000"
 2235      48756D00 
 2236              	.LASF4:
 2237 0282 6C6F6E67 		.ascii	"long int\000"
 2237      20696E74 
 2237      00
 2238              	.LASF31:
 2239 028b 7475726E 		.ascii	"turnOnVent\000"
 2239      4F6E5665 
 2239      6E7400
ARM GAS  C:\Users\Bagger\AppData\Local\Temp\cc27X3la.s 			page 47


 2240              	.LASF38:
 2241 0296 77696E64 		.ascii	"window\000"
 2241      6F7700
 2242              	.LASF44:
 2243 029d 67657453 		.ascii	"getSoilHum\000"
 2243      6F696C48 
 2243      756D00
 2244              	.LASF33:
 2245 02a8 61646A75 		.ascii	"adjustIrrigation\000"
 2245      73744972 
 2245      72696761 
 2245      74696F6E 
 2245      00
 2246              	.LASF24:
 2247 02b9 61646A75 		.ascii	"adjustHeat\000"
 2247      73744865 
 2247      617400
 2248              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
